
_interrupt1:
	PUSH	DSWPAG
	PUSH	50
	PUSH	RCOUNT
	PUSH	W0
	MOV	#2, W0
	REPEAT	#12
	PUSH	[W0++]

;INTERRUPTS.c,10 :: 		void interrupt1() iv 0x000003C ics ICS_AUTO {
;INTERRUPTS.c,11 :: 		IFS1.INT1IF = 0;
	BCLR.B	IFS1, #4
;INTERRUPTS.c,12 :: 		GET_CURRENT_POS();
	CALL	_GET_CURRENT_POS
;INTERRUPTS.c,13 :: 		INTCON1.INT1EP = 1;
	BSET.B	INTCON1, #1
;INTERRUPTS.c,14 :: 		delay_ms(1000);
	MOV	#41, W8
	MOV	#45239, W7
L_interrupt10:
	DEC	W7
	BRA NZ	L_interrupt10
	DEC	W8
	BRA NZ	L_interrupt10
;INTERRUPTS.c,21 :: 		}
L_end_interrupt1:
	MOV	#26, W0
	REPEAT	#12
	POP	[W0--]
	POP	W0
	POP	RCOUNT
	POP	50
	POP	DSWPAG
	RETFIE
; end of _interrupt1

_interrupt2:
	PUSH	DSWPAG
	PUSH	50
	PUSH	RCOUNT
	PUSH	W0
	MOV	#2, W0
	REPEAT	#12
	PUSH	[W0++]

;INTERRUPTS.c,24 :: 		void interrupt2() iv 0x000004E ics ICS_AUTO {
;INTERRUPTS.c,26 :: 		IFS1.INT2IF = 0;
	PUSH	W10
	PUSH	W11
	BCLR	IFS1, #13
;INTERRUPTS.c,28 :: 		if (PORTD.F4 == 1) {
	BTSS	PORTD, #4
	GOTO	L_interrupt22
;INTERRUPTS.c,30 :: 		MOTOR_COMMAND(STOP, sizeof(STOP));
	MOV	#9, W11
	MOV	#lo_addr(INTERRUPTS_STOP), W10
	CALL	_MOTOR_COMMAND
;INTERRUPTS.c,33 :: 		IEC1.INT2IE = 0;
	BCLR	IEC1, #13
;INTERRUPTS.c,34 :: 		IEC3.INT3IE = 1;
	BSET.B	IEC3, #5
;INTERRUPTS.c,35 :: 		}
L_interrupt22:
;INTERRUPTS.c,36 :: 		}
L_end_interrupt2:
	POP	W11
	POP	W10
	MOV	#26, W0
	REPEAT	#12
	POP	[W0--]
	POP	W0
	POP	RCOUNT
	POP	50
	POP	DSWPAG
	RETFIE
; end of _interrupt2

_interrupt3:
	PUSH	DSWPAG
	PUSH	50
	PUSH	RCOUNT
	PUSH	W0
	MOV	#2, W0
	REPEAT	#12
	PUSH	[W0++]

;INTERRUPTS.c,38 :: 		void interrupt3() iv 0x000007E ics ICS_AUTO {
;INTERRUPTS.c,40 :: 		IFS1.INT3IF = 0; // Clear interrupt saftey 2 bit
	PUSH	W10
	PUSH	W11
	BCLR.B	IFS1, #5
;INTERRUPTS.c,42 :: 		if (PORTD.F5 == 1) {
	BTSS	PORTD, #5
	GOTO	L_interrupt33
;INTERRUPTS.c,44 :: 		MOTOR_COMMAND(STOP, sizeof(STOP));
	MOV	#9, W11
	MOV	#lo_addr(INTERRUPTS_STOP), W10
	CALL	_MOTOR_COMMAND
;INTERRUPTS.c,47 :: 		IEC3.INT3IE = 0; // Disable interrupt saftey 2
	BCLR.B	IEC3, #5
;INTERRUPTS.c,48 :: 		}
L_interrupt33:
;INTERRUPTS.c,51 :: 		}
L_end_interrupt3:
	POP	W11
	POP	W10
	MOV	#26, W0
	REPEAT	#12
	POP	[W0--]
	POP	W0
	POP	RCOUNT
	POP	50
	POP	DSWPAG
	RETFIE
; end of _interrupt3
