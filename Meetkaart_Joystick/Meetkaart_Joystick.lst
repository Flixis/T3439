;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 4-6-2020 13:50:33
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x0000000409B8  	GOTO	_main
0x0004	0x000000  	0
0x0006	0x000000  	0
0x0008	0x000000  	0
0x000A	0x000000  	0
0x000C	0x000000  	0
0x000E	0x000000  	0
0x0010	0x000000  	0
0x0012	0x000000  	0
0x0014	0x000000  	0
0x0016	0x000000  	0
0x0018	0x000000  	0
0x001A	0x000000  	0
0x001C	0x000000  	0
0x001E	0x000000  	0
0x0020	0x000000  	0
0x0022	0x000000  	0
0x0024	0x000000  	0
0x0026	0x000000  	0
0x0028	0x000000  	0
0x002A	0x000000  	0
0x002C	0x000000  	0
0x002E	0x000000  	0
0x0030	0x000000  	0
0x0032	0x000000  	0
0x0034	0x000000  	0
0x0036	0x000000  	0
0x0038	0x000000  	0
0x003A	0x000000  	0
0x003C	0x000000  	0
0x003E	0x000000  	0
0x0040	0x000000  	0
0x0042	0x000000  	0
0x0044	0x000000  	0
0x0046	0x000000  	0
0x0048	0x000000  	0
0x004A	0x000000  	0
0x004C	0x000000  	0
0x004E	0x000000  	0
0x0050	0x000000  	0
0x0052	0x000000  	0
0x0054	0x000000  	0
0x0056	0x000000  	0
0x0058	0x000000  	0
0x005A	0x000000  	0
0x005C	0x000000  	0
0x005E	0x000000  	0
0x0060	0x000000  	0
0x0062	0x000000  	0
0x0064	0x000000  	0
0x0066	0x000000  	0
0x0068	0x000000  	0
0x006A	0x000000  	0
0x006C	0x000000  	0
0x006E	0x000000  	0
0x0070	0x000000  	0
0x0072	0x000000  	0
0x0074	0x000000  	0
0x0076	0x000000  	0
0x0078	0x000000  	0
0x007A	0x000000  	0
0x007C	0x000000  	0
0x007E	0x000000  	0
0x0080	0x000000  	0
0x0082	0x000000  	0
0x0084	0x000000  	0
0x0086	0x000000  	0
0x0088	0x000000  	0
0x008A	0x000000  	0
0x008C	0x000000  	0
0x008E	0x000000  	0
0x0090	0x000000  	0
0x0092	0x000000  	0
0x0094	0x000000  	0
0x0096	0x000000  	0
0x0098	0x000000  	0
0x009A	0x000000  	0
0x009C	0x000000  	0
0x009E	0x000000  	0
0x00A0	0x000000  	0
0x00A2	0x000000  	0
0x00A4	0x000000  	0
0x00A6	0x000000  	0
0x00A8	0x000000  	0
0x00AA	0x000000  	0
0x00AC	0x000000  	0
0x00AE	0x000000  	0
0x00B0	0x000000  	0
0x00B2	0x000000  	0
0x00B4	0x000000  	0
0x00B6	0x000000  	0
0x00B8	0x000000  	0
0x00BA	0x000000  	0
0x00BC	0x000000  	0
0x00BE	0x000000  	0
0x00C0	0x000000  	0
0x00C2	0x000000  	0
0x00C4	0x000000  	0
0x00C6	0x000000  	0
0x00C8	0x000000  	0
0x00CA	0x000000  	0
0x00CC	0x000000  	0
0x00CE	0x000000  	0
0x00D0	0x000000  	0
0x00D2	0x000000  	0
0x00D4	0x000000  	0
0x00D6	0x000000  	0
0x00D8	0x000000  	0
0x00DA	0x000000  	0
0x00DC	0x000000  	0
0x00DE	0x000000  	0
0x00E0	0x000000  	0
0x00E2	0x000000  	0
0x00E4	0x000000  	0
0x00E6	0x000000  	0
0x00E8	0x000000  	0
0x00EA	0x000000  	0
0x00EC	0x000000  	0
0x00EE	0x000000  	0
0x00F0	0x000000  	0
0x00F2	0x000000  	0
0x00F4	0x000000  	0
0x00F6	0x000000  	0
0x00F8	0x000000  	0
0x00FA	0x000000  	0
0x00FC	0x000000  	0
0x00FE	0x000000  	0
0x0100	0x000000  	0
0x0102	0x000000  	0
0x0104	0x000000  	0
0x0106	0x000000  	0
0x0108	0x000000  	0
0x010A	0x000000  	0
0x010C	0x000000  	0
0x010E	0x000000  	0
0x0110	0x000000  	0
0x0112	0x000000  	0
0x0114	0x000000  	0
0x0116	0x000000  	0
0x0118	0x000000  	0
0x011A	0x000000  	0
0x011C	0x000000  	0
0x011E	0x000000  	0
0x0120	0x000000  	0
0x0122	0x000000  	0
0x0124	0x000000  	0
0x0126	0x000000  	0
0x0128	0x000000  	0
0x012A	0x000000  	0
0x012C	0x000000  	0
0x012E	0x000000  	0
0x0130	0x000000  	0
0x0132	0x000000  	0
0x0134	0x000000  	0
0x0136	0x000000  	0
0x0138	0x000000  	0
0x013A	0x000000  	0
0x013C	0x000000  	0
0x013E	0x000000  	0
0x0140	0x000000  	0
0x0142	0x000000  	0
0x0144	0x000000  	0
0x0146	0x000000  	0
0x0148	0x000000  	0
0x014A	0x000000  	0
0x014C	0x000000  	0
0x014E	0x000000  	0
0x0150	0x000000  	0
0x0152	0x000000  	0
0x0154	0x000000  	0
0x0156	0x000000  	0
0x0158	0x000000  	0
0x015A	0x000000  	0
0x015C	0x000000  	0
0x015E	0x000000  	0
0x0160	0x000000  	0
0x0162	0x000000  	0
0x0164	0x000000  	0
0x0166	0x000000  	0
0x0168	0x000000  	0
0x016A	0x000000  	0
0x016C	0x000000  	0
0x016E	0x000000  	0
0x0170	0x000000  	0
0x0172	0x000000  	0
0x0174	0x000000  	0
0x0176	0x000000  	0
0x0178	0x000000  	0
0x017A	0x000000  	0
0x017C	0x000000  	0
0x017E	0x000000  	0
0x0180	0x000000  	0
0x0182	0x000000  	0
0x0184	0x000000  	0
0x0186	0x000000  	0
0x0188	0x000000  	0
0x018A	0x000000  	0
0x018C	0x000000  	0
0x018E	0x000000  	0
0x0190	0x000000  	0
0x0192	0x000000  	0
0x0194	0x000000  	0
0x0196	0x000000  	0
0x0198	0x000000  	0
0x019A	0x000000  	0
0x019C	0x000000  	0
0x019E	0x000000  	0
0x01A0	0x000000  	0
0x01A2	0x000000  	0
0x01A4	0x000000  	0
0x01A6	0x000000  	0
0x01A8	0x000000  	0
0x01AA	0x000000  	0
0x01AC	0x000000  	0
0x01AE	0x000000  	0
0x01B0	0x000000  	0
0x01B2	0x000000  	0
0x01B4	0x000000  	0
0x01B6	0x000000  	0
0x01B8	0x000000  	0
0x01BA	0x000000  	0
0x01BC	0x000000  	0
0x01BE	0x000000  	0
0x01C0	0x000000  	0
0x01C2	0x000000  	0
0x01C4	0x000000  	0
0x01C6	0x000000  	0
0x01C8	0x000000  	0
0x01CA	0x000000  	0
0x01CC	0x000000  	0
0x01CE	0x000000  	0
0x01D0	0x000000  	0
0x01D2	0x000000  	0
0x01D4	0x000000  	0
0x01D6	0x000000  	0
0x01D8	0x000000  	0
0x01DA	0x000000  	0
0x01DC	0x000000  	0
0x01DE	0x000000  	0
0x01E0	0x000000  	0
0x01E2	0x000000  	0
0x01E4	0x000000  	0
0x01E6	0x000000  	0
0x01E8	0x000000  	0
0x01EA	0x000000  	0
0x01EC	0x000000  	0
0x01EE	0x000000  	0
0x01F0	0x000000  	0
0x01F2	0x000000  	0
0x01F4	0x000000  	0
0x01F6	0x000000  	0
0x01F8	0x000000  	0
0x01FA	0x000000  	0
0x01FC	0x000000  	0
0x01FE	0x000000  	0
_main:
0x09B8	0x2094CF  	MOV	#2380, W15
0x09BA	0x227FF0  	MOV	#10239, W0
0x09BC	0xB7A020  	MOV	WREG, SPLIM
0x09BE	0x202010  	MOV	#513, W0
0x09C0	0xB7A032  	MOV	WREG, DSRPAG
0x09C2	0x200040  	MOV	#4, W0
0x09C4	0xB72044  	IOR	CORCON
0x09C6	0xFA0072  	LNK	#114
0x09C8	0x000000021452  	CALL	5202
0x09CC	0x00000002145C  	CALL	5212
;MEETKAART_V1_0_joysticks.c,1 :: 		void main() {
;MEETKAART_V1_0_joysticks.c,12 :: 		int Cal_anin1 = 0;
0x09D0	0x781F8A  	PUSH	W10
0x09D2	0x781F8B  	PUSH	W11
0x09D4	0x781F8C  	PUSH	W12
0x09D6	0x781F8D  	PUSH	W13
0x09D8	0x4700E6  	ADD	W14, #6, W1
0x09DA	0x281400  	MOV	#lo_addr(?ICSmain_Cal_anin1_L0), W0
0x09DC	0x090035  	REPEAT	#53
0x09DE	0x7818B0  	MOV	[W0++], [W1++]
;MEETKAART_V1_0_joysticks.c,13 :: 		int Cal_anin2 = 44;
;MEETKAART_V1_0_joysticks.c,14 :: 		int Cal_anin3 = 56;
;MEETKAART_V1_0_joysticks.c,15 :: 		int Cal_anin4 = 62;
;MEETKAART_V1_0_joysticks.c,16 :: 		int Cal_anin5 = 44;
;MEETKAART_V1_0_joysticks.c,17 :: 		int Cal_anin6 = 62;
;MEETKAART_V1_0_joysticks.c,18 :: 		int Cal_anin7 = 44;
;MEETKAART_V1_0_joysticks.c,19 :: 		int Cal_anin8 = 56;
;MEETKAART_V1_0_joysticks.c,21 :: 		int Cal_anout1_1 = -3;
;MEETKAART_V1_0_joysticks.c,22 :: 		int Cal_anout1_2 = 0;
;MEETKAART_V1_0_joysticks.c,23 :: 		int Cal_anout1_3 = 0;
;MEETKAART_V1_0_joysticks.c,24 :: 		int Cal_anout2_1 = 0;
;MEETKAART_V1_0_joysticks.c,25 :: 		int Cal_anout2_2 = 0;
;MEETKAART_V1_0_joysticks.c,26 :: 		int Cal_anout2_3 = 0;
;MEETKAART_V1_0_joysticks.c,27 :: 		int Cal_anout3_1 = 0;
;MEETKAART_V1_0_joysticks.c,28 :: 		int Cal_anout3_2 = 0;
;MEETKAART_V1_0_joysticks.c,29 :: 		int Cal_anout3_3 = 0;
;MEETKAART_V1_0_joysticks.c,30 :: 		int Cal_anout4_1 = 0;
;MEETKAART_V1_0_joysticks.c,31 :: 		int Cal_anout4_2 = 0;
;MEETKAART_V1_0_joysticks.c,32 :: 		int Cal_anout4_3 = 0;
;MEETKAART_V1_0_joysticks.c,33 :: 		int Cal_anout5_1 = 0;
;MEETKAART_V1_0_joysticks.c,34 :: 		int Cal_anout5_2 = 0;
;MEETKAART_V1_0_joysticks.c,35 :: 		int Cal_anout5_3 = 0;
;MEETKAART_V1_0_joysticks.c,36 :: 		int Cal_anout6_1 = 0;
;MEETKAART_V1_0_joysticks.c,37 :: 		int Cal_anout6_2 = 0;
;MEETKAART_V1_0_joysticks.c,38 :: 		int Cal_anout6_3 = 0;
;MEETKAART_V1_0_joysticks.c,39 :: 		int Cal_anout7_1 = 0;
;MEETKAART_V1_0_joysticks.c,40 :: 		int Cal_anout7_2 = 0;
;MEETKAART_V1_0_joysticks.c,41 :: 		int Cal_anout7_3 = 0;
;MEETKAART_V1_0_joysticks.c,42 :: 		int Cal_anout8_1 = 0;
;MEETKAART_V1_0_joysticks.c,43 :: 		int Cal_anout8_2 = 0;
;MEETKAART_V1_0_joysticks.c,44 :: 		int Cal_anout8_3 = 0;
;MEETKAART_V1_0_joysticks.c,45 :: 		int Cal_anout9_1 = 0;
;MEETKAART_V1_0_joysticks.c,46 :: 		int Cal_anout9_2 = 0;
;MEETKAART_V1_0_joysticks.c,47 :: 		int Cal_anout9_3 = 0;
;MEETKAART_V1_0_joysticks.c,48 :: 		int Cal_anout10_1 = 0;
;MEETKAART_V1_0_joysticks.c,49 :: 		int Cal_anout10_2 = 0;
;MEETKAART_V1_0_joysticks.c,50 :: 		int Cal_anout10_3 = 0;
;MEETKAART_V1_0_joysticks.c,51 :: 		int Cal_anout11_1 = 0;
;MEETKAART_V1_0_joysticks.c,52 :: 		int Cal_anout11_2 = 0;
;MEETKAART_V1_0_joysticks.c,53 :: 		int Cal_anout11_3 = 0;
;MEETKAART_V1_0_joysticks.c,54 :: 		int Cal_anout12_1 = 0;
;MEETKAART_V1_0_joysticks.c,55 :: 		int Cal_anout12_2 = 0;
;MEETKAART_V1_0_joysticks.c,56 :: 		int Cal_anout12_3 = 0;
;MEETKAART_V1_0_joysticks.c,57 :: 		int Cal_anout13_1 = 0;
;MEETKAART_V1_0_joysticks.c,58 :: 		int Cal_anout13_2 = 0;
;MEETKAART_V1_0_joysticks.c,59 :: 		int Cal_anout13_3 = 0;
;MEETKAART_V1_0_joysticks.c,60 :: 		int Cal_anout14_1 = 0;
;MEETKAART_V1_0_joysticks.c,61 :: 		int Cal_anout14_2 = 0;
;MEETKAART_V1_0_joysticks.c,62 :: 		int Cal_anout14_3 = 0;
;MEETKAART_V1_0_joysticks.c,63 :: 		int Cal_anout15_1 = 0;
;MEETKAART_V1_0_joysticks.c,64 :: 		int Cal_anout15_2 = 0;
;MEETKAART_V1_0_joysticks.c,65 :: 		int Cal_anout15_3 = 0;
;MEETKAART_V1_0_joysticks.c,66 :: 		int Cal_anout16_1 = 0;
;MEETKAART_V1_0_joysticks.c,67 :: 		int Cal_anout16_2 = 0;
;MEETKAART_V1_0_joysticks.c,68 :: 		int Cal_anout16_3 = 0;
;MEETKAART_V1_0_joysticks.c,72 :: 		TRISB = 0xFFDF;
0x09E0	0x2FFDF0  	MOV	#65503, W0
0x09E2	0xB7A2C8  	MOV	WREG, TRISB
;MEETKAART_V1_0_joysticks.c,73 :: 		TRISC = 0xFFFF;
0x09E4	0x2FFFF0  	MOV	#65535, W0
0x09E6	0xB7A2D0  	MOV	WREG, TRISC
;MEETKAART_V1_0_joysticks.c,74 :: 		TRISD = 0xF8F4;
0x09E8	0x2F8F40  	MOV	#63732, W0
0x09EA	0xB7A2D8  	MOV	WREG, TRISD
;MEETKAART_V1_0_joysticks.c,75 :: 		TRISE = 0xFF1F;
0x09EC	0x2FF1F0  	MOV	#65311, W0
0x09EE	0xB7A2E0  	MOV	WREG, TRISE
;MEETKAART_V1_0_joysticks.c,76 :: 		TRISF = 0xBFFF;
0x09F0	0x2BFFF0  	MOV	#49151, W0
0x09F2	0xB7A2E8  	MOV	WREG, TRISF
;MEETKAART_V1_0_joysticks.c,77 :: 		TRISG = 0xFF3F;
0x09F4	0x2FF3F0  	MOV	#65343, W0
0x09F6	0xB7A2F0  	MOV	WREG, TRISG
;MEETKAART_V1_0_joysticks.c,78 :: 		ANSE = 0x0000;
0x09F8	0xEF24E8  	CLR	ANSE
;MEETKAART_V1_0_joysticks.c,79 :: 		ANSB = 0x0000;
0x09FA	0xEF24E2  	CLR	ANSB
;MEETKAART_V1_0_joysticks.c,80 :: 		ANSD = 0x0000;
0x09FC	0xEF24E6  	CLR	ANSD
;MEETKAART_V1_0_joysticks.c,81 :: 		ODCE = 0x0000;
0x09FE	0xEF22E6  	CLR	ODCE
;MEETKAART_V1_0_joysticks.c,82 :: 		LATF.F14 = 0;
0x0A00	0xA9C2ED  	BCLR	LATF, #14
;MEETKAART_V1_0_joysticks.c,84 :: 		UART1_Init(9600);
0x0A02	0x22580A  	MOV	#9600, W10
0x0A04	0x20000B  	MOV	#0, W11
0x0A06	0x07FEFD  	RCALL	_UART1_Init
;MEETKAART_V1_0_joysticks.c,85 :: 		Delay_ms(100);
0x0A08	0x200058  	MOV	#5, W8
0x0A0A	0x211AB7  	MOV	#4523, W7
L_main0:
0x0A0C	0xED200E  	DEC	W7
0x0A0E	0x3AFFFE  	BRA NZ	L_main0
0x0A10	0xED2010  	DEC	W8
0x0A12	0x3AFFFC  	BRA NZ	L_main0
;MEETKAART_V1_0_joysticks.c,87 :: 		Unlock_IOLOCK();   //Unlock pinmapping
0x0A14	0x07FFA6  	RCALL	_Unlock_IOLOCK
;MEETKAART_V1_0_joysticks.c,89 :: 		PPS_Mapping_NoLock(28, _INPUT, _U1RX);    // Mapping UART1 RX naar RP18
0x0A16	0xB3C1CC  	MOV.B	#28, W12
0x0A18	0xB3C01B  	MOV.B	#1, W11
0x0A1A	0xB3C1CA  	MOV.B	#28, W10
0x0A1C	0x07FF9B  	RCALL	_PPS_Mapping_NoLock
;MEETKAART_V1_0_joysticks.c,90 :: 		PPS_Mapping_NoLock(18, _OUTPUT, _U1TX);   // Mapping UART1 TX naar RP28
0x0A1E	0xB3C03C  	MOV.B	#3, W12
0x0A20	0xEF2016  	CLR	W11
0x0A22	0xB3C12A  	MOV.B	#18, W10
0x0A24	0x07FF97  	RCALL	_PPS_Mapping_NoLock
;MEETKAART_V1_0_joysticks.c,92 :: 		PPS_Mapping_NoLock(22, _OUTPUT, _SDO1);    //  Mapping SPI1 data out naar rp22
0x0A26	0xB3C07C  	MOV.B	#7, W12
0x0A28	0xEF2016  	CLR	W11
0x0A2A	0xB3C16A  	MOV.B	#22, W10
0x0A2C	0x07FF93  	RCALL	_PPS_Mapping_NoLock
;MEETKAART_V1_0_joysticks.c,93 :: 		PPS_Mapping_NoLock(24, _OUTPUT, _SCK1OUT);   //  Mappig SPI1 clock out naar rp24
0x0A2E	0xB3C08C  	MOV.B	#8, W12
0x0A30	0xEF2016  	CLR	W11
0x0A32	0xB3C18A  	MOV.B	#24, W10
0x0A34	0x07FF8F  	RCALL	_PPS_Mapping_NoLock
;MEETKAART_V1_0_joysticks.c,94 :: 		PPS_Mapping_NoLock(23, _INPUT, _SDI1IN);    //  Mapping SPI1
0x0A36	0xB3C11C  	MOV.B	#17, W12
0x0A38	0xB3C01B  	MOV.B	#1, W11
0x0A3A	0xB3C17A  	MOV.B	#23, W10
0x0A3C	0x07FF8B  	RCALL	_PPS_Mapping_NoLock
;MEETKAART_V1_0_joysticks.c,99 :: 		Lock_IOLOCK();    //Lock pinmapping
0x0A3E	0x07FBE0  	RCALL	_Lock_IOLOCK
;MEETKAART_V1_0_joysticks.c,104 :: 		SPI1_Init_Advanced(_SPI_MASTER, _SPI_16_BIT, _SPI_PRESCALE_SEC_8, _SPI_PRESCALE_PRI_1, _SPI_SS_DISABLE, _SPI_DATA_SAMPLE_MIDDLE, _SPI_CLK_IDLE_HIGH, _SPI_ACTIVE_2_IDLE);
0x0A40	0x20003D  	MOV	#3, W13
0x0A42	0xEF2018  	CLR	W12
0x0A44	0x20400B  	MOV	#1024, W11
0x0A46	0x20020A  	MOV	#32, W10
0x0A48	0xEF2000  	CLR	W0
0x0A4A	0x781F80  	PUSH	W0
0x0A4C	0x200400  	MOV	#64, W0
0x0A4E	0x781F80  	PUSH	W0
0x0A50	0xEF2000  	CLR	W0
0x0A52	0x781F80  	PUSH	W0
0x0A54	0xEF2000  	CLR	W0
0x0A56	0x781F80  	PUSH	W0
0x0A58	0x07FF8D  	RCALL	_SPI1_Init_Advanced
0x0A5A	0xB1008F  	SUB	#8, W15
;MEETKAART_V1_0_joysticks.c,106 :: 		Delay_ms(100);
0x0A5C	0x200058  	MOV	#5, W8
0x0A5E	0x211AB7  	MOV	#4523, W7
L_main2:
0x0A60	0xED200E  	DEC	W7
0x0A62	0x3AFFFE  	BRA NZ	L_main2
0x0A64	0xED2010  	DEC	W8
0x0A66	0x3AFFFC  	BRA NZ	L_main2
;MEETKAART_V1_0_joysticks.c,108 :: 		LATF.F14 = 1;//release reset mcp2200
0x0A68	0xA8C2ED  	BSET	LATF, #14
;MEETKAART_V1_0_joysticks.c,109 :: 		LATD.F10 = 1;//CS_1
0x0A6A	0xA842DD  	BSET	LATD, #10
;MEETKAART_V1_0_joysticks.c,110 :: 		LATD.F9 =  1;//CS_2
0x0A6C	0xA822DD  	BSET	LATD, #9
;MEETKAART_V1_0_joysticks.c,111 :: 		LATD.F0 = 1;//CS_3
0x0A6E	0xA802DC  	BSET.B	LATD, #0
;MEETKAART_V1_0_joysticks.c,112 :: 		LATD.F8 = 1;//PANIC
0x0A70	0xA802DD  	BSET	LATD, #8
;MEETKAART_V1_0_joysticks.c,114 :: 		while(1)
L_main4:
;MEETKAART_V1_0_joysticks.c,124 :: 		if (UART1_Data_Ready() ==1)
0x0A72	0x07FF9D  	RCALL	_UART1_Data_Ready
0x0A74	0xE10061  	CP	W0, #1
0x0A76	0x3A0002  	BRA NZ	L_main6
L__main110:
;MEETKAART_V1_0_joysticks.c,126 :: 		receive = UART1_Read();
0x0A78	0x07FF94  	RCALL	_UART1_Read
0x0A7A	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,127 :: 		}
L_main6:
;MEETKAART_V1_0_joysticks.c,129 :: 		if (receive == 0x01)//analoog uit 1 0V
0x0A7C	0x90400E  	MOV.B	[W14+0], W0
0x0A7E	0xE10461  	CP.B	W0, #1
0x0A80	0x3A0008  	BRA NZ	L_main7
L__main111:
;MEETKAART_V1_0_joysticks.c,131 :: 		Uart1_Write_Text("ok\r");
0x0A82	0x2090CA  	MOV	#lo_addr(?lstr1_MEETKAART_V1_0_joysticks), W10
0x0A84	0x07FEA9  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,132 :: 		receive = 0x00;
0x0A86	0xEF2000  	CLR	W0
0x0A88	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,133 :: 		LATD.F10 = 0;
0x0A8A	0xA942DD  	BCLR	LATD, #10
;MEETKAART_V1_0_joysticks.c,134 :: 		Spi1_write(0x4000);
0x0A8C	0x24000A  	MOV	#16384, W10
0x0A8E	0x07FEB5  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,135 :: 		LATD.F10 = 1;
0x0A90	0xA842DD  	BSET	LATD, #10
;MEETKAART_V1_0_joysticks.c,136 :: 		}
L_main7:
;MEETKAART_V1_0_joysticks.c,138 :: 		if (receive == 0x02)//analoog uit 1 5.0V
0x0A92	0x90400E  	MOV.B	[W14+0], W0
0x0A94	0xE10462  	CP.B	W0, #2
0x0A96	0x3A000B  	BRA NZ	L_main8
L__main112:
;MEETKAART_V1_0_joysticks.c,140 :: 		Uart1_Write_Text("ok\r");
0x0A98	0x20910A  	MOV	#lo_addr(?lstr2_MEETKAART_V1_0_joysticks), W10
0x0A9A	0x07FE9E  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,141 :: 		receive = 0x00;
0x0A9C	0xEF2000  	CLR	W0
0x0A9E	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,142 :: 		LATD.F10 = 0;
0x0AA0	0xA942DD  	BCLR	LATD, #10
;MEETKAART_V1_0_joysticks.c,143 :: 		Spi1_write(0x49C4 + Cal_anout1_1);
0x0AA2	0x249C41  	MOV	#18884, W1
0x0AA4	0x470076  	ADD	W14, #22, W0
0x0AA6	0x408010  	ADD	W1, [W0], W0
0x0AA8	0x780500  	MOV	W0, W10
0x0AAA	0x07FEA7  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,144 :: 		LATD.F10 = 1;
0x0AAC	0xA842DD  	BSET	LATD, #10
;MEETKAART_V1_0_joysticks.c,145 :: 		}
L_main8:
;MEETKAART_V1_0_joysticks.c,147 :: 		if (receive == 0x03)//analoog uit 1 6.418V
0x0AAE	0x90400E  	MOV.B	[W14+0], W0
0x0AB0	0xE10463  	CP.B	W0, #3
0x0AB2	0x3A000B  	BRA NZ	L_main9
L__main113:
;MEETKAART_V1_0_joysticks.c,149 :: 		Uart1_Write_Text("ok\r");
0x0AB4	0x20900A  	MOV	#lo_addr(?lstr3_MEETKAART_V1_0_joysticks), W10
0x0AB6	0x07FE90  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,150 :: 		receive = 0x00;
0x0AB8	0xEF2000  	CLR	W0
0x0ABA	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,151 :: 		LATD.F10 = 0;
0x0ABC	0xA942DD  	BCLR	LATD, #10
;MEETKAART_V1_0_joysticks.c,152 :: 		Spi1_write(0x4C89 + Cal_anout1_2);
0x0ABE	0x24C891  	MOV	#19593, W1
0x0AC0	0x470078  	ADD	W14, #24, W0
0x0AC2	0x408010  	ADD	W1, [W0], W0
0x0AC4	0x780500  	MOV	W0, W10
0x0AC6	0x07FE99  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,153 :: 		LATD.F10 = 1;
0x0AC8	0xA842DD  	BSET	LATD, #10
;MEETKAART_V1_0_joysticks.c,154 :: 		}
L_main9:
;MEETKAART_V1_0_joysticks.c,155 :: 		if (receive == 0x04)//analoog uit 2 0V
0x0ACA	0x90400E  	MOV.B	[W14+0], W0
0x0ACC	0xE10464  	CP.B	W0, #4
0x0ACE	0x3A0008  	BRA NZ	L_main10
L__main114:
;MEETKAART_V1_0_joysticks.c,157 :: 		Uart1_Write_Text("ok\r");
0x0AD0	0x20908A  	MOV	#lo_addr(?lstr4_MEETKAART_V1_0_joysticks), W10
0x0AD2	0x07FE82  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,158 :: 		receive = 0x00;
0x0AD4	0xEF2000  	CLR	W0
0x0AD6	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,159 :: 		LATD.F10 = 0;
0x0AD8	0xA942DD  	BCLR	LATD, #10
;MEETKAART_V1_0_joysticks.c,160 :: 		Spi1_write(0x5000);
0x0ADA	0x25000A  	MOV	#20480, W10
0x0ADC	0x07FE8E  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,161 :: 		LATD.F10 = 1;
0x0ADE	0xA842DD  	BSET	LATD, #10
;MEETKAART_V1_0_joysticks.c,162 :: 		}
L_main10:
;MEETKAART_V1_0_joysticks.c,164 :: 		if (receive == 0x05)//analoog uit 2 5.0V
0x0AE0	0x90400E  	MOV.B	[W14+0], W0
0x0AE2	0xE10465  	CP.B	W0, #5
0x0AE4	0x3A000B  	BRA NZ	L_main11
L__main115:
;MEETKAART_V1_0_joysticks.c,166 :: 		Uart1_Write_Text("ok\r");
0x0AE6	0x208F0A  	MOV	#lo_addr(?lstr5_MEETKAART_V1_0_joysticks), W10
0x0AE8	0x07FE77  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,167 :: 		receive = 0x00;
0x0AEA	0xEF2000  	CLR	W0
0x0AEC	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,168 :: 		LATD.F10 = 0;
0x0AEE	0xA942DD  	BCLR	LATD, #10
;MEETKAART_V1_0_joysticks.c,169 :: 		Spi1_write(0x59C4 + Cal_anout2_1);
0x0AF0	0x259C41  	MOV	#22980, W1
0x0AF2	0x47007C  	ADD	W14, #28, W0
0x0AF4	0x408010  	ADD	W1, [W0], W0
0x0AF6	0x780500  	MOV	W0, W10
0x0AF8	0x07FE80  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,170 :: 		LATD.F10 = 1;
0x0AFA	0xA842DD  	BSET	LATD, #10
;MEETKAART_V1_0_joysticks.c,171 :: 		}
L_main11:
;MEETKAART_V1_0_joysticks.c,173 :: 		if (receive == 0x06)//analoog uit 2 6.418V
0x0AFC	0x90400E  	MOV.B	[W14+0], W0
0x0AFE	0xE10466  	CP.B	W0, #6
0x0B00	0x3A000B  	BRA NZ	L_main12
L__main116:
;MEETKAART_V1_0_joysticks.c,175 :: 		Uart1_Write_Text("ok\r");
0x0B02	0x208F8A  	MOV	#lo_addr(?lstr6_MEETKAART_V1_0_joysticks), W10
0x0B04	0x07FE69  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,176 :: 		receive = 0x00;
0x0B06	0xEF2000  	CLR	W0
0x0B08	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,177 :: 		LATD.F10 = 0;
0x0B0A	0xA942DD  	BCLR	LATD, #10
;MEETKAART_V1_0_joysticks.c,178 :: 		Spi1_write(0x5C89 + Cal_anout2_2);
0x0B0C	0x25C891  	MOV	#23689, W1
0x0B0E	0x47007E  	ADD	W14, #30, W0
0x0B10	0x408010  	ADD	W1, [W0], W0
0x0B12	0x780500  	MOV	W0, W10
0x0B14	0x07FE72  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,179 :: 		LATD.F10 = 1;
0x0B16	0xA842DD  	BSET	LATD, #10
;MEETKAART_V1_0_joysticks.c,180 :: 		}
L_main12:
;MEETKAART_V1_0_joysticks.c,182 :: 		if (receive == 0x07)//analoog uit 3 0V
0x0B18	0x90400E  	MOV.B	[W14+0], W0
0x0B1A	0xE10467  	CP.B	W0, #7
0x0B1C	0x3A0008  	BRA NZ	L_main13
L__main117:
;MEETKAART_V1_0_joysticks.c,184 :: 		Uart1_Write_Text("ok\r");
0x0B1E	0x20914A  	MOV	#lo_addr(?lstr7_MEETKAART_V1_0_joysticks), W10
0x0B20	0x07FE5B  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,185 :: 		receive = 0x00;
0x0B22	0xEF2000  	CLR	W0
0x0B24	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,186 :: 		LATD.F10 = 0;
0x0B26	0xA942DD  	BCLR	LATD, #10
;MEETKAART_V1_0_joysticks.c,187 :: 		Spi1_write(0x6000);
0x0B28	0x26000A  	MOV	#24576, W10
0x0B2A	0x07FE67  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,188 :: 		LATD.F10 = 1;
0x0B2C	0xA842DD  	BSET	LATD, #10
;MEETKAART_V1_0_joysticks.c,189 :: 		}
L_main13:
;MEETKAART_V1_0_joysticks.c,191 :: 		if (receive == 0x08)//analoog uit 3 5.0V
0x0B2E	0x90400E  	MOV.B	[W14+0], W0
0x0B30	0xE10468  	CP.B	W0, #8
0x0B32	0x3A000C  	BRA NZ	L_main14
L__main118:
;MEETKAART_V1_0_joysticks.c,193 :: 		Uart1_Write_Text("ok\r");
0x0B34	0x208FCA  	MOV	#lo_addr(?lstr8_MEETKAART_V1_0_joysticks), W10
0x0B36	0x07FE50  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,194 :: 		receive = 0x00;
0x0B38	0xEF2000  	CLR	W0
0x0B3A	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,195 :: 		LATD.F10 = 0;
0x0B3C	0xA942DD  	BCLR	LATD, #10
;MEETKAART_V1_0_joysticks.c,196 :: 		Spi1_write(0x69C4 + Cal_anout3_1);
0x0B3E	0x269C41  	MOV	#27076, W1
0x0B40	0x200220  	MOV	#34, W0
0x0B42	0x470000  	ADD	W14, W0, W0
0x0B44	0x408010  	ADD	W1, [W0], W0
0x0B46	0x780500  	MOV	W0, W10
0x0B48	0x07FE58  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,197 :: 		LATD.F10 = 1;
0x0B4A	0xA842DD  	BSET	LATD, #10
;MEETKAART_V1_0_joysticks.c,198 :: 		}
L_main14:
;MEETKAART_V1_0_joysticks.c,200 :: 		if (receive == 0x09)//analoog uit 3 6.418V
0x0B4C	0x90400E  	MOV.B	[W14+0], W0
0x0B4E	0xE10469  	CP.B	W0, #9
0x0B50	0x3A000C  	BRA NZ	L_main15
L__main119:
;MEETKAART_V1_0_joysticks.c,202 :: 		Uart1_Write_Text("ok\r");
0x0B52	0x208ECA  	MOV	#lo_addr(?lstr9_MEETKAART_V1_0_joysticks), W10
0x0B54	0x07FE41  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,203 :: 		receive = 0x00;
0x0B56	0xEF2000  	CLR	W0
0x0B58	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,204 :: 		LATD.F10 = 0;
0x0B5A	0xA942DD  	BCLR	LATD, #10
;MEETKAART_V1_0_joysticks.c,205 :: 		Spi1_write(0x6C89 + Cal_anout3_2);
0x0B5C	0x26C891  	MOV	#27785, W1
0x0B5E	0x200240  	MOV	#36, W0
0x0B60	0x470000  	ADD	W14, W0, W0
0x0B62	0x408010  	ADD	W1, [W0], W0
0x0B64	0x780500  	MOV	W0, W10
0x0B66	0x07FE49  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,206 :: 		LATD.F10 = 1;
0x0B68	0xA842DD  	BSET	LATD, #10
;MEETKAART_V1_0_joysticks.c,207 :: 		}
L_main15:
;MEETKAART_V1_0_joysticks.c,209 :: 		if (receive == 0x0A)//analoog uit  4 0V
0x0B6A	0x90400E  	MOV.B	[W14+0], W0
0x0B6C	0xE1046A  	CP.B	W0, #10
0x0B6E	0x3A0008  	BRA NZ	L_main16
L__main120:
;MEETKAART_V1_0_joysticks.c,211 :: 		Uart1_Write_Text("ok\r");
0x0B70	0x208F4A  	MOV	#lo_addr(?lstr10_MEETKAART_V1_0_joysticks), W10
0x0B72	0x07FE32  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,212 :: 		receive = 0x00;
0x0B74	0xEF2000  	CLR	W0
0x0B76	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,213 :: 		LATD.F10 = 0;
0x0B78	0xA942DD  	BCLR	LATD, #10
;MEETKAART_V1_0_joysticks.c,214 :: 		Spi1_write(0x7000);
0x0B7A	0x27000A  	MOV	#28672, W10
0x0B7C	0x07FE3E  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,215 :: 		LATD.F10 = 1;
0x0B7E	0xA842DD  	BSET	LATD, #10
;MEETKAART_V1_0_joysticks.c,216 :: 		}
L_main16:
;MEETKAART_V1_0_joysticks.c,218 :: 		if (receive == 0x0B)//analoog uit 4 5.0V
0x0B80	0x90400E  	MOV.B	[W14+0], W0
0x0B82	0xE1046B  	CP.B	W0, #11
0x0B84	0x3A000C  	BRA NZ	L_main17
L__main121:
;MEETKAART_V1_0_joysticks.c,220 :: 		Uart1_Write_Text("ok\r");
0x0B86	0x208B8A  	MOV	#lo_addr(?lstr11_MEETKAART_V1_0_joysticks), W10
0x0B88	0x07FE27  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,221 :: 		receive = 0x00;
0x0B8A	0xEF2000  	CLR	W0
0x0B8C	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,222 :: 		LATD.F10 = 0;
0x0B8E	0xA942DD  	BCLR	LATD, #10
;MEETKAART_V1_0_joysticks.c,223 :: 		Spi1_write(0x79C4 + Cal_anout4_1);
0x0B90	0x279C41  	MOV	#31172, W1
0x0B92	0x200280  	MOV	#40, W0
0x0B94	0x470000  	ADD	W14, W0, W0
0x0B96	0x408010  	ADD	W1, [W0], W0
0x0B98	0x780500  	MOV	W0, W10
0x0B9A	0x07FE2F  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,224 :: 		LATD.F10 = 1;
0x0B9C	0xA842DD  	BSET	LATD, #10
;MEETKAART_V1_0_joysticks.c,225 :: 		}
L_main17:
;MEETKAART_V1_0_joysticks.c,227 :: 		if (receive == 0x0C)//analoog uit 4 6.418V
0x0B9E	0x90400E  	MOV.B	[W14+0], W0
0x0BA0	0xE1046C  	CP.B	W0, #12
0x0BA2	0x3A000C  	BRA NZ	L_main18
L__main122:
;MEETKAART_V1_0_joysticks.c,229 :: 		Uart1_Write_Text("ok\r");
0x0BA4	0x2089CA  	MOV	#lo_addr(?lstr12_MEETKAART_V1_0_joysticks), W10
0x0BA6	0x07FE18  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,230 :: 		receive = 0x00;
0x0BA8	0xEF2000  	CLR	W0
0x0BAA	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,231 :: 		LATD.F10 = 0;
0x0BAC	0xA942DD  	BCLR	LATD, #10
;MEETKAART_V1_0_joysticks.c,232 :: 		Spi1_write(0x7C89 + Cal_anout4_2);
0x0BAE	0x27C891  	MOV	#31881, W1
0x0BB0	0x2002A0  	MOV	#42, W0
0x0BB2	0x470000  	ADD	W14, W0, W0
0x0BB4	0x408010  	ADD	W1, [W0], W0
0x0BB6	0x780500  	MOV	W0, W10
0x0BB8	0x07FE20  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,233 :: 		LATD.F10 = 1;
0x0BBA	0xA842DD  	BSET	LATD, #10
;MEETKAART_V1_0_joysticks.c,234 :: 		}
L_main18:
;MEETKAART_V1_0_joysticks.c,245 :: 		if (receive == 0x0E)//analoog uit 5 5.0V
0x0BBC	0x90400E  	MOV.B	[W14+0], W0
0x0BBE	0xE1046E  	CP.B	W0, #14
0x0BC0	0x3A000C  	BRA NZ	L_main19
L__main123:
;MEETKAART_V1_0_joysticks.c,247 :: 		Uart1_Write_Text("ok\r");
0x0BC2	0x208BCA  	MOV	#lo_addr(?lstr13_MEETKAART_V1_0_joysticks), W10
0x0BC4	0x07FE09  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,248 :: 		receive = 0x00;
0x0BC6	0xEF2000  	CLR	W0
0x0BC8	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,249 :: 		LATD.F10 = 0;
0x0BCA	0xA942DD  	BCLR	LATD, #10
;MEETKAART_V1_0_joysticks.c,250 :: 		Spi1_write(0x39C4 + Cal_anout5_1);
0x0BCC	0x239C41  	MOV	#14788, W1
0x0BCE	0x2002E0  	MOV	#46, W0
0x0BD0	0x470000  	ADD	W14, W0, W0
0x0BD2	0x408010  	ADD	W1, [W0], W0
0x0BD4	0x780500  	MOV	W0, W10
0x0BD6	0x07FE11  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,251 :: 		LATD.F10 = 1;
0x0BD8	0xA842DD  	BSET	LATD, #10
;MEETKAART_V1_0_joysticks.c,252 :: 		}
L_main19:
;MEETKAART_V1_0_joysticks.c,254 :: 		if (receive == 0x0F)//analoog uit 5 6.418V
0x0BDA	0x90400E  	MOV.B	[W14+0], W0
0x0BDC	0xE1046F  	CP.B	W0, #15
0x0BDE	0x3A000C  	BRA NZ	L_main20
L__main124:
;MEETKAART_V1_0_joysticks.c,256 :: 		Uart1_Write_Text("ok\r");
0x0BE0	0x208ACA  	MOV	#lo_addr(?lstr14_MEETKAART_V1_0_joysticks), W10
0x0BE2	0x07FDFA  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,257 :: 		receive = 0x00;
0x0BE4	0xEF2000  	CLR	W0
0x0BE6	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,258 :: 		LATD.F10 = 0;
0x0BE8	0xA942DD  	BCLR	LATD, #10
;MEETKAART_V1_0_joysticks.c,259 :: 		Spi1_write(0x3C89 + Cal_anout5_2);
0x0BEA	0x23C891  	MOV	#15497, W1
0x0BEC	0x200300  	MOV	#48, W0
0x0BEE	0x470000  	ADD	W14, W0, W0
0x0BF0	0x408010  	ADD	W1, [W0], W0
0x0BF2	0x780500  	MOV	W0, W10
0x0BF4	0x07FE02  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,260 :: 		LATD.F10 = 1;
0x0BF6	0xA842DD  	BSET	LATD, #10
;MEETKAART_V1_0_joysticks.c,261 :: 		}
L_main20:
;MEETKAART_V1_0_joysticks.c,263 :: 		if (receive == 0x10)//analoog uit  6 0V
0x0BF8	0x90400E  	MOV.B	[W14+0], W0
0x0BFA	0xE10470  	CP.B	W0, #16
0x0BFC	0x3A0008  	BRA NZ	L_main21
L__main125:
;MEETKAART_V1_0_joysticks.c,265 :: 		Uart1_Write_Text("ok\r");
0x0BFE	0x208B4A  	MOV	#lo_addr(?lstr15_MEETKAART_V1_0_joysticks), W10
0x0C00	0x07FDEB  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,266 :: 		receive = 0x00;
0x0C02	0xEF2000  	CLR	W0
0x0C04	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,267 :: 		LATD.F10 = 0;
0x0C06	0xA942DD  	BCLR	LATD, #10
;MEETKAART_V1_0_joysticks.c,268 :: 		Spi1_write(0x2000);
0x0C08	0x22000A  	MOV	#8192, W10
0x0C0A	0x07FDF7  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,269 :: 		LATD.F10 = 1;
0x0C0C	0xA842DD  	BSET	LATD, #10
;MEETKAART_V1_0_joysticks.c,270 :: 		}
L_main21:
;MEETKAART_V1_0_joysticks.c,272 :: 		if (receive == 0x11)//analoog uit 6 5.0V
0x0C0E	0x90400E  	MOV.B	[W14+0], W0
0x0C10	0xE10471  	CP.B	W0, #17
0x0C12	0x3A000C  	BRA NZ	L_main22
L__main126:
;MEETKAART_V1_0_joysticks.c,274 :: 		Uart1_Write_Text("ok\r");
0x0C14	0x20898A  	MOV	#lo_addr(?lstr16_MEETKAART_V1_0_joysticks), W10
0x0C16	0x07FDE0  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,275 :: 		receive = 0x00;
0x0C18	0xEF2000  	CLR	W0
0x0C1A	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,276 :: 		LATD.F10 = 0;
0x0C1C	0xA942DD  	BCLR	LATD, #10
;MEETKAART_V1_0_joysticks.c,277 :: 		Spi1_write(0x29C4 + Cal_anout6_1);
0x0C1E	0x229C41  	MOV	#10692, W1
0x0C20	0x200340  	MOV	#52, W0
0x0C22	0x470000  	ADD	W14, W0, W0
0x0C24	0x408010  	ADD	W1, [W0], W0
0x0C26	0x780500  	MOV	W0, W10
0x0C28	0x07FDE8  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,278 :: 		LATD.F10 = 1;
0x0C2A	0xA842DD  	BSET	LATD, #10
;MEETKAART_V1_0_joysticks.c,279 :: 		}
L_main22:
;MEETKAART_V1_0_joysticks.c,281 :: 		if (receive == 0x12)//analoog uit 6 6.418V
0x0C2C	0x90400E  	MOV.B	[W14+0], W0
0x0C2E	0xE10472  	CP.B	W0, #18
0x0C30	0x3A000C  	BRA NZ	L_main23
L__main127:
;MEETKAART_V1_0_joysticks.c,283 :: 		Uart1_Write_Text("ok\r");
0x0C32	0x208C0A  	MOV	#lo_addr(?lstr17_MEETKAART_V1_0_joysticks), W10
0x0C34	0x07FDD1  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,284 :: 		receive = 0x00;
0x0C36	0xEF2000  	CLR	W0
0x0C38	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,285 :: 		LATD.F10 = 0;
0x0C3A	0xA942DD  	BCLR	LATD, #10
;MEETKAART_V1_0_joysticks.c,286 :: 		Spi1_write(0x2C89 + Cal_anout6_2);
0x0C3C	0x22C891  	MOV	#11401, W1
0x0C3E	0x200360  	MOV	#54, W0
0x0C40	0x470000  	ADD	W14, W0, W0
0x0C42	0x408010  	ADD	W1, [W0], W0
0x0C44	0x780500  	MOV	W0, W10
0x0C46	0x07FDD9  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,287 :: 		LATD.F10 = 1;
0x0C48	0xA842DD  	BSET	LATD, #10
;MEETKAART_V1_0_joysticks.c,288 :: 		}
L_main23:
;MEETKAART_V1_0_joysticks.c,289 :: 		if (receive == 0x13)//analoog uit 7 0V
0x0C4A	0x90400E  	MOV.B	[W14+0], W0
0x0C4C	0xE10473  	CP.B	W0, #19
0x0C4E	0x3A0008  	BRA NZ	L_main24
L__main128:
;MEETKAART_V1_0_joysticks.c,291 :: 		Uart1_Write_Text("ok\r");
0x0C50	0x208DCA  	MOV	#lo_addr(?lstr18_MEETKAART_V1_0_joysticks), W10
0x0C52	0x07FDC2  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,292 :: 		receive = 0x00;
0x0C54	0xEF2000  	CLR	W0
0x0C56	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,293 :: 		LATD.F10 = 0;
0x0C58	0xA942DD  	BCLR	LATD, #10
;MEETKAART_V1_0_joysticks.c,294 :: 		Spi1_write(0x1000);
0x0C5A	0x21000A  	MOV	#4096, W10
0x0C5C	0x07FDCE  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,295 :: 		LATD.F10 = 1;
0x0C5E	0xA842DD  	BSET	LATD, #10
;MEETKAART_V1_0_joysticks.c,296 :: 		}
L_main24:
;MEETKAART_V1_0_joysticks.c,298 :: 		if (receive == 0x14)//analoog uit 7 5.0V
0x0C60	0x90400E  	MOV.B	[W14+0], W0
0x0C62	0xE10474  	CP.B	W0, #20
0x0C64	0x3A000C  	BRA NZ	L_main25
L__main129:
;MEETKAART_V1_0_joysticks.c,300 :: 		Uart1_Write_Text("ok\r");
0x0C66	0x208A4A  	MOV	#lo_addr(?lstr19_MEETKAART_V1_0_joysticks), W10
0x0C68	0x07FDB7  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,301 :: 		receive = 0x00;
0x0C6A	0xEF2000  	CLR	W0
0x0C6C	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,302 :: 		LATD.F10 = 0;
0x0C6E	0xA942DD  	BCLR	LATD, #10
;MEETKAART_V1_0_joysticks.c,303 :: 		Spi1_write(0x19C4 + Cal_anout7_1);
0x0C70	0x219C41  	MOV	#6596, W1
0x0C72	0x2003A0  	MOV	#58, W0
0x0C74	0x470000  	ADD	W14, W0, W0
0x0C76	0x408010  	ADD	W1, [W0], W0
0x0C78	0x780500  	MOV	W0, W10
0x0C7A	0x07FDBF  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,304 :: 		LATD.F10 = 1;
0x0C7C	0xA842DD  	BSET	LATD, #10
;MEETKAART_V1_0_joysticks.c,305 :: 		}
L_main25:
;MEETKAART_V1_0_joysticks.c,307 :: 		if (receive == 0x15)//analoog uit 7 6.418V
0x0C7E	0x90400E  	MOV.B	[W14+0], W0
0x0C80	0xE10475  	CP.B	W0, #21
0x0C82	0x3A000C  	BRA NZ	L_main26
L__main130:
;MEETKAART_V1_0_joysticks.c,309 :: 		Uart1_Write_Text("ok\r");
0x0C84	0x208A0A  	MOV	#lo_addr(?lstr20_MEETKAART_V1_0_joysticks), W10
0x0C86	0x07FDA8  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,310 :: 		receive = 0x00;
0x0C88	0xEF2000  	CLR	W0
0x0C8A	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,311 :: 		LATD.F10 = 0;
0x0C8C	0xA942DD  	BCLR	LATD, #10
;MEETKAART_V1_0_joysticks.c,312 :: 		Spi1_write(0x1C89 + Cal_anout7_2);
0x0C8E	0x21C891  	MOV	#7305, W1
0x0C90	0x2003C0  	MOV	#60, W0
0x0C92	0x470000  	ADD	W14, W0, W0
0x0C94	0x408010  	ADD	W1, [W0], W0
0x0C96	0x780500  	MOV	W0, W10
0x0C98	0x07FDB0  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,313 :: 		LATD.F10 = 1;
0x0C9A	0xA842DD  	BSET	LATD, #10
;MEETKAART_V1_0_joysticks.c,314 :: 		}
L_main26:
;MEETKAART_V1_0_joysticks.c,316 :: 		if (receive == 0x16)//analoog uit 8 0V
0x0C9C	0x90400E  	MOV.B	[W14+0], W0
0x0C9E	0xE10476  	CP.B	W0, #22
0x0CA0	0x3A0008  	BRA NZ	L_main27
L__main131:
;MEETKAART_V1_0_joysticks.c,318 :: 		Uart1_Write_Text("ok\r");
0x0CA2	0x208A8A  	MOV	#lo_addr(?lstr21_MEETKAART_V1_0_joysticks), W10
0x0CA4	0x07FD99  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,319 :: 		receive = 0x00;
0x0CA6	0xEF2000  	CLR	W0
0x0CA8	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,320 :: 		LATD.F10 = 0;
0x0CAA	0xA942DD  	BCLR	LATD, #10
;MEETKAART_V1_0_joysticks.c,321 :: 		Spi1_write(0x0000);
0x0CAC	0xEF2014  	CLR	W10
0x0CAE	0x07FDA5  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,322 :: 		LATD.F10 = 1;
0x0CB0	0xA842DD  	BSET	LATD, #10
;MEETKAART_V1_0_joysticks.c,323 :: 		}
L_main27:
;MEETKAART_V1_0_joysticks.c,325 :: 		if (receive == 0x17)//analgoog uit 8 5.0V
0x0CB2	0x90400E  	MOV.B	[W14+0], W0
0x0CB4	0xE10477  	CP.B	W0, #23
0x0CB6	0x3A000C  	BRA NZ	L_main28
L__main132:
;MEETKAART_V1_0_joysticks.c,327 :: 		Uart1_Write_Text("ok\r");
0x0CB8	0x2093CA  	MOV	#lo_addr(?lstr22_MEETKAART_V1_0_joysticks), W10
0x0CBA	0x07FD8E  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,328 :: 		receive = 0x00;
0x0CBC	0xEF2000  	CLR	W0
0x0CBE	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,329 :: 		LATD.F10 = 0;
0x0CC0	0xA942DD  	BCLR	LATD, #10
;MEETKAART_V1_0_joysticks.c,330 :: 		Spi1_write(0x09C4 + Cal_anout8_1);
0x0CC2	0x209C41  	MOV	#2500, W1
0x0CC4	0x2003E0  	MOV	#62, W0
0x0CC6	0x470000  	ADD	W14, W0, W0
0x0CC8	0x408010  	ADD	W1, [W0], W0
0x0CCA	0x780500  	MOV	W0, W10
0x0CCC	0x07FD96  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,331 :: 		LATD.F10 = 1;
0x0CCE	0xA842DD  	BSET	LATD, #10
;MEETKAART_V1_0_joysticks.c,332 :: 		}
L_main28:
;MEETKAART_V1_0_joysticks.c,334 :: 		if (receive == 0x18)//analoog uit 8 6.418V
0x0CD0	0x90400E  	MOV.B	[W14+0], W0
0x0CD2	0xE10478  	CP.B	W0, #24
0x0CD4	0x3A000C  	BRA NZ	L_main29
L__main133:
;MEETKAART_V1_0_joysticks.c,336 :: 		Uart1_Write_Text("ok\r");
0x0CD6	0x20938A  	MOV	#lo_addr(?lstr23_MEETKAART_V1_0_joysticks), W10
0x0CD8	0x07FD7F  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,337 :: 		receive = 0x00;
0x0CDA	0xEF2000  	CLR	W0
0x0CDC	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,338 :: 		LATD.F10 = 0;
0x0CDE	0xA942DD  	BCLR	LATD, #10
;MEETKAART_V1_0_joysticks.c,339 :: 		Spi1_write(0x0C89 + Cal_anout8_2);
0x0CE0	0x20C891  	MOV	#3209, W1
0x0CE2	0x200400  	MOV	#64, W0
0x0CE4	0x470000  	ADD	W14, W0, W0
0x0CE6	0x408010  	ADD	W1, [W0], W0
0x0CE8	0x780500  	MOV	W0, W10
0x0CEA	0x07FD87  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,340 :: 		LATD.F10 = 1;
0x0CEC	0xA842DD  	BSET	LATD, #10
;MEETKAART_V1_0_joysticks.c,341 :: 		}
L_main29:
;MEETKAART_V1_0_joysticks.c,343 :: 		if (receive == 0x19)//analoog uit 9 0V
0x0CEE	0x90400E  	MOV.B	[W14+0], W0
0x0CF0	0xE10479  	CP.B	W0, #25
0x0CF2	0x3A0008  	BRA NZ	L_main30
L__main134:
;MEETKAART_V1_0_joysticks.c,345 :: 		Uart1_Write_Text("ok\r");
0x0CF4	0x20934A  	MOV	#lo_addr(?lstr24_MEETKAART_V1_0_joysticks), W10
0x0CF6	0x07FD70  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,346 :: 		receive = 0x00;
0x0CF8	0xEF2000  	CLR	W0
0x0CFA	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,347 :: 		LATD.F9 = 0;
0x0CFC	0xA922DD  	BCLR	LATD, #9
;MEETKAART_V1_0_joysticks.c,348 :: 		Spi1_write(0x4000);
0x0CFE	0x24000A  	MOV	#16384, W10
0x0D00	0x07FD7C  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,349 :: 		LATD.F9 = 1;
0x0D02	0xA822DD  	BSET	LATD, #9
;MEETKAART_V1_0_joysticks.c,350 :: 		}
L_main30:
;MEETKAART_V1_0_joysticks.c,352 :: 		if (receive == 0x1A)//analoog uit 9 5.0V
0x0D04	0x90400E  	MOV.B	[W14+0], W0
0x0D06	0xE1047A  	CP.B	W0, #26
0x0D08	0x3A000C  	BRA NZ	L_main31
L__main135:
;MEETKAART_V1_0_joysticks.c,354 :: 		Uart1_Write_Text("ok\r");
0x0D0A	0x20930A  	MOV	#lo_addr(?lstr25_MEETKAART_V1_0_joysticks), W10
0x0D0C	0x07FD65  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,355 :: 		receive = 0x00;
0x0D0E	0xEF2000  	CLR	W0
0x0D10	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,356 :: 		LATD.F9 = 0;
0x0D12	0xA922DD  	BCLR	LATD, #9
;MEETKAART_V1_0_joysticks.c,357 :: 		Spi1_write(0x49C4 + Cal_anout9_1);
0x0D14	0x249C41  	MOV	#18884, W1
0x0D16	0x200440  	MOV	#68, W0
0x0D18	0x470000  	ADD	W14, W0, W0
0x0D1A	0x408010  	ADD	W1, [W0], W0
0x0D1C	0x780500  	MOV	W0, W10
0x0D1E	0x07FD6D  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,358 :: 		LATD.F9 = 1;
0x0D20	0xA822DD  	BSET	LATD, #9
;MEETKAART_V1_0_joysticks.c,359 :: 		}
L_main31:
;MEETKAART_V1_0_joysticks.c,361 :: 		if (receive == 0x1B)//analoog uit 9 6.418V
0x0D22	0x90400E  	MOV.B	[W14+0], W0
0x0D24	0xE1047B  	CP.B	W0, #27
0x0D26	0x3A000C  	BRA NZ	L_main32
L__main136:
;MEETKAART_V1_0_joysticks.c,363 :: 		Uart1_Write_Text("ok\r");
0x0D28	0x2092CA  	MOV	#lo_addr(?lstr26_MEETKAART_V1_0_joysticks), W10
0x0D2A	0x07FD56  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,364 :: 		receive = 0x00;
0x0D2C	0xEF2000  	CLR	W0
0x0D2E	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,365 :: 		LATD.F9 = 0;
0x0D30	0xA922DD  	BCLR	LATD, #9
;MEETKAART_V1_0_joysticks.c,366 :: 		Spi1_write(0x4C89 + Cal_anout9_2);
0x0D32	0x24C891  	MOV	#19593, W1
0x0D34	0x200460  	MOV	#70, W0
0x0D36	0x470000  	ADD	W14, W0, W0
0x0D38	0x408010  	ADD	W1, [W0], W0
0x0D3A	0x780500  	MOV	W0, W10
0x0D3C	0x07FD5E  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,367 :: 		LATD.F9 = 1;
0x0D3E	0xA822DD  	BSET	LATD, #9
;MEETKAART_V1_0_joysticks.c,368 :: 		}
L_main32:
;MEETKAART_V1_0_joysticks.c,370 :: 		if (receive == 0x1C)//analoog uit 10 0V
0x0D40	0x90400E  	MOV.B	[W14+0], W0
0x0D42	0xE1047C  	CP.B	W0, #28
0x0D44	0x3A0008  	BRA NZ	L_main33
L__main137:
;MEETKAART_V1_0_joysticks.c,372 :: 		Uart1_Write_Text("ok\r");
0x0D46	0x2091CA  	MOV	#lo_addr(?lstr27_MEETKAART_V1_0_joysticks), W10
0x0D48	0x07FD47  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,373 :: 		receive = 0x00;
0x0D4A	0xEF2000  	CLR	W0
0x0D4C	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,374 :: 		LATD.F9 = 0;
0x0D4E	0xA922DD  	BCLR	LATD, #9
;MEETKAART_V1_0_joysticks.c,375 :: 		Spi1_write(0x5000);
0x0D50	0x25000A  	MOV	#20480, W10
0x0D52	0x07FD53  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,376 :: 		LATD.F9 = 1;
0x0D54	0xA822DD  	BSET	LATD, #9
;MEETKAART_V1_0_joysticks.c,377 :: 		}
L_main33:
;MEETKAART_V1_0_joysticks.c,379 :: 		if (receive == 0x1D)//analoog uit 10 5.0V
0x0D56	0x90400E  	MOV.B	[W14+0], W0
0x0D58	0xE1047D  	CP.B	W0, #29
0x0D5A	0x3A000C  	BRA NZ	L_main34
L__main138:
;MEETKAART_V1_0_joysticks.c,381 :: 		Uart1_Write_Text("ok\r");
0x0D5C	0x20924A  	MOV	#lo_addr(?lstr28_MEETKAART_V1_0_joysticks), W10
0x0D5E	0x07FD3C  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,382 :: 		receive = 0x00;
0x0D60	0xEF2000  	CLR	W0
0x0D62	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,383 :: 		LATD.F9 = 0;
0x0D64	0xA922DD  	BCLR	LATD, #9
;MEETKAART_V1_0_joysticks.c,384 :: 		Spi1_write(0x59C4 + Cal_anout10_1);
0x0D66	0x259C41  	MOV	#22980, W1
0x0D68	0x2004A0  	MOV	#74, W0
0x0D6A	0x470000  	ADD	W14, W0, W0
0x0D6C	0x408010  	ADD	W1, [W0], W0
0x0D6E	0x780500  	MOV	W0, W10
0x0D70	0x07FD44  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,385 :: 		LATD.F9 = 1;
0x0D72	0xA822DD  	BSET	LATD, #9
;MEETKAART_V1_0_joysticks.c,386 :: 		}
L_main34:
;MEETKAART_V1_0_joysticks.c,388 :: 		if (receive == 0x1E)//analoog uit 10 6.418V
0x0D74	0x90400E  	MOV.B	[W14+0], W0
0x0D76	0xE1047E  	CP.B	W0, #30
0x0D78	0x3A000C  	BRA NZ	L_main35
L__main139:
;MEETKAART_V1_0_joysticks.c,390 :: 		Uart1_Write_Text("ok\r");
0x0D7A	0x208B0A  	MOV	#lo_addr(?lstr29_MEETKAART_V1_0_joysticks), W10
0x0D7C	0x07FD2D  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,391 :: 		receive = 0x00;
0x0D7E	0xEF2000  	CLR	W0
0x0D80	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,392 :: 		LATD.F9 = 0;
0x0D82	0xA922DD  	BCLR	LATD, #9
;MEETKAART_V1_0_joysticks.c,393 :: 		Spi1_write(0x5C89 + Cal_anout10_2);
0x0D84	0x25C891  	MOV	#23689, W1
0x0D86	0x2004C0  	MOV	#76, W0
0x0D88	0x470000  	ADD	W14, W0, W0
0x0D8A	0x408010  	ADD	W1, [W0], W0
0x0D8C	0x780500  	MOV	W0, W10
0x0D8E	0x07FD35  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,394 :: 		LATD.F9 = 1;
0x0D90	0xA822DD  	BSET	LATD, #9
;MEETKAART_V1_0_joysticks.c,395 :: 		}
L_main35:
;MEETKAART_V1_0_joysticks.c,397 :: 		if (receive == 0x1F)//analoog uit 11 0V
0x0D92	0x90400E  	MOV.B	[W14+0], W0
0x0D94	0xE1047F  	CP.B	W0, #31
0x0D96	0x3A0008  	BRA NZ	L_main36
L__main140:
;MEETKAART_V1_0_joysticks.c,399 :: 		Uart1_Write_Text("ok\r");
0x0D98	0x20928A  	MOV	#lo_addr(?lstr30_MEETKAART_V1_0_joysticks), W10
0x0D9A	0x07FD1E  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,400 :: 		receive = 0x00;
0x0D9C	0xEF2000  	CLR	W0
0x0D9E	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,401 :: 		LATD.F9 = 0;
0x0DA0	0xA922DD  	BCLR	LATD, #9
;MEETKAART_V1_0_joysticks.c,402 :: 		Spi1_write(0x6000);
0x0DA2	0x26000A  	MOV	#24576, W10
0x0DA4	0x07FD2A  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,403 :: 		LATD.F9 = 1;
0x0DA6	0xA822DD  	BSET	LATD, #9
;MEETKAART_V1_0_joysticks.c,404 :: 		}
L_main36:
;MEETKAART_V1_0_joysticks.c,406 :: 		if (receive == 0x20)//analoog uit 11 5.0V
0x0DA8	0x90408E  	MOV.B	[W14+0], W1
0x0DAA	0xB3C200  	MOV.B	#32, W0
0x0DAC	0xE10C00  	CP.B	W1, W0
0x0DAE	0x3A000C  	BRA NZ	L_main37
L__main141:
;MEETKAART_V1_0_joysticks.c,408 :: 		Uart1_Write_Text("ok\r");
0x0DB0	0x20918A  	MOV	#lo_addr(?lstr31_MEETKAART_V1_0_joysticks), W10
0x0DB2	0x07FD12  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,409 :: 		receive = 0x00;
0x0DB4	0xEF2000  	CLR	W0
0x0DB6	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,410 :: 		LATD.F9 = 0;
0x0DB8	0xA922DD  	BCLR	LATD, #9
;MEETKAART_V1_0_joysticks.c,411 :: 		Spi1_write(0x69C4 + Cal_anout11_1);
0x0DBA	0x269C41  	MOV	#27076, W1
0x0DBC	0x200500  	MOV	#80, W0
0x0DBE	0x470000  	ADD	W14, W0, W0
0x0DC0	0x408010  	ADD	W1, [W0], W0
0x0DC2	0x780500  	MOV	W0, W10
0x0DC4	0x07FD1A  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,412 :: 		LATD.F9 = 1;
0x0DC6	0xA822DD  	BSET	LATD, #9
;MEETKAART_V1_0_joysticks.c,413 :: 		}
L_main37:
;MEETKAART_V1_0_joysticks.c,415 :: 		if (receive == 0x21)//analoog uit 11 6.418V
0x0DC8	0x90408E  	MOV.B	[W14+0], W1
0x0DCA	0xB3C210  	MOV.B	#33, W0
0x0DCC	0xE10C00  	CP.B	W1, W0
0x0DCE	0x3A000C  	BRA NZ	L_main38
L__main142:
;MEETKAART_V1_0_joysticks.c,417 :: 		Uart1_Write_Text("ok\r");
0x0DD0	0x20920A  	MOV	#lo_addr(?lstr32_MEETKAART_V1_0_joysticks), W10
0x0DD2	0x07FD02  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,418 :: 		receive = 0x00;
0x0DD4	0xEF2000  	CLR	W0
0x0DD6	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,419 :: 		LATD.F9 = 0;
0x0DD8	0xA922DD  	BCLR	LATD, #9
;MEETKAART_V1_0_joysticks.c,420 :: 		Spi1_write(0x6C89 + Cal_anout11_2);
0x0DDA	0x26C891  	MOV	#27785, W1
0x0DDC	0x200520  	MOV	#82, W0
0x0DDE	0x470000  	ADD	W14, W0, W0
0x0DE0	0x408010  	ADD	W1, [W0], W0
0x0DE2	0x780500  	MOV	W0, W10
0x0DE4	0x07FD0A  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,421 :: 		LATD.F9 = 1;
0x0DE6	0xA822DD  	BSET	LATD, #9
;MEETKAART_V1_0_joysticks.c,422 :: 		}
L_main38:
;MEETKAART_V1_0_joysticks.c,424 :: 		if (receive == 0x22)//analoog uit 12 0V
0x0DE8	0x90408E  	MOV.B	[W14+0], W1
0x0DEA	0xB3C220  	MOV.B	#34, W0
0x0DEC	0xE10C00  	CP.B	W1, W0
0x0DEE	0x3A0008  	BRA NZ	L_main39
L__main143:
;MEETKAART_V1_0_joysticks.c,426 :: 		Uart1_Write_Text("ok\r");
0x0DF0	0x20904A  	MOV	#lo_addr(?lstr33_MEETKAART_V1_0_joysticks), W10
0x0DF2	0x07FCF2  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,427 :: 		receive = 0x00;
0x0DF4	0xEF2000  	CLR	W0
0x0DF6	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,428 :: 		LATD.F9 = 0;
0x0DF8	0xA922DD  	BCLR	LATD, #9
;MEETKAART_V1_0_joysticks.c,429 :: 		Spi1_write(0x7000);
0x0DFA	0x27000A  	MOV	#28672, W10
0x0DFC	0x07FCFE  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,430 :: 		LATD.F9 = 1;
0x0DFE	0xA822DD  	BSET	LATD, #9
;MEETKAART_V1_0_joysticks.c,431 :: 		}
L_main39:
;MEETKAART_V1_0_joysticks.c,433 :: 		if (receive == 0x23)//analoog uit 12 5.0V
0x0E00	0x90408E  	MOV.B	[W14+0], W1
0x0E02	0xB3C230  	MOV.B	#35, W0
0x0E04	0xE10C00  	CP.B	W1, W0
0x0E06	0x3A000C  	BRA NZ	L_main40
L__main144:
;MEETKAART_V1_0_joysticks.c,435 :: 		Uart1_Write_Text("ok\r");
0x0E08	0x20894A  	MOV	#lo_addr(?lstr34_MEETKAART_V1_0_joysticks), W10
0x0E0A	0x07FCE6  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,436 :: 		receive = 0x00;
0x0E0C	0xEF2000  	CLR	W0
0x0E0E	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,437 :: 		LATD.F9 = 0;
0x0E10	0xA922DD  	BCLR	LATD, #9
;MEETKAART_V1_0_joysticks.c,438 :: 		Spi1_write(0x79C4 + Cal_anout12_1);
0x0E12	0x279C41  	MOV	#31172, W1
0x0E14	0x200560  	MOV	#86, W0
0x0E16	0x470000  	ADD	W14, W0, W0
0x0E18	0x408010  	ADD	W1, [W0], W0
0x0E1A	0x780500  	MOV	W0, W10
0x0E1C	0x07FCEE  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,439 :: 		LATD.F9 = 1;
0x0E1E	0xA822DD  	BSET	LATD, #9
;MEETKAART_V1_0_joysticks.c,440 :: 		}
L_main40:
;MEETKAART_V1_0_joysticks.c,442 :: 		if (receive == 0x24)//analoog uit 12 6.418V
0x0E20	0x90408E  	MOV.B	[W14+0], W1
0x0E22	0xB3C240  	MOV.B	#36, W0
0x0E24	0xE10C00  	CP.B	W1, W0
0x0E26	0x3A000C  	BRA NZ	L_main41
L__main145:
;MEETKAART_V1_0_joysticks.c,444 :: 		Uart1_Write_Text("ok\r");
0x0E28	0x20890A  	MOV	#lo_addr(?lstr35_MEETKAART_V1_0_joysticks), W10
0x0E2A	0x07FCD6  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,445 :: 		receive = 0x00;
0x0E2C	0xEF2000  	CLR	W0
0x0E2E	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,446 :: 		LATD.F9 = 0;
0x0E30	0xA922DD  	BCLR	LATD, #9
;MEETKAART_V1_0_joysticks.c,447 :: 		Spi1_write(0x7C89 + Cal_anout12_2);
0x0E32	0x27C891  	MOV	#31881, W1
0x0E34	0x200580  	MOV	#88, W0
0x0E36	0x470000  	ADD	W14, W0, W0
0x0E38	0x408010  	ADD	W1, [W0], W0
0x0E3A	0x780500  	MOV	W0, W10
0x0E3C	0x07FCDE  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,448 :: 		LATD.F9 = 1;
0x0E3E	0xA822DD  	BSET	LATD, #9
;MEETKAART_V1_0_joysticks.c,449 :: 		}
L_main41:
;MEETKAART_V1_0_joysticks.c,451 :: 		if (receive == 0x25)//analoog uit 13 0V
0x0E40	0x90408E  	MOV.B	[W14+0], W1
0x0E42	0xB3C250  	MOV.B	#37, W0
0x0E44	0xE10C00  	CP.B	W1, W0
0x0E46	0x3A0008  	BRA NZ	L_main42
L__main146:
;MEETKAART_V1_0_joysticks.c,453 :: 		Uart1_Write_Text("ok\r");
0x0E48	0x2088CA  	MOV	#lo_addr(?lstr36_MEETKAART_V1_0_joysticks), W10
0x0E4A	0x07FCC6  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,454 :: 		receive = 0x00;
0x0E4C	0xEF2000  	CLR	W0
0x0E4E	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,455 :: 		LATD.F9 = 0;
0x0E50	0xA922DD  	BCLR	LATD, #9
;MEETKAART_V1_0_joysticks.c,456 :: 		Spi1_write(0x3000);
0x0E52	0x23000A  	MOV	#12288, W10
0x0E54	0x07FCD2  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,457 :: 		LATD.F9 = 1;
0x0E56	0xA822DD  	BSET	LATD, #9
;MEETKAART_V1_0_joysticks.c,458 :: 		}
L_main42:
;MEETKAART_V1_0_joysticks.c,460 :: 		if (receive == 0x26)//analoog uit 13 5.0V
0x0E58	0x90408E  	MOV.B	[W14+0], W1
0x0E5A	0xB3C260  	MOV.B	#38, W0
0x0E5C	0xE10C00  	CP.B	W1, W0
0x0E5E	0x3A000C  	BRA NZ	L_main43
L__main147:
;MEETKAART_V1_0_joysticks.c,462 :: 		Uart1_Write_Text("ok\r");
0x0E60	0x20888A  	MOV	#lo_addr(?lstr37_MEETKAART_V1_0_joysticks), W10
0x0E62	0x07FCBA  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,463 :: 		receive = 0x00;
0x0E64	0xEF2000  	CLR	W0
0x0E66	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,464 :: 		LATD.F9 = 0;
0x0E68	0xA922DD  	BCLR	LATD, #9
;MEETKAART_V1_0_joysticks.c,465 :: 		Spi1_write(0x39C4 + Cal_anout13_1);
0x0E6A	0x239C41  	MOV	#14788, W1
0x0E6C	0x2005C0  	MOV	#92, W0
0x0E6E	0x470000  	ADD	W14, W0, W0
0x0E70	0x408010  	ADD	W1, [W0], W0
0x0E72	0x780500  	MOV	W0, W10
0x0E74	0x07FCC2  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,466 :: 		LATD.F9 = 1;
0x0E76	0xA822DD  	BSET	LATD, #9
;MEETKAART_V1_0_joysticks.c,467 :: 		}
L_main43:
;MEETKAART_V1_0_joysticks.c,469 :: 		if (receive == 0x27)//analoog uit 13 6.418V
0x0E78	0x90408E  	MOV.B	[W14+0], W1
0x0E7A	0xB3C270  	MOV.B	#39, W0
0x0E7C	0xE10C00  	CP.B	W1, W0
0x0E7E	0x3A000C  	BRA NZ	L_main44
L__main148:
;MEETKAART_V1_0_joysticks.c,471 :: 		Uart1_Write_Text("ok\r");
0x0E80	0x20884A  	MOV	#lo_addr(?lstr38_MEETKAART_V1_0_joysticks), W10
0x0E82	0x07FCAA  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,472 :: 		receive = 0x00;
0x0E84	0xEF2000  	CLR	W0
0x0E86	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,473 :: 		LATD.F9 = 0;
0x0E88	0xA922DD  	BCLR	LATD, #9
;MEETKAART_V1_0_joysticks.c,474 :: 		Spi1_write(0x3C89 + Cal_anout13_2);
0x0E8A	0x23C891  	MOV	#15497, W1
0x0E8C	0x2005E0  	MOV	#94, W0
0x0E8E	0x470000  	ADD	W14, W0, W0
0x0E90	0x408010  	ADD	W1, [W0], W0
0x0E92	0x780500  	MOV	W0, W10
0x0E94	0x07FCB2  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,475 :: 		LATD.F9 = 1;
0x0E96	0xA822DD  	BSET	LATD, #9
;MEETKAART_V1_0_joysticks.c,476 :: 		}
L_main44:
;MEETKAART_V1_0_joysticks.c,478 :: 		if (receive == 0x28)//analoog uit 14 0V
0x0E98	0x90408E  	MOV.B	[W14+0], W1
0x0E9A	0xB3C280  	MOV.B	#40, W0
0x0E9C	0xE10C00  	CP.B	W1, W0
0x0E9E	0x3A0008  	BRA NZ	L_main45
L__main149:
;MEETKAART_V1_0_joysticks.c,480 :: 		Uart1_Write_Text("ok\r");
0x0EA0	0x20874A  	MOV	#lo_addr(?lstr39_MEETKAART_V1_0_joysticks), W10
0x0EA2	0x07FC9A  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,481 :: 		receive = 0x00;
0x0EA4	0xEF2000  	CLR	W0
0x0EA6	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,482 :: 		LATD.F9 = 0;
0x0EA8	0xA922DD  	BCLR	LATD, #9
;MEETKAART_V1_0_joysticks.c,483 :: 		Spi1_write(0x2000);
0x0EAA	0x22000A  	MOV	#8192, W10
0x0EAC	0x07FCA6  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,484 :: 		LATD.F9 = 1;
0x0EAE	0xA822DD  	BSET	LATD, #9
;MEETKAART_V1_0_joysticks.c,485 :: 		}
L_main45:
;MEETKAART_V1_0_joysticks.c,487 :: 		if (receive == 0x29)//analoog uit 14 5.0V
0x0EB0	0x90408E  	MOV.B	[W14+0], W1
0x0EB2	0xB3C290  	MOV.B	#41, W0
0x0EB4	0xE10C00  	CP.B	W1, W0
0x0EB6	0x3A000C  	BRA NZ	L_main46
L__main150:
;MEETKAART_V1_0_joysticks.c,489 :: 		Uart1_Write_Text("ok\r");
0x0EB8	0x2087CA  	MOV	#lo_addr(?lstr40_MEETKAART_V1_0_joysticks), W10
0x0EBA	0x07FC8E  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,490 :: 		receive = 0x00;
0x0EBC	0xEF2000  	CLR	W0
0x0EBE	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,491 :: 		LATD.F9 = 0;
0x0EC0	0xA922DD  	BCLR	LATD, #9
;MEETKAART_V1_0_joysticks.c,492 :: 		Spi1_write(0x29C4 + Cal_anout14_1);
0x0EC2	0x229C41  	MOV	#10692, W1
0x0EC4	0x200620  	MOV	#98, W0
0x0EC6	0x470000  	ADD	W14, W0, W0
0x0EC8	0x408010  	ADD	W1, [W0], W0
0x0ECA	0x780500  	MOV	W0, W10
0x0ECC	0x07FC96  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,493 :: 		LATD.F9 = 1;
0x0ECE	0xA822DD  	BSET	LATD, #9
;MEETKAART_V1_0_joysticks.c,494 :: 		}
L_main46:
;MEETKAART_V1_0_joysticks.c,496 :: 		if (receive == 0x2A)//analoog uit 14 6.418V
0x0ED0	0x90408E  	MOV.B	[W14+0], W1
0x0ED2	0xB3C2A0  	MOV.B	#42, W0
0x0ED4	0xE10C00  	CP.B	W1, W0
0x0ED6	0x3A000C  	BRA NZ	L_main47
L__main151:
;MEETKAART_V1_0_joysticks.c,498 :: 		Uart1_Write_Text("ok\r");
0x0ED8	0x20818A  	MOV	#lo_addr(?lstr41_MEETKAART_V1_0_joysticks), W10
0x0EDA	0x07FC7E  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,499 :: 		receive = 0x00;
0x0EDC	0xEF2000  	CLR	W0
0x0EDE	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,500 :: 		LATD.F9 = 0;
0x0EE0	0xA922DD  	BCLR	LATD, #9
;MEETKAART_V1_0_joysticks.c,501 :: 		Spi1_write(0x2C89 + Cal_anout14_2);
0x0EE2	0x22C891  	MOV	#11401, W1
0x0EE4	0x200640  	MOV	#100, W0
0x0EE6	0x470000  	ADD	W14, W0, W0
0x0EE8	0x408010  	ADD	W1, [W0], W0
0x0EEA	0x780500  	MOV	W0, W10
0x0EEC	0x07FC86  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,502 :: 		LATD.F9 = 1;
0x0EEE	0xA822DD  	BSET	LATD, #9
;MEETKAART_V1_0_joysticks.c,503 :: 		}
L_main47:
;MEETKAART_V1_0_joysticks.c,505 :: 		if (receive == 0x2B)//analoog uit 15 0V
0x0EF0	0x90408E  	MOV.B	[W14+0], W1
0x0EF2	0xB3C2B0  	MOV.B	#43, W0
0x0EF4	0xE10C00  	CP.B	W1, W0
0x0EF6	0x3A0008  	BRA NZ	L_main48
L__main152:
;MEETKAART_V1_0_joysticks.c,507 :: 		Uart1_Write_Text("ok\r");
0x0EF8	0x20880A  	MOV	#lo_addr(?lstr42_MEETKAART_V1_0_joysticks), W10
0x0EFA	0x07FC6E  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,508 :: 		receive = 0x00;
0x0EFC	0xEF2000  	CLR	W0
0x0EFE	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,509 :: 		LATD.F9 = 0;
0x0F00	0xA922DD  	BCLR	LATD, #9
;MEETKAART_V1_0_joysticks.c,510 :: 		Spi1_write(0x1000);
0x0F02	0x21000A  	MOV	#4096, W10
0x0F04	0x07FC7A  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,511 :: 		LATD.F9 = 1;
0x0F06	0xA822DD  	BSET	LATD, #9
;MEETKAART_V1_0_joysticks.c,512 :: 		}
L_main48:
;MEETKAART_V1_0_joysticks.c,514 :: 		if (receive == 0x2C)//analoog uit 15 5.0V
0x0F08	0x90408E  	MOV.B	[W14+0], W1
0x0F0A	0xB3C2C0  	MOV.B	#44, W0
0x0F0C	0xE10C00  	CP.B	W1, W0
0x0F0E	0x3A000C  	BRA NZ	L_main49
L__main153:
;MEETKAART_V1_0_joysticks.c,516 :: 		Uart1_Write_Text("ok\r");
0x0F10	0x20870A  	MOV	#lo_addr(?lstr43_MEETKAART_V1_0_joysticks), W10
0x0F12	0x07FC62  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,517 :: 		receive = 0x00;
0x0F14	0xEF2000  	CLR	W0
0x0F16	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,518 :: 		LATD.F9 = 0;
0x0F18	0xA922DD  	BCLR	LATD, #9
;MEETKAART_V1_0_joysticks.c,519 :: 		Spi1_write(0x19C4 + Cal_anout15_1);
0x0F1A	0x219C41  	MOV	#6596, W1
0x0F1C	0x200680  	MOV	#104, W0
0x0F1E	0x470000  	ADD	W14, W0, W0
0x0F20	0x408010  	ADD	W1, [W0], W0
0x0F22	0x780500  	MOV	W0, W10
0x0F24	0x07FC6A  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,520 :: 		LATD.F9 = 1;
0x0F26	0xA822DD  	BSET	LATD, #9
;MEETKAART_V1_0_joysticks.c,521 :: 		}
L_main49:
;MEETKAART_V1_0_joysticks.c,523 :: 		if (receive == 0x2D)//analoog uit 15 6.418V
0x0F28	0x90408E  	MOV.B	[W14+0], W1
0x0F2A	0xB3C2D0  	MOV.B	#45, W0
0x0F2C	0xE10C00  	CP.B	W1, W0
0x0F2E	0x3A000C  	BRA NZ	L_main50
L__main154:
;MEETKAART_V1_0_joysticks.c,525 :: 		Uart1_Write_Text("ok\r");
0x0F30	0x20878A  	MOV	#lo_addr(?lstr44_MEETKAART_V1_0_joysticks), W10
0x0F32	0x07FC52  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,526 :: 		receive = 0x00;
0x0F34	0xEF2000  	CLR	W0
0x0F36	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,527 :: 		LATD.F9 = 0;
0x0F38	0xA922DD  	BCLR	LATD, #9
;MEETKAART_V1_0_joysticks.c,528 :: 		Spi1_write(0x1C89 + Cal_anout15_2);
0x0F3A	0x21C891  	MOV	#7305, W1
0x0F3C	0x2006A0  	MOV	#106, W0
0x0F3E	0x470000  	ADD	W14, W0, W0
0x0F40	0x408010  	ADD	W1, [W0], W0
0x0F42	0x780500  	MOV	W0, W10
0x0F44	0x07FC5A  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,529 :: 		LATD.F9 = 1;
0x0F46	0xA822DD  	BSET	LATD, #9
;MEETKAART_V1_0_joysticks.c,530 :: 		}
L_main50:
;MEETKAART_V1_0_joysticks.c,532 :: 		if (receive == 0x2E)//analoog uit 16 0V
0x0F48	0x90408E  	MOV.B	[W14+0], W1
0x0F4A	0xB3C2E0  	MOV.B	#46, W0
0x0F4C	0xE10C00  	CP.B	W1, W0
0x0F4E	0x3A0008  	BRA NZ	L_main51
L__main155:
;MEETKAART_V1_0_joysticks.c,534 :: 		Uart1_Write_Text("ok\r");
0x0F50	0x20868A  	MOV	#lo_addr(?lstr45_MEETKAART_V1_0_joysticks), W10
0x0F52	0x07FC42  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,535 :: 		receive = 0x00;
0x0F54	0xEF2000  	CLR	W0
0x0F56	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,536 :: 		LATD.F9 = 0;
0x0F58	0xA922DD  	BCLR	LATD, #9
;MEETKAART_V1_0_joysticks.c,537 :: 		Spi1_write(0x0000);
0x0F5A	0xEF2014  	CLR	W10
0x0F5C	0x07FC4E  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,538 :: 		LATD.F9 = 1;
0x0F5E	0xA822DD  	BSET	LATD, #9
;MEETKAART_V1_0_joysticks.c,539 :: 		}
L_main51:
;MEETKAART_V1_0_joysticks.c,541 :: 		if (receive == 0x2F)//analoog uit 16 5.0V
0x0F60	0x90408E  	MOV.B	[W14+0], W1
0x0F62	0xB3C2F0  	MOV.B	#47, W0
0x0F64	0xE10C00  	CP.B	W1, W0
0x0F66	0x3A000C  	BRA NZ	L_main52
L__main156:
;MEETKAART_V1_0_joysticks.c,543 :: 		Uart1_Write_Text("ok\r");
0x0F68	0x20864A  	MOV	#lo_addr(?lstr46_MEETKAART_V1_0_joysticks), W10
0x0F6A	0x07FC36  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,544 :: 		receive = 0x00;
0x0F6C	0xEF2000  	CLR	W0
0x0F6E	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,545 :: 		LATD.F9 = 0;
0x0F70	0xA922DD  	BCLR	LATD, #9
;MEETKAART_V1_0_joysticks.c,546 :: 		Spi1_write(0x09C4 + Cal_anout16_1);
0x0F72	0x209C41  	MOV	#2500, W1
0x0F74	0x2006E0  	MOV	#110, W0
0x0F76	0x470000  	ADD	W14, W0, W0
0x0F78	0x408010  	ADD	W1, [W0], W0
0x0F7A	0x780500  	MOV	W0, W10
0x0F7C	0x07FC3E  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,547 :: 		LATD.F9 = 1;
0x0F7E	0xA822DD  	BSET	LATD, #9
;MEETKAART_V1_0_joysticks.c,548 :: 		}
L_main52:
;MEETKAART_V1_0_joysticks.c,550 :: 		if (receive == 0x30)//analoog uit 16 6.418V
0x0F80	0x90408E  	MOV.B	[W14+0], W1
0x0F82	0xB3C300  	MOV.B	#48, W0
0x0F84	0xE10C00  	CP.B	W1, W0
0x0F86	0x3A000B  	BRA NZ	L_main53
L__main157:
;MEETKAART_V1_0_joysticks.c,552 :: 		Uart1_Write_Text("ok\r");
0x0F88	0x20860A  	MOV	#lo_addr(?lstr47_MEETKAART_V1_0_joysticks), W10
0x0F8A	0x07FC26  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,553 :: 		receive = 0x00;
0x0F8C	0xEF2000  	CLR	W0
0x0F8E	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,554 :: 		LATD.F9 = 0;
0x0F90	0xA922DD  	BCLR	LATD, #9
;MEETKAART_V1_0_joysticks.c,555 :: 		Spi1_write(0x0C89 + Cal_anout1_2);
0x0F92	0x20C891  	MOV	#3209, W1
0x0F94	0x470078  	ADD	W14, #24, W0
0x0F96	0x408010  	ADD	W1, [W0], W0
0x0F98	0x780500  	MOV	W0, W10
0x0F9A	0x07FC2F  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,556 :: 		LATD.F9 = 1;
0x0F9C	0xA822DD  	BSET	LATD, #9
;MEETKAART_V1_0_joysticks.c,557 :: 		}
L_main53:
;MEETKAART_V1_0_joysticks.c,562 :: 		if (receive == 0x31)//analoog in 1
0x0F9E	0x90408E  	MOV.B	[W14+0], W1
0x0FA0	0xB3C310  	MOV.B	#49, W0
0x0FA2	0xE10C00  	CP.B	W1, W0
0x0FA4	0x3A001D  	BRA NZ	L_main54
L__main158:
;MEETKAART_V1_0_joysticks.c,564 :: 		Uart1_Write_Text("ok\r");
0x0FA6	0x2085CA  	MOV	#lo_addr(?lstr48_MEETKAART_V1_0_joysticks), W10
0x0FA8	0x07FC17  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,565 :: 		receive = 0x00;
0x0FAA	0xEF2000  	CLR	W0
0x0FAC	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,566 :: 		LATD.F0 = 0;
0x0FAE	0xA902DC  	BCLR.B	LATD, #0
;MEETKAART_V1_0_joysticks.c,567 :: 		Spi_Receive = Spi1_Read(0x0800);
0x0FB0	0x20800A  	MOV	#2048, W10
0x0FB2	0x07FBBE  	RCALL	_SPI1_Read
;MEETKAART_V1_0_joysticks.c,568 :: 		LATD.F0 = 1;
0x0FB4	0xA802DC  	BSET.B	LATD, #0
;MEETKAART_V1_0_joysticks.c,569 :: 		Delay_ms(2);
0x0FB6	0x214D57  	MOV	#5333, W7
L_main55:
0x0FB8	0xED200E  	DEC	W7
0x0FBA	0x3AFFFE  	BRA NZ	L_main55
0x0FBC	0x000000  	NOP
;MEETKAART_V1_0_joysticks.c,570 :: 		LATD.F0 = 0;
0x0FBE	0xA902DC  	BCLR.B	LATD, #0
;MEETKAART_V1_0_joysticks.c,571 :: 		Spi_Receive = Spi1_Read(0x0800);
0x0FC0	0x20800A  	MOV	#2048, W10
0x0FC2	0x07FBB6  	RCALL	_SPI1_Read
;MEETKAART_V1_0_joysticks.c,572 :: 		LATD.F0 = 1;
0x0FC4	0xA802DC  	BSET.B	LATD, #0
;MEETKAART_V1_0_joysticks.c,573 :: 		Spi_Receive = Spi_Receive * 6;
0x0FC6	0x200061  	MOV	#6, W1
0x0FC8	0xB80101  	MUL.UU	W0, W1, W2
;MEETKAART_V1_0_joysticks.c,574 :: 		Spi_Receive = Spi_Receive + Cal_anin1;
0x0FCA	0x470066  	ADD	W14, #6, W0
0x0FCC	0x410090  	ADD	W2, [W0], W1
;MEETKAART_V1_0_joysticks.c,575 :: 		IntToStr(Spi_Receive,txt);
0x0FCE	0x470061  	ADD	W14, #1, W0
0x0FD0	0x780580  	MOV	W0, W11
0x0FD2	0x780501  	MOV	W1, W10
0x0FD4	0x07FC97  	RCALL	_IntToStr
;MEETKAART_V1_0_joysticks.c,576 :: 		UART1_Write_Text(txt);
0x0FD6	0x470061  	ADD	W14, #1, W0
0x0FD8	0x780500  	MOV	W0, W10
0x0FDA	0x07FBFE  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,577 :: 		UART1_Write_Text("\r");
0x0FDC	0x2085AA  	MOV	#lo_addr(?lstr49_MEETKAART_V1_0_joysticks), W10
0x0FDE	0x07FBFC  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,578 :: 		}
L_main54:
;MEETKAART_V1_0_joysticks.c,580 :: 		if (receive == 0x32)//analoog in 2
0x0FE0	0x90408E  	MOV.B	[W14+0], W1
0x0FE2	0xB3C320  	MOV.B	#50, W0
0x0FE4	0xE10C00  	CP.B	W1, W0
0x0FE6	0x3A001D  	BRA NZ	L_main57
L__main159:
;MEETKAART_V1_0_joysticks.c,582 :: 		Uart1_Write_Text("ok\r");
0x0FE8	0x20850A  	MOV	#lo_addr(?lstr50_MEETKAART_V1_0_joysticks), W10
0x0FEA	0x07FBF6  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,583 :: 		receive = 0x00;
0x0FEC	0xEF2000  	CLR	W0
0x0FEE	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,584 :: 		LATD.F0 = 0;
0x0FF0	0xA902DC  	BCLR.B	LATD, #0
;MEETKAART_V1_0_joysticks.c,585 :: 		Spi_Receive = Spi1_Read(0x1600);
0x0FF2	0x21600A  	MOV	#5632, W10
0x0FF4	0x07FB9D  	RCALL	_SPI1_Read
;MEETKAART_V1_0_joysticks.c,586 :: 		LATD.F0 = 1;
0x0FF6	0xA802DC  	BSET.B	LATD, #0
;MEETKAART_V1_0_joysticks.c,587 :: 		Delay_ms(2);
0x0FF8	0x214D57  	MOV	#5333, W7
L_main58:
0x0FFA	0xED200E  	DEC	W7
0x0FFC	0x3AFFFE  	BRA NZ	L_main58
0x0FFE	0x000000  	NOP
;MEETKAART_V1_0_joysticks.c,588 :: 		LATD.F0 = 0;
0x1000	0xA902DC  	BCLR.B	LATD, #0
;MEETKAART_V1_0_joysticks.c,589 :: 		Spi_Receive = Spi1_Read(0x1600);
0x1002	0x21600A  	MOV	#5632, W10
0x1004	0x07FB95  	RCALL	_SPI1_Read
;MEETKAART_V1_0_joysticks.c,590 :: 		LATD.F0 = 1;
0x1006	0xA802DC  	BSET.B	LATD, #0
;MEETKAART_V1_0_joysticks.c,591 :: 		Spi_Receive = Spi_Receive * 6;
0x1008	0x200061  	MOV	#6, W1
0x100A	0xB80101  	MUL.UU	W0, W1, W2
;MEETKAART_V1_0_joysticks.c,592 :: 		Spi_Receive = Spi_Receive + Cal_anin2;
0x100C	0x470068  	ADD	W14, #8, W0
0x100E	0x410090  	ADD	W2, [W0], W1
;MEETKAART_V1_0_joysticks.c,593 :: 		IntToStr(Spi_Receive,txt);
0x1010	0x470061  	ADD	W14, #1, W0
0x1012	0x780580  	MOV	W0, W11
0x1014	0x780501  	MOV	W1, W10
0x1016	0x07FC76  	RCALL	_IntToStr
;MEETKAART_V1_0_joysticks.c,594 :: 		UART1_Write_Text(txt);
0x1018	0x470061  	ADD	W14, #1, W0
0x101A	0x780500  	MOV	W0, W10
0x101C	0x07FBDD  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,595 :: 		UART1_Write_Text("\r");
0x101E	0x20856A  	MOV	#lo_addr(?lstr51_MEETKAART_V1_0_joysticks), W10
0x1020	0x07FBDB  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,596 :: 		}
L_main57:
;MEETKAART_V1_0_joysticks.c,598 :: 		if (receive == 0x33)//analoog in 3
0x1022	0x90408E  	MOV.B	[W14+0], W1
0x1024	0xB3C330  	MOV.B	#51, W0
0x1026	0xE10C00  	CP.B	W1, W0
0x1028	0x3A001D  	BRA NZ	L_main60
L__main160:
;MEETKAART_V1_0_joysticks.c,600 :: 		Uart1_Write_Text("ok\r");
0x102A	0x2086CA  	MOV	#lo_addr(?lstr52_MEETKAART_V1_0_joysticks), W10
0x102C	0x07FBD5  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,601 :: 		receive = 0x00;
0x102E	0xEF2000  	CLR	W0
0x1030	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,602 :: 		LATD.F0 = 0;
0x1032	0xA902DC  	BCLR.B	LATD, #0
;MEETKAART_V1_0_joysticks.c,603 :: 		Spi_Receive = Spi1_Read(0x0000);
0x1034	0xEF2014  	CLR	W10
0x1036	0x07FB7C  	RCALL	_SPI1_Read
;MEETKAART_V1_0_joysticks.c,604 :: 		LATD.F0 = 1;
0x1038	0xA802DC  	BSET.B	LATD, #0
;MEETKAART_V1_0_joysticks.c,605 :: 		Delay_ms(2);
0x103A	0x214D57  	MOV	#5333, W7
L_main61:
0x103C	0xED200E  	DEC	W7
0x103E	0x3AFFFE  	BRA NZ	L_main61
0x1040	0x000000  	NOP
;MEETKAART_V1_0_joysticks.c,606 :: 		LATD.F0 = 0;
0x1042	0xA902DC  	BCLR.B	LATD, #0
;MEETKAART_V1_0_joysticks.c,607 :: 		Spi_Receive = Spi1_Read(0x0000);
0x1044	0xEF2014  	CLR	W10
0x1046	0x07FB74  	RCALL	_SPI1_Read
;MEETKAART_V1_0_joysticks.c,608 :: 		LATD.F0 = 1;
0x1048	0xA802DC  	BSET.B	LATD, #0
;MEETKAART_V1_0_joysticks.c,609 :: 		Spi_Receive = Spi_Receive * 6;
0x104A	0x200061  	MOV	#6, W1
0x104C	0xB80101  	MUL.UU	W0, W1, W2
;MEETKAART_V1_0_joysticks.c,610 :: 		Spi_Receive = Spi_Receive + Cal_anin3;
0x104E	0x47006A  	ADD	W14, #10, W0
0x1050	0x410090  	ADD	W2, [W0], W1
;MEETKAART_V1_0_joysticks.c,611 :: 		IntToStr(Spi_Receive,txt);
0x1052	0x470061  	ADD	W14, #1, W0
0x1054	0x780580  	MOV	W0, W11
0x1056	0x780501  	MOV	W1, W10
0x1058	0x07FC55  	RCALL	_IntToStr
;MEETKAART_V1_0_joysticks.c,612 :: 		UART1_Write_Text(txt);
0x105A	0x470061  	ADD	W14, #1, W0
0x105C	0x780500  	MOV	W0, W10
0x105E	0x07FBBC  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,613 :: 		UART1_Write_Text("\r");
0x1060	0x20858A  	MOV	#lo_addr(?lstr53_MEETKAART_V1_0_joysticks), W10
0x1062	0x07FBBA  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,614 :: 		}
L_main60:
;MEETKAART_V1_0_joysticks.c,616 :: 		if (receive == 0x34)//analoog in 4
0x1064	0x90408E  	MOV.B	[W14+0], W1
0x1066	0xB3C340  	MOV.B	#52, W0
0x1068	0xE10C00  	CP.B	W1, W0
0x106A	0x3A001D  	BRA NZ	L_main63
L__main161:
;MEETKAART_V1_0_joysticks.c,618 :: 		Uart1_Write_Text("ok\r");
0x106C	0x2084CA  	MOV	#lo_addr(?lstr54_MEETKAART_V1_0_joysticks), W10
0x106E	0x07FBB4  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,619 :: 		receive = 0x00;
0x1070	0xEF2000  	CLR	W0
0x1072	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,620 :: 		LATD.F0 = 0;
0x1074	0xA902DC  	BCLR.B	LATD, #0
;MEETKAART_V1_0_joysticks.c,621 :: 		Spi_Receive = Spi1_Read(0x1800);
0x1076	0x21800A  	MOV	#6144, W10
0x1078	0x07FB5B  	RCALL	_SPI1_Read
;MEETKAART_V1_0_joysticks.c,622 :: 		LATD.F0 = 1;
0x107A	0xA802DC  	BSET.B	LATD, #0
;MEETKAART_V1_0_joysticks.c,623 :: 		Delay_ms(2);
0x107C	0x214D57  	MOV	#5333, W7
L_main64:
0x107E	0xED200E  	DEC	W7
0x1080	0x3AFFFE  	BRA NZ	L_main64
0x1082	0x000000  	NOP
;MEETKAART_V1_0_joysticks.c,624 :: 		LATD.F0 = 0;
0x1084	0xA902DC  	BCLR.B	LATD, #0
;MEETKAART_V1_0_joysticks.c,625 :: 		Spi_Receive = Spi1_Read(0x1800);
0x1086	0x21800A  	MOV	#6144, W10
0x1088	0x07FB53  	RCALL	_SPI1_Read
;MEETKAART_V1_0_joysticks.c,626 :: 		LATD.F0 = 1;
0x108A	0xA802DC  	BSET.B	LATD, #0
;MEETKAART_V1_0_joysticks.c,627 :: 		Spi_Receive = Spi_Receive * 6;
0x108C	0x200061  	MOV	#6, W1
0x108E	0xB80101  	MUL.UU	W0, W1, W2
;MEETKAART_V1_0_joysticks.c,628 :: 		Spi_Receive = Spi_Receive + Cal_anin4;
0x1090	0x47006C  	ADD	W14, #12, W0
0x1092	0x410090  	ADD	W2, [W0], W1
;MEETKAART_V1_0_joysticks.c,629 :: 		IntToStr(Spi_Receive,txt);
0x1094	0x470061  	ADD	W14, #1, W0
0x1096	0x780580  	MOV	W0, W11
0x1098	0x780501  	MOV	W1, W10
0x109A	0x07FC34  	RCALL	_IntToStr
;MEETKAART_V1_0_joysticks.c,630 :: 		UART1_Write_Text(txt);
0x109C	0x470061  	ADD	W14, #1, W0
0x109E	0x780500  	MOV	W0, W10
0x10A0	0x07FB9B  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,631 :: 		UART1_Write_Text("\r");
0x10A2	0x20854A  	MOV	#lo_addr(?lstr55_MEETKAART_V1_0_joysticks), W10
0x10A4	0x07FB99  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,632 :: 		}
L_main63:
;MEETKAART_V1_0_joysticks.c,634 :: 		if (receive == 0x35)//analoog in 5
0x10A6	0x90408E  	MOV.B	[W14+0], W1
0x10A8	0xB3C350  	MOV.B	#53, W0
0x10AA	0xE10C00  	CP.B	W1, W0
0x10AC	0x3A001D  	BRA NZ	L_main66
L__main162:
;MEETKAART_V1_0_joysticks.c,636 :: 		Uart1_Write_Text("ok\r");
0x10AE	0x20848A  	MOV	#lo_addr(?lstr56_MEETKAART_V1_0_joysticks), W10
0x10B0	0x07FB93  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,637 :: 		receive = 0x00;
0x10B2	0xEF2000  	CLR	W0
0x10B4	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,638 :: 		LATD.F0 = 0;
0x10B6	0xA902DC  	BCLR.B	LATD, #0
;MEETKAART_V1_0_joysticks.c,639 :: 		Spi_Receive = Spi1_Read(0x2800);
0x10B8	0x22800A  	MOV	#10240, W10
0x10BA	0x07FB3A  	RCALL	_SPI1_Read
;MEETKAART_V1_0_joysticks.c,640 :: 		LATD.F0 = 1;
0x10BC	0xA802DC  	BSET.B	LATD, #0
;MEETKAART_V1_0_joysticks.c,641 :: 		Delay_ms(2);
0x10BE	0x214D57  	MOV	#5333, W7
L_main67:
0x10C0	0xED200E  	DEC	W7
0x10C2	0x3AFFFE  	BRA NZ	L_main67
0x10C4	0x000000  	NOP
;MEETKAART_V1_0_joysticks.c,642 :: 		LATD.F0 = 0;
0x10C6	0xA902DC  	BCLR.B	LATD, #0
;MEETKAART_V1_0_joysticks.c,643 :: 		Spi_Receive = Spi1_Read(0x2800);
0x10C8	0x22800A  	MOV	#10240, W10
0x10CA	0x07FB32  	RCALL	_SPI1_Read
;MEETKAART_V1_0_joysticks.c,644 :: 		LATD.F0 = 1;
0x10CC	0xA802DC  	BSET.B	LATD, #0
;MEETKAART_V1_0_joysticks.c,645 :: 		Spi_Receive = Spi_Receive * 6;
0x10CE	0x200061  	MOV	#6, W1
0x10D0	0xB80101  	MUL.UU	W0, W1, W2
;MEETKAART_V1_0_joysticks.c,646 :: 		Spi_Receive = Spi_Receive + Cal_anin5;
0x10D2	0x47006E  	ADD	W14, #14, W0
0x10D4	0x410090  	ADD	W2, [W0], W1
;MEETKAART_V1_0_joysticks.c,647 :: 		IntToStr(Spi_Receive,txt);
0x10D6	0x470061  	ADD	W14, #1, W0
0x10D8	0x780580  	MOV	W0, W11
0x10DA	0x780501  	MOV	W1, W10
0x10DC	0x07FC13  	RCALL	_IntToStr
;MEETKAART_V1_0_joysticks.c,648 :: 		UART1_Write_Text(txt);
0x10DE	0x470061  	ADD	W14, #1, W0
0x10E0	0x780500  	MOV	W0, W10
0x10E2	0x07FB7A  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,649 :: 		UART1_Write_Text("\r");
0x10E4	0x20846A  	MOV	#lo_addr(?lstr57_MEETKAART_V1_0_joysticks), W10
0x10E6	0x07FB78  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,650 :: 		}
L_main66:
;MEETKAART_V1_0_joysticks.c,652 :: 		if (receive == 0x36)//analoog in 6
0x10E8	0x90408E  	MOV.B	[W14+0], W1
0x10EA	0xB3C360  	MOV.B	#54, W0
0x10EC	0xE10C00  	CP.B	W1, W0
0x10EE	0x3A001D  	BRA NZ	L_main69
L__main163:
;MEETKAART_V1_0_joysticks.c,654 :: 		Uart1_Write_Text("ok\r");
0x10F0	0x20842A  	MOV	#lo_addr(?lstr58_MEETKAART_V1_0_joysticks), W10
0x10F2	0x07FB72  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,655 :: 		receive = 0x00;
0x10F4	0xEF2000  	CLR	W0
0x10F6	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,656 :: 		LATD.F0 = 0;
0x10F8	0xA902DC  	BCLR.B	LATD, #0
;MEETKAART_V1_0_joysticks.c,657 :: 		Spi_Receive = Spi1_Read(0x3000);
0x10FA	0x23000A  	MOV	#12288, W10
0x10FC	0x07FB19  	RCALL	_SPI1_Read
;MEETKAART_V1_0_joysticks.c,658 :: 		LATD.F0 = 1;
0x10FE	0xA802DC  	BSET.B	LATD, #0
;MEETKAART_V1_0_joysticks.c,659 :: 		Delay_ms(2);
0x1100	0x214D57  	MOV	#5333, W7
L_main70:
0x1102	0xED200E  	DEC	W7
0x1104	0x3AFFFE  	BRA NZ	L_main70
0x1106	0x000000  	NOP
;MEETKAART_V1_0_joysticks.c,660 :: 		LATD.F0 = 0;
0x1108	0xA902DC  	BCLR.B	LATD, #0
;MEETKAART_V1_0_joysticks.c,661 :: 		Spi_Receive = Spi1_Read(0x3000);
0x110A	0x23000A  	MOV	#12288, W10
0x110C	0x07FB11  	RCALL	_SPI1_Read
;MEETKAART_V1_0_joysticks.c,662 :: 		LATD.F0 = 1;
0x110E	0xA802DC  	BSET.B	LATD, #0
;MEETKAART_V1_0_joysticks.c,663 :: 		Spi_Receive = Spi_Receive * 6;
0x1110	0x200061  	MOV	#6, W1
0x1112	0xB80101  	MUL.UU	W0, W1, W2
;MEETKAART_V1_0_joysticks.c,664 :: 		Spi_Receive = Spi_Receive + Cal_anin6;
0x1114	0x470070  	ADD	W14, #16, W0
0x1116	0x410090  	ADD	W2, [W0], W1
;MEETKAART_V1_0_joysticks.c,665 :: 		IntToStr(Spi_Receive,txt);
0x1118	0x470061  	ADD	W14, #1, W0
0x111A	0x780580  	MOV	W0, W11
0x111C	0x780501  	MOV	W1, W10
0x111E	0x07FBF2  	RCALL	_IntToStr
;MEETKAART_V1_0_joysticks.c,666 :: 		UART1_Write_Text(txt);
0x1120	0x470061  	ADD	W14, #1, W0
0x1122	0x780500  	MOV	W0, W10
0x1124	0x07FB59  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,667 :: 		UART1_Write_Text("\r");
0x1126	0x20840A  	MOV	#lo_addr(?lstr59_MEETKAART_V1_0_joysticks), W10
0x1128	0x07FB57  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,668 :: 		}
L_main69:
;MEETKAART_V1_0_joysticks.c,670 :: 		if (receive == 0x37)//analoog in 7
0x112A	0x90408E  	MOV.B	[W14+0], W1
0x112C	0xB3C370  	MOV.B	#55, W0
0x112E	0xE10C00  	CP.B	W1, W0
0x1130	0x3A001D  	BRA NZ	L_main72
L__main164:
;MEETKAART_V1_0_joysticks.c,672 :: 		Uart1_Write_Text("ok\r");
0x1132	0x2083CA  	MOV	#lo_addr(?lstr60_MEETKAART_V1_0_joysticks), W10
0x1134	0x07FB51  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,673 :: 		receive = 0x00;
0x1136	0xEF2000  	CLR	W0
0x1138	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,674 :: 		LATD.F0 = 0;
0x113A	0xA902DC  	BCLR.B	LATD, #0
;MEETKAART_V1_0_joysticks.c,675 :: 		Spi_Receive = Spi1_Read(0x3800);
0x113C	0x23800A  	MOV	#14336, W10
0x113E	0x07FAF8  	RCALL	_SPI1_Read
;MEETKAART_V1_0_joysticks.c,676 :: 		LATD.F0 = 1;
0x1140	0xA802DC  	BSET.B	LATD, #0
;MEETKAART_V1_0_joysticks.c,677 :: 		Delay_ms(2);
0x1142	0x214D57  	MOV	#5333, W7
L_main73:
0x1144	0xED200E  	DEC	W7
0x1146	0x3AFFFE  	BRA NZ	L_main73
0x1148	0x000000  	NOP
;MEETKAART_V1_0_joysticks.c,678 :: 		LATD.F0 = 0;
0x114A	0xA902DC  	BCLR.B	LATD, #0
;MEETKAART_V1_0_joysticks.c,679 :: 		Spi_Receive = Spi1_Read(0x3800);
0x114C	0x23800A  	MOV	#14336, W10
0x114E	0x07FAF0  	RCALL	_SPI1_Read
;MEETKAART_V1_0_joysticks.c,680 :: 		LATD.F0 = 1;
0x1150	0xA802DC  	BSET.B	LATD, #0
;MEETKAART_V1_0_joysticks.c,681 :: 		Spi_Receive = Spi_Receive * 6;
0x1152	0x200061  	MOV	#6, W1
0x1154	0xB80101  	MUL.UU	W0, W1, W2
;MEETKAART_V1_0_joysticks.c,682 :: 		Spi_Receive = Spi_Receive + Cal_anin7;
0x1156	0x470072  	ADD	W14, #18, W0
0x1158	0x410090  	ADD	W2, [W0], W1
;MEETKAART_V1_0_joysticks.c,683 :: 		IntToStr(Spi_Receive,txt);
0x115A	0x470061  	ADD	W14, #1, W0
0x115C	0x780580  	MOV	W0, W11
0x115E	0x780501  	MOV	W1, W10
0x1160	0x07FBD1  	RCALL	_IntToStr
;MEETKAART_V1_0_joysticks.c,684 :: 		UART1_Write_Text(txt);
0x1162	0x470061  	ADD	W14, #1, W0
0x1164	0x780500  	MOV	W0, W10
0x1166	0x07FB38  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,685 :: 		UART1_Write_Text("\r");
0x1168	0x20830A  	MOV	#lo_addr(?lstr61_MEETKAART_V1_0_joysticks), W10
0x116A	0x07FB36  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,686 :: 		}
L_main72:
;MEETKAART_V1_0_joysticks.c,688 :: 		if (receive == 0x38)//analoog in 8
0x116C	0x90408E  	MOV.B	[W14+0], W1
0x116E	0xB3C380  	MOV.B	#56, W0
0x1170	0xE10C00  	CP.B	W1, W0
0x1172	0x3A001D  	BRA NZ	L_main75
L__main165:
;MEETKAART_V1_0_joysticks.c,690 :: 		Uart1_Write_Text("ok\r");
0x1174	0x20838A  	MOV	#lo_addr(?lstr62_MEETKAART_V1_0_joysticks), W10
0x1176	0x07FB30  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,691 :: 		receive = 0x00;
0x1178	0xEF2000  	CLR	W0
0x117A	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,692 :: 		LATD.F0 = 0;
0x117C	0xA902DC  	BCLR.B	LATD, #0
;MEETKAART_V1_0_joysticks.c,693 :: 		Spi_Receive = Spi1_Read(0x2000);
0x117E	0x22000A  	MOV	#8192, W10
0x1180	0x07FAD7  	RCALL	_SPI1_Read
;MEETKAART_V1_0_joysticks.c,694 :: 		LATD.F0 = 1;
0x1182	0xA802DC  	BSET.B	LATD, #0
;MEETKAART_V1_0_joysticks.c,695 :: 		Delay_ms(2);
0x1184	0x214D57  	MOV	#5333, W7
L_main76:
0x1186	0xED200E  	DEC	W7
0x1188	0x3AFFFE  	BRA NZ	L_main76
0x118A	0x000000  	NOP
;MEETKAART_V1_0_joysticks.c,696 :: 		LATD.F0 = 0;
0x118C	0xA902DC  	BCLR.B	LATD, #0
;MEETKAART_V1_0_joysticks.c,697 :: 		Spi_Receive = Spi1_Read(0x2000);
0x118E	0x22000A  	MOV	#8192, W10
0x1190	0x07FACF  	RCALL	_SPI1_Read
;MEETKAART_V1_0_joysticks.c,698 :: 		LATD.F0 = 1;
0x1192	0xA802DC  	BSET.B	LATD, #0
;MEETKAART_V1_0_joysticks.c,699 :: 		Spi_Receive = Spi_Receive * 6;
0x1194	0x200061  	MOV	#6, W1
0x1196	0xB80101  	MUL.UU	W0, W1, W2
;MEETKAART_V1_0_joysticks.c,700 :: 		Spi_Receive = Spi_Receive + Cal_anin8;
0x1198	0x470074  	ADD	W14, #20, W0
0x119A	0x410090  	ADD	W2, [W0], W1
;MEETKAART_V1_0_joysticks.c,701 :: 		IntToStr(Spi_Receive,txt);
0x119C	0x470061  	ADD	W14, #1, W0
0x119E	0x780580  	MOV	W0, W11
0x11A0	0x780501  	MOV	W1, W10
0x11A2	0x07FBB0  	RCALL	_IntToStr
;MEETKAART_V1_0_joysticks.c,702 :: 		UART1_Write_Text(txt);
0x11A4	0x470061  	ADD	W14, #1, W0
0x11A6	0x780500  	MOV	W0, W10
0x11A8	0x07FB17  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,703 :: 		UART1_Write_Text("\r");
0x11AA	0x20836A  	MOV	#lo_addr(?lstr63_MEETKAART_V1_0_joysticks), W10
0x11AC	0x07FB15  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,704 :: 		}
L_main75:
;MEETKAART_V1_0_joysticks.c,709 :: 		if (receive == 0x39)//digitaal uit 1
0x11AE	0x90408E  	MOV.B	[W14+0], W1
0x11B0	0xB3C390  	MOV.B	#57, W0
0x11B2	0xE10C00  	CP.B	W1, W0
0x11B4	0x3A000C  	BRA NZ	L_main78
L__main166:
;MEETKAART_V1_0_joysticks.c,711 :: 		UART1_Write_Text("ok\r");
0x11B6	0x20832A  	MOV	#lo_addr(?lstr64_MEETKAART_V1_0_joysticks), W10
0x11B8	0x07FB0F  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,712 :: 		receive = 0x00;
0x11BA	0xEF2000  	CLR	W0
0x11BC	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,713 :: 		LATG.F7 = 1;
0x11BE	0xA8E2F4  	BSET.B	LATG, #7
;MEETKAART_V1_0_joysticks.c,714 :: 		Delay_ms(600);
0x11C0	0x200198  	MOV	#25, W8
0x11C2	0x26A077  	MOV	#27143, W7
L_main79:
0x11C4	0xED200E  	DEC	W7
0x11C6	0x3AFFFE  	BRA NZ	L_main79
0x11C8	0xED2010  	DEC	W8
0x11CA	0x3AFFFC  	BRA NZ	L_main79
;MEETKAART_V1_0_joysticks.c,715 :: 		LATG.F7 = 0;
0x11CC	0xA9E2F4  	BCLR.B	LATG, #7
;MEETKAART_V1_0_joysticks.c,716 :: 		}
L_main78:
;MEETKAART_V1_0_joysticks.c,718 :: 		if(receive == 0x3A)//digitaal uit 2
0x11CE	0x90408E  	MOV.B	[W14+0], W1
0x11D0	0xB3C3A0  	MOV.B	#58, W0
0x11D2	0xE10C00  	CP.B	W1, W0
0x11D4	0x3A000C  	BRA NZ	L_main81
L__main167:
;MEETKAART_V1_0_joysticks.c,720 :: 		Uart1_Write_Text("ok\r");
0x11D6	0x2082CA  	MOV	#lo_addr(?lstr65_MEETKAART_V1_0_joysticks), W10
0x11D8	0x07FAFF  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,721 :: 		receive = 0x01;
0x11DA	0xB3C010  	MOV.B	#1, W0
0x11DC	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,722 :: 		LATG.F6 =1;
0x11DE	0xA8C2F4  	BSET.B	LATG, #6
;MEETKAART_V1_0_joysticks.c,723 :: 		Delay_ms(600);
0x11E0	0x200198  	MOV	#25, W8
0x11E2	0x26A077  	MOV	#27143, W7
L_main82:
0x11E4	0xED200E  	DEC	W7
0x11E6	0x3AFFFE  	BRA NZ	L_main82
0x11E8	0xED2010  	DEC	W8
0x11EA	0x3AFFFC  	BRA NZ	L_main82
;MEETKAART_V1_0_joysticks.c,724 :: 		LATG.F6 = 0;
0x11EC	0xA9C2F4  	BCLR.B	LATG, #6
;MEETKAART_V1_0_joysticks.c,725 :: 		}
L_main81:
;MEETKAART_V1_0_joysticks.c,727 :: 		if (receive == 0x3B)//digitaal uit 3
0x11EE	0x90408E  	MOV.B	[W14+0], W1
0x11F0	0xB3C3B0  	MOV.B	#59, W0
0x11F2	0xE10C00  	CP.B	W1, W0
0x11F4	0x3A000C  	BRA NZ	L_main84
L__main168:
;MEETKAART_V1_0_joysticks.c,729 :: 		Uart1_Write_Text("ok\r");
0x11F6	0x20820A  	MOV	#lo_addr(?lstr66_MEETKAART_V1_0_joysticks), W10
0x11F8	0x07FAEF  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,730 :: 		receive = 0x00;
0x11FA	0xEF2000  	CLR	W0
0x11FC	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,731 :: 		LATE.F7 = 1;
0x11FE	0xA8E2E4  	BSET.B	LATE, #7
;MEETKAART_V1_0_joysticks.c,732 :: 		Delay_ms(600);
0x1200	0x200198  	MOV	#25, W8
0x1202	0x26A077  	MOV	#27143, W7
L_main85:
0x1204	0xED200E  	DEC	W7
0x1206	0x3AFFFE  	BRA NZ	L_main85
0x1208	0xED2010  	DEC	W8
0x120A	0x3AFFFC  	BRA NZ	L_main85
;MEETKAART_V1_0_joysticks.c,733 :: 		LATE.F7 = 0;
0x120C	0xA9E2E4  	BCLR.B	LATE, #7
;MEETKAART_V1_0_joysticks.c,734 :: 		}
L_main84:
;MEETKAART_V1_0_joysticks.c,736 :: 		if (receive == 0x3C)//digitaal uit 4
0x120E	0x90408E  	MOV.B	[W14+0], W1
0x1210	0xB3C3C0  	MOV.B	#60, W0
0x1212	0xE10C00  	CP.B	W1, W0
0x1214	0x3A000C  	BRA NZ	L_main87
L__main169:
;MEETKAART_V1_0_joysticks.c,738 :: 		Uart1_Write_Text("ok\r");
0x1216	0x20824A  	MOV	#lo_addr(?lstr67_MEETKAART_V1_0_joysticks), W10
0x1218	0x07FADF  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,739 :: 		receive = 0x00;
0x121A	0xEF2000  	CLR	W0
0x121C	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,740 :: 		LATE.F5 = 1;
0x121E	0xA8A2E4  	BSET.B	LATE, #5
;MEETKAART_V1_0_joysticks.c,741 :: 		Delay_ms(600);
0x1220	0x200198  	MOV	#25, W8
0x1222	0x26A077  	MOV	#27143, W7
L_main88:
0x1224	0xED200E  	DEC	W7
0x1226	0x3AFFFE  	BRA NZ	L_main88
0x1228	0xED2010  	DEC	W8
0x122A	0x3AFFFC  	BRA NZ	L_main88
;MEETKAART_V1_0_joysticks.c,742 :: 		LATE.F5 = 0;
0x122C	0xA9A2E4  	BCLR.B	LATE, #5
;MEETKAART_V1_0_joysticks.c,743 :: 		}
L_main87:
;MEETKAART_V1_0_joysticks.c,745 :: 		if (receive == 0x3D)//digitaal uit 5
0x122E	0x90408E  	MOV.B	[W14+0], W1
0x1230	0xB3C3D0  	MOV.B	#61, W0
0x1232	0xE10C00  	CP.B	W1, W0
0x1234	0x3A000C  	BRA NZ	L_main90
L__main170:
;MEETKAART_V1_0_joysticks.c,747 :: 		Uart1_Write_Text("ok\r");
0x1236	0x20814A  	MOV	#lo_addr(?lstr68_MEETKAART_V1_0_joysticks), W10
0x1238	0x07FACF  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,748 :: 		receive = 0x00;
0x123A	0xEF2000  	CLR	W0
0x123C	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,749 :: 		LATE.F6 = 1;
0x123E	0xA8C2E4  	BSET.B	LATE, #6
;MEETKAART_V1_0_joysticks.c,750 :: 		Delay_ms(600);
0x1240	0x200198  	MOV	#25, W8
0x1242	0x26A077  	MOV	#27143, W7
L_main91:
0x1244	0xED200E  	DEC	W7
0x1246	0x3AFFFE  	BRA NZ	L_main91
0x1248	0xED2010  	DEC	W8
0x124A	0x3AFFFC  	BRA NZ	L_main91
;MEETKAART_V1_0_joysticks.c,751 :: 		LATE.F6 = 0;
0x124C	0xA9C2E4  	BCLR.B	LATE, #6
;MEETKAART_V1_0_joysticks.c,752 :: 		}
L_main90:
;MEETKAART_V1_0_joysticks.c,797 :: 		if (receive == 0x3E)//analoog uit 1 0.5V
0x124E	0x90408E  	MOV.B	[W14+0], W1
0x1250	0xB3C3E0  	MOV.B	#62, W0
0x1252	0xE10C00  	CP.B	W1, W0
0x1254	0x3A000B  	BRA NZ	L_main93
L__main171:
;MEETKAART_V1_0_joysticks.c,799 :: 		Uart1_Write_Text("ok\r");
0x1256	0x2081CA  	MOV	#lo_addr(?lstr69_MEETKAART_V1_0_joysticks), W10
0x1258	0x07FABF  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,800 :: 		receive = 0x00;
0x125A	0xEF2000  	CLR	W0
0x125C	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,801 :: 		LATD.F10 = 0;
0x125E	0xA942DD  	BCLR	LATD, #10
;MEETKAART_V1_0_joysticks.c,802 :: 		Spi1_write(0x40FA + Cal_anout1_3);
0x1260	0x240FA1  	MOV	#16634, W1
0x1262	0x47007A  	ADD	W14, #26, W0
0x1264	0x408010  	ADD	W1, [W0], W0
0x1266	0x780500  	MOV	W0, W10
0x1268	0x07FAC8  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,803 :: 		LATD.F10 = 1;
0x126A	0xA842DD  	BSET	LATD, #10
;MEETKAART_V1_0_joysticks.c,804 :: 		}
L_main93:
;MEETKAART_V1_0_joysticks.c,806 :: 		if (receive == 0x3F)//analoog uit 2 0.5V
0x126C	0x90408E  	MOV.B	[W14+0], W1
0x126E	0xB3C3F0  	MOV.B	#63, W0
0x1270	0xE10C00  	CP.B	W1, W0
0x1272	0x3A000C  	BRA NZ	L_main94
L__main172:
;MEETKAART_V1_0_joysticks.c,808 :: 		Uart1_Write_Text("ok\r");
0x1274	0x20804A  	MOV	#lo_addr(?lstr70_MEETKAART_V1_0_joysticks), W10
0x1276	0x07FAB0  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,809 :: 		receive = 0x00;
0x1278	0xEF2000  	CLR	W0
0x127A	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,810 :: 		LATD.F10 = 0;
0x127C	0xA942DD  	BCLR	LATD, #10
;MEETKAART_V1_0_joysticks.c,811 :: 		Spi1_write(0x50FA + Cal_anout2_3);
0x127E	0x250FA1  	MOV	#20730, W1
0x1280	0x200200  	MOV	#32, W0
0x1282	0x470000  	ADD	W14, W0, W0
0x1284	0x408010  	ADD	W1, [W0], W0
0x1286	0x780500  	MOV	W0, W10
0x1288	0x07FAB8  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,812 :: 		LATD.F10 = 1;
0x128A	0xA842DD  	BSET	LATD, #10
;MEETKAART_V1_0_joysticks.c,813 :: 		}
L_main94:
;MEETKAART_V1_0_joysticks.c,815 :: 		if (receive == 0x40)//analoog uit 3 0.5V
0x128C	0x90408E  	MOV.B	[W14+0], W1
0x128E	0xB3C400  	MOV.B	#64, W0
0x1290	0xE10C00  	CP.B	W1, W0
0x1292	0x3A000C  	BRA NZ	L_main95
L__main173:
;MEETKAART_V1_0_joysticks.c,817 :: 		Uart1_Write_Text("ok\r");
0x1294	0x2080CA  	MOV	#lo_addr(?lstr71_MEETKAART_V1_0_joysticks), W10
0x1296	0x07FAA0  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,818 :: 		receive = 0x00;
0x1298	0xEF2000  	CLR	W0
0x129A	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,819 :: 		LATD.F10 = 0;
0x129C	0xA942DD  	BCLR	LATD, #10
;MEETKAART_V1_0_joysticks.c,820 :: 		Spi1_write(0x60FA + Cal_anout3_3 );
0x129E	0x260FA1  	MOV	#24826, W1
0x12A0	0x200260  	MOV	#38, W0
0x12A2	0x470000  	ADD	W14, W0, W0
0x12A4	0x408010  	ADD	W1, [W0], W0
0x12A6	0x780500  	MOV	W0, W10
0x12A8	0x07FAA8  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,821 :: 		LATD.F10 = 1;
0x12AA	0xA842DD  	BSET	LATD, #10
;MEETKAART_V1_0_joysticks.c,822 :: 		}
L_main95:
;MEETKAART_V1_0_joysticks.c,824 :: 		if (receive == 0x41)//analoog uit  4 0.5V
0x12AC	0x90408E  	MOV.B	[W14+0], W1
0x12AE	0xB3C410  	MOV.B	#65, W0
0x12B0	0xE10C00  	CP.B	W1, W0
0x12B2	0x3A000C  	BRA NZ	L_main96
L__main174:
;MEETKAART_V1_0_joysticks.c,826 :: 		Uart1_Write_Text("ok\r");
0x12B4	0x20828A  	MOV	#lo_addr(?lstr72_MEETKAART_V1_0_joysticks), W10
0x12B6	0x07FA90  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,827 :: 		receive = 0x00;
0x12B8	0xEF2000  	CLR	W0
0x12BA	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,828 :: 		LATD.F10 = 0;
0x12BC	0xA942DD  	BCLR	LATD, #10
;MEETKAART_V1_0_joysticks.c,829 :: 		Spi1_write(0x70FA + Cal_anout4_3);
0x12BE	0x270FA1  	MOV	#28922, W1
0x12C0	0x2002C0  	MOV	#44, W0
0x12C2	0x470000  	ADD	W14, W0, W0
0x12C4	0x408010  	ADD	W1, [W0], W0
0x12C6	0x780500  	MOV	W0, W10
0x12C8	0x07FA98  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,830 :: 		LATD.F10 = 1;
0x12CA	0xA842DD  	BSET	LATD, #10
;MEETKAART_V1_0_joysticks.c,831 :: 		}
L_main96:
;MEETKAART_V1_0_joysticks.c,833 :: 		if (receive == 0x42)//analoog uit 5 0.5V
0x12CC	0x90408E  	MOV.B	[W14+0], W1
0x12CE	0xB3C420  	MOV.B	#66, W0
0x12D0	0xE10C00  	CP.B	W1, W0
0x12D2	0x3A000C  	BRA NZ	L_main97
L__main175:
;MEETKAART_V1_0_joysticks.c,835 :: 		Uart1_Write_Text("ok\r");
0x12D4	0x20810A  	MOV	#lo_addr(?lstr73_MEETKAART_V1_0_joysticks), W10
0x12D6	0x07FA80  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,836 :: 		receive = 0x00;
0x12D8	0xEF2000  	CLR	W0
0x12DA	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,837 :: 		LATD.F10 = 0;
0x12DC	0xA942DD  	BCLR	LATD, #10
;MEETKAART_V1_0_joysticks.c,838 :: 		Spi1_write(0x30FA + Cal_anout5_3);
0x12DE	0x230FA1  	MOV	#12538, W1
0x12E0	0x200320  	MOV	#50, W0
0x12E2	0x470000  	ADD	W14, W0, W0
0x12E4	0x408010  	ADD	W1, [W0], W0
0x12E6	0x780500  	MOV	W0, W10
0x12E8	0x07FA88  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,839 :: 		LATD.F10 = 1;
0x12EA	0xA842DD  	BSET	LATD, #10
;MEETKAART_V1_0_joysticks.c,840 :: 		}
L_main97:
;MEETKAART_V1_0_joysticks.c,842 :: 		if (receive == 0x43)//analoog uit  6 0.5V
0x12EC	0x90408E  	MOV.B	[W14+0], W1
0x12EE	0xB3C430  	MOV.B	#67, W0
0x12F0	0xE10C00  	CP.B	W1, W0
0x12F2	0x3A000C  	BRA NZ	L_main98
L__main176:
;MEETKAART_V1_0_joysticks.c,844 :: 		Uart1_Write_Text("ok\r");
0x12F4	0x20800A  	MOV	#lo_addr(?lstr74_MEETKAART_V1_0_joysticks), W10
0x12F6	0x07FA70  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,845 :: 		receive = 0x00;
0x12F8	0xEF2000  	CLR	W0
0x12FA	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,846 :: 		LATD.F10 = 0;
0x12FC	0xA942DD  	BCLR	LATD, #10
;MEETKAART_V1_0_joysticks.c,847 :: 		Spi1_write(0x20FA + Cal_anout6_3);
0x12FE	0x220FA1  	MOV	#8442, W1
0x1300	0x200380  	MOV	#56, W0
0x1302	0x470000  	ADD	W14, W0, W0
0x1304	0x408010  	ADD	W1, [W0], W0
0x1306	0x780500  	MOV	W0, W10
0x1308	0x07FA78  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,848 :: 		LATD.F10 = 1;
0x130A	0xA842DD  	BSET	LATD, #10
;MEETKAART_V1_0_joysticks.c,849 :: 		}
L_main98:
;MEETKAART_V1_0_joysticks.c,851 :: 		if (receive == 0x44)//analoog uit 7 0.5V
0x130C	0x90408E  	MOV.B	[W14+0], W1
0x130E	0xB3C440  	MOV.B	#68, W0
0x1310	0xE10C00  	CP.B	W1, W0
0x1312	0x3A0008  	BRA NZ	L_main99
L__main177:
;MEETKAART_V1_0_joysticks.c,853 :: 		Uart1_Write_Text("ok\r");
0x1314	0x20808A  	MOV	#lo_addr(?lstr75_MEETKAART_V1_0_joysticks), W10
0x1316	0x07FA60  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,854 :: 		receive = 0x00;
0x1318	0xEF2000  	CLR	W0
0x131A	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,855 :: 		LATD.F10 = 0;
0x131C	0xA942DD  	BCLR	LATD, #10
;MEETKAART_V1_0_joysticks.c,856 :: 		Spi1_write(0x10FA);
0x131E	0x210FAA  	MOV	#4346, W10
0x1320	0x07FA6C  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,857 :: 		LATD.F10 = 1;
0x1322	0xA842DD  	BSET	LATD, #10
;MEETKAART_V1_0_joysticks.c,858 :: 		}
L_main99:
;MEETKAART_V1_0_joysticks.c,860 :: 		if (receive == 0x45)//analoog uit 8 0.5V
0x1324	0x90408E  	MOV.B	[W14+0], W1
0x1326	0xB3C450  	MOV.B	#69, W0
0x1328	0xE10C00  	CP.B	W1, W0
0x132A	0x3A000C  	BRA NZ	L_main100
L__main178:
;MEETKAART_V1_0_joysticks.c,862 :: 		Uart1_Write_Text("ok\r");
0x132C	0x208E4A  	MOV	#lo_addr(?lstr76_MEETKAART_V1_0_joysticks), W10
0x132E	0x07FA54  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,863 :: 		receive = 0x00;
0x1330	0xEF2000  	CLR	W0
0x1332	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,864 :: 		LATD.F10 = 0;
0x1334	0xA942DD  	BCLR	LATD, #10
;MEETKAART_V1_0_joysticks.c,865 :: 		Spi1_write(0x00FA + Cal_anout8_3);
0x1336	0x200FA1  	MOV	#250, W1
0x1338	0x200420  	MOV	#66, W0
0x133A	0x470000  	ADD	W14, W0, W0
0x133C	0x408010  	ADD	W1, [W0], W0
0x133E	0x780500  	MOV	W0, W10
0x1340	0x07FA5C  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,866 :: 		LATD.F10 = 1;
0x1342	0xA842DD  	BSET	LATD, #10
;MEETKAART_V1_0_joysticks.c,867 :: 		}
L_main100:
;MEETKAART_V1_0_joysticks.c,871 :: 		if (receive == 0x46)//analoog uit 9 0.5V
0x1344	0x90408E  	MOV.B	[W14+0], W1
0x1346	0xB3C460  	MOV.B	#70, W0
0x1348	0xE10C00  	CP.B	W1, W0
0x134A	0x3A000C  	BRA NZ	L_main101
L__main179:
;MEETKAART_V1_0_joysticks.c,873 :: 		Uart1_Write_Text("ok\r");
0x134C	0x208C8A  	MOV	#lo_addr(?lstr77_MEETKAART_V1_0_joysticks), W10
0x134E	0x07FA44  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,874 :: 		receive = 0x00;
0x1350	0xEF2000  	CLR	W0
0x1352	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,875 :: 		LATD.F9 = 0;
0x1354	0xA922DD  	BCLR	LATD, #9
;MEETKAART_V1_0_joysticks.c,876 :: 		Spi1_write(0x40FA + Cal_anout9_3);
0x1356	0x240FA1  	MOV	#16634, W1
0x1358	0x200480  	MOV	#72, W0
0x135A	0x470000  	ADD	W14, W0, W0
0x135C	0x408010  	ADD	W1, [W0], W0
0x135E	0x780500  	MOV	W0, W10
0x1360	0x07FA4C  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,877 :: 		LATD.F9 = 1;
0x1362	0xA822DD  	BSET	LATD, #9
;MEETKAART_V1_0_joysticks.c,878 :: 		}
L_main101:
;MEETKAART_V1_0_joysticks.c,882 :: 		if (receive == 0x47)//analoog uit 10 0.5V
0x1364	0x90408E  	MOV.B	[W14+0], W1
0x1366	0xB3C470  	MOV.B	#71, W0
0x1368	0xE10C00  	CP.B	W1, W0
0x136A	0x3A000C  	BRA NZ	L_main102
L__main180:
;MEETKAART_V1_0_joysticks.c,884 :: 		Uart1_Write_Text("ok\r");
0x136C	0x208E8A  	MOV	#lo_addr(?lstr78_MEETKAART_V1_0_joysticks), W10
0x136E	0x07FA34  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,885 :: 		receive = 0x00;
0x1370	0xEF2000  	CLR	W0
0x1372	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,886 :: 		LATD.F9 = 0;
0x1374	0xA922DD  	BCLR	LATD, #9
;MEETKAART_V1_0_joysticks.c,887 :: 		Spi1_write(0x50FA + Cal_anout10_3);
0x1376	0x250FA1  	MOV	#20730, W1
0x1378	0x2004E0  	MOV	#78, W0
0x137A	0x470000  	ADD	W14, W0, W0
0x137C	0x408010  	ADD	W1, [W0], W0
0x137E	0x780500  	MOV	W0, W10
0x1380	0x07FA3C  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,888 :: 		LATD.F9 = 1;
0x1382	0xA822DD  	BSET	LATD, #9
;MEETKAART_V1_0_joysticks.c,889 :: 		}
L_main102:
;MEETKAART_V1_0_joysticks.c,891 :: 		if (receive == 0x48)//analoog uit 11 0.5V
0x1384	0x90408E  	MOV.B	[W14+0], W1
0x1386	0xB3C480  	MOV.B	#72, W0
0x1388	0xE10C00  	CP.B	W1, W0
0x138A	0x3A000C  	BRA NZ	L_main103
L__main181:
;MEETKAART_V1_0_joysticks.c,893 :: 		Uart1_Write_Text("ok\r");
0x138C	0x208D8A  	MOV	#lo_addr(?lstr79_MEETKAART_V1_0_joysticks), W10
0x138E	0x07FA24  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,894 :: 		receive = 0x00;
0x1390	0xEF2000  	CLR	W0
0x1392	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,895 :: 		LATD.F9 = 0;
0x1394	0xA922DD  	BCLR	LATD, #9
;MEETKAART_V1_0_joysticks.c,896 :: 		Spi1_write(0x60FA + Cal_anout11_3);
0x1396	0x260FA1  	MOV	#24826, W1
0x1398	0x200540  	MOV	#84, W0
0x139A	0x470000  	ADD	W14, W0, W0
0x139C	0x408010  	ADD	W1, [W0], W0
0x139E	0x780500  	MOV	W0, W10
0x13A0	0x07FA2C  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,897 :: 		LATD.F9 = 1;
0x13A2	0xA822DD  	BSET	LATD, #9
;MEETKAART_V1_0_joysticks.c,898 :: 		}
L_main103:
;MEETKAART_V1_0_joysticks.c,900 :: 		if (receive == 0x49)//analoog uit 12 0.5V
0x13A4	0x90408E  	MOV.B	[W14+0], W1
0x13A6	0xB3C490  	MOV.B	#73, W0
0x13A8	0xE10C00  	CP.B	W1, W0
0x13AA	0x3A000C  	BRA NZ	L_main104
L__main182:
;MEETKAART_V1_0_joysticks.c,902 :: 		Uart1_Write_Text("ok\r");
0x13AC	0x208E0A  	MOV	#lo_addr(?lstr80_MEETKAART_V1_0_joysticks), W10
0x13AE	0x07FA14  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,903 :: 		receive = 0x00;
0x13B0	0xEF2000  	CLR	W0
0x13B2	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,904 :: 		LATD.F9 = 0;
0x13B4	0xA922DD  	BCLR	LATD, #9
;MEETKAART_V1_0_joysticks.c,905 :: 		Spi1_write(0x70FA + Cal_anout12_3);
0x13B6	0x270FA1  	MOV	#28922, W1
0x13B8	0x2005A0  	MOV	#90, W0
0x13BA	0x470000  	ADD	W14, W0, W0
0x13BC	0x408010  	ADD	W1, [W0], W0
0x13BE	0x780500  	MOV	W0, W10
0x13C0	0x07FA1C  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,906 :: 		LATD.F9 = 1;
0x13C2	0xA822DD  	BSET	LATD, #9
;MEETKAART_V1_0_joysticks.c,907 :: 		}
L_main104:
;MEETKAART_V1_0_joysticks.c,909 :: 		if (receive == 0x4A)//analoog uit 13 0.5V
0x13C4	0x90408E  	MOV.B	[W14+0], W1
0x13C6	0xB3C4A0  	MOV.B	#74, W0
0x13C8	0xE10C00  	CP.B	W1, W0
0x13CA	0x3A000C  	BRA NZ	L_main105
L__main183:
;MEETKAART_V1_0_joysticks.c,911 :: 		Uart1_Write_Text("ok\r");
0x13CC	0x208C4A  	MOV	#lo_addr(?lstr81_MEETKAART_V1_0_joysticks), W10
0x13CE	0x07FA04  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,912 :: 		receive = 0x00;
0x13D0	0xEF2000  	CLR	W0
0x13D2	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,913 :: 		LATD.F9 = 0;
0x13D4	0xA922DD  	BCLR	LATD, #9
;MEETKAART_V1_0_joysticks.c,914 :: 		Spi1_write(0x30FA + Cal_anout13_3);
0x13D6	0x230FA1  	MOV	#12538, W1
0x13D8	0x200600  	MOV	#96, W0
0x13DA	0x470000  	ADD	W14, W0, W0
0x13DC	0x408010  	ADD	W1, [W0], W0
0x13DE	0x780500  	MOV	W0, W10
0x13E0	0x07FA0C  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,915 :: 		LATD.F9 = 1;
0x13E2	0xA822DD  	BSET	LATD, #9
;MEETKAART_V1_0_joysticks.c,916 :: 		}
L_main105:
;MEETKAART_V1_0_joysticks.c,920 :: 		if (receive == 0x4B)//analoog uit 14 0.5V
0x13E4	0x90408E  	MOV.B	[W14+0], W1
0x13E6	0xB3C4B0  	MOV.B	#75, W0
0x13E8	0xE10C00  	CP.B	W1, W0
0x13EA	0x3A000C  	BRA NZ	L_main106
L__main184:
;MEETKAART_V1_0_joysticks.c,922 :: 		Uart1_Write_Text("ok\r");
0x13EC	0x208D4A  	MOV	#lo_addr(?lstr82_MEETKAART_V1_0_joysticks), W10
0x13EE	0x07F9F4  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,923 :: 		receive = 0x00;
0x13F0	0xEF2000  	CLR	W0
0x13F2	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,924 :: 		LATD.F9 = 0;
0x13F4	0xA922DD  	BCLR	LATD, #9
;MEETKAART_V1_0_joysticks.c,925 :: 		Spi1_write(0x20FA + Cal_anout14_3);
0x13F6	0x220FA1  	MOV	#8442, W1
0x13F8	0x200660  	MOV	#102, W0
0x13FA	0x470000  	ADD	W14, W0, W0
0x13FC	0x408010  	ADD	W1, [W0], W0
0x13FE	0x780500  	MOV	W0, W10
0x1400	0x07F9FC  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,926 :: 		LATD.F9 = 1;
0x1402	0xA822DD  	BSET	LATD, #9
;MEETKAART_V1_0_joysticks.c,927 :: 		}
L_main106:
;MEETKAART_V1_0_joysticks.c,929 :: 		if (receive == 0x4C)//analoog uit 15 0.5V
0x1404	0x90408E  	MOV.B	[W14+0], W1
0x1406	0xB3C4C0  	MOV.B	#76, W0
0x1408	0xE10C00  	CP.B	W1, W0
0x140A	0x3A000C  	BRA NZ	L_main107
L__main185:
;MEETKAART_V1_0_joysticks.c,931 :: 		Uart1_Write_Text("ok\r");
0x140C	0x208D0A  	MOV	#lo_addr(?lstr83_MEETKAART_V1_0_joysticks), W10
0x140E	0x07F9E4  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,932 :: 		receive = 0x00;
0x1410	0xEF2000  	CLR	W0
0x1412	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,933 :: 		LATD.F9 = 0;
0x1414	0xA922DD  	BCLR	LATD, #9
;MEETKAART_V1_0_joysticks.c,934 :: 		Spi1_write(0x10FA + Cal_anout15_3);
0x1416	0x210FA1  	MOV	#4346, W1
0x1418	0x2006C0  	MOV	#108, W0
0x141A	0x470000  	ADD	W14, W0, W0
0x141C	0x408010  	ADD	W1, [W0], W0
0x141E	0x780500  	MOV	W0, W10
0x1420	0x07F9EC  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,935 :: 		LATD.F9 = 1;
0x1422	0xA822DD  	BSET	LATD, #9
;MEETKAART_V1_0_joysticks.c,936 :: 		}
L_main107:
;MEETKAART_V1_0_joysticks.c,941 :: 		if (receive == 0x4D)//analoog uit 16 0.5V
0x1424	0x90408E  	MOV.B	[W14+0], W1
0x1426	0xB3C4D0  	MOV.B	#77, W0
0x1428	0xE10C00  	CP.B	W1, W0
0x142A	0x3A000C  	BRA NZ	L_main108
L__main186:
;MEETKAART_V1_0_joysticks.c,943 :: 		Uart1_Write_Text("ok\r");
0x142C	0x208CCA  	MOV	#lo_addr(?lstr84_MEETKAART_V1_0_joysticks), W10
0x142E	0x07F9D4  	RCALL	_UART1_Write_Text
;MEETKAART_V1_0_joysticks.c,944 :: 		receive = 0x00;
0x1430	0xEF2000  	CLR	W0
0x1432	0x984700  	MOV.B	W0, [W14+0]
;MEETKAART_V1_0_joysticks.c,945 :: 		LATD.F9 = 0;
0x1434	0xA922DD  	BCLR	LATD, #9
;MEETKAART_V1_0_joysticks.c,946 :: 		Spi1_write(0x00FA + Cal_anout16_3);
0x1436	0x200FA1  	MOV	#250, W1
0x1438	0x200700  	MOV	#112, W0
0x143A	0x470000  	ADD	W14, W0, W0
0x143C	0x408010  	ADD	W1, [W0], W0
0x143E	0x780500  	MOV	W0, W10
0x1440	0x07F9DC  	RCALL	_SPI1_Write
;MEETKAART_V1_0_joysticks.c,947 :: 		LATD.F9 = 1;
0x1442	0xA822DD  	BSET	LATD, #9
;MEETKAART_V1_0_joysticks.c,948 :: 		}
L_main108:
;MEETKAART_V1_0_joysticks.c,949 :: 		}
0x1444	0x37FB16  	BRA	L_main4
;MEETKAART_V1_0_joysticks.c,950 :: 		}
L_end_main:
0x1446	0x7806CF  	POP	W13
0x1448	0x78064F  	POP	W12
0x144A	0x7805CF  	POP	W11
0x144C	0x78054F  	POP	W10
0x144E	0xFA8000  	ULNK
L__main_end_loop:
0x1450	0x37FFFF  	BRA	L__main_end_loop
; end of _main
_UART1_Init:
0x0802	0xFA0008  	LNK	#8
;__Lib_UART_1234_p24_p33.c,161 :: 		
;__Lib_UART_1234_p24_p33.c,164 :: 		
0x0804	0x207480  	MOV	#lo_addr(_UART1_Write), W0
0x0806	0x884A30  	MOV	W0, _UART_Wr_Ptr
;__Lib_UART_1234_p24_p33.c,165 :: 		
0x0808	0x209A20  	MOV	#lo_addr(_UART1_Read), W0
0x080A	0x884A50  	MOV	W0, _UART_Rd_Ptr
;__Lib_UART_1234_p24_p33.c,166 :: 		
0x080C	0x209AE0  	MOV	#lo_addr(_UART1_Data_Ready), W0
0x080E	0x884A40  	MOV	W0, _UART_Rdy_Ptr
;__Lib_UART_1234_p24_p33.c,167 :: 		
0x0810	0x2FFFF0  	MOV	#lo_addr(_UART1_Tx_Idle), W0
0x0812	0x884A00  	MOV	W0, _UART_Tx_Idle_Ptr
;__Lib_UART_1234_p24_p33.c,172 :: 		
0x0814	0xEF2220  	CLR	U1MODE
;__Lib_UART_1234_p24_p33.c,173 :: 		
0x0816	0x280000  	MOV	#32768, W0
0x0818	0xB7A222  	MOV	WREG, U1STA
;__Lib_UART_1234_p24_p33.c,177 :: 		
0x081A	0xA96220  	BCLR.B	U1MODE, #3
;__Lib_UART_1234_p24_p33.c,178 :: 		
0x081C	0x07FFD1  	RCALL	_Get_Fosc_kHz
; tmp start address is: 4 (W2)
0x081E	0xBE0100  	MOV.D	W0, W2
;__Lib_UART_1234_p24_p33.c,180 :: 		
0x0820	0x203E80  	MOV	#1000, W0
0x0822	0x200001  	MOV	#0, W1
0x0824	0x07FFD0  	RCALL	__Multiply_32x32
0x0826	0xBE0100  	MOV.D	W0, W2
;__Lib_UART_1234_p24_p33.c,182 :: 		
0x0828	0x07FFC9  	RCALL	_Get_Fosc_Per_Cyc
0x082A	0xDE0041  	LSR	W0, #1, W0
0x082C	0x400064  	ADD	W0, #4, W0
0x082E	0x780080  	MOV	W0, W1
0x0830	0x470060  	ADD	W14, #0, W0
0x0832	0xBE880A  	MOV.D	W10, [W0]
L__UART1_Init141:
0x0834	0xE90081  	DEC	W1, W1
0x0836	0x350003  	BRA LT	L__UART1_Init142
0x0838	0xD01810  	SL	[W0], [W0++]
0x083A	0xD29010  	RLC	[W0], [W0--]
0x083C	0x37FFFB  	BRA	L__UART1_Init141
L__UART1_Init142:
;__Lib_UART_1234_p24_p33.c,184 :: 		
0x083E	0xBE9F82  	PUSH.D	W2
0x0840	0xBE9F8A  	PUSH.D	W10
0x0842	0xBE0002  	MOV.D	W2, W0
0x0844	0x90010E  	MOV	[W14+0], W2
0x0846	0x90019E  	MOV	[W14+2], W3
0x0848	0xEB0200  	CLR	W4
0x084A	0x07FF85  	RCALL	__Modulus_32x32
0x084C	0xBE054F  	POP.D	W10
0x084E	0xBE014F  	POP.D	W2
0x0850	0x980720  	MOV	W0, [W14+4]
0x0852	0x980731  	MOV	W1, [W14+6]
;__Lib_UART_1234_p24_p33.c,185 :: 		
0x0854	0xBE9F8A  	PUSH.D	W10
; tmp end address is: 4 (W2)
0x0856	0xBE0002  	MOV.D	W2, W0
0x0858	0x90010E  	MOV	[W14+0], W2
0x085A	0x90019E  	MOV	[W14+2], W3
0x085C	0xEB0200  	CLR	W4
0x085E	0x07FF1B  	RCALL	__Divide_32x32
0x0860	0xBE054F  	POP.D	W10
; tmp start address is: 6 (W3)
0x0862	0x780180  	MOV	W0, W3
0x0864	0x780201  	MOV	W1, W4
;__Lib_UART_1234_p24_p33.c,187 :: 		
0x0866	0x470060  	ADD	W14, #0, W0
0x0868	0xD10150  	LSR	[++W0], W2
0x086A	0xD380C0  	RRC	[--W0], W1
0x086C	0x470064  	ADD	W14, #4, W0
0x086E	0xE10830  	CP	W1, [W0++]
0x0870	0xE19020  	CPB	W2, [W0--]
0x0872	0x310007  	BRA GEU	L__UART1_Init112
L__UART1_Init143:
;__Lib_UART_1234_p24_p33.c,188 :: 		
0x0874	0x418061  	ADD	W3, #1, W0
0x0876	0x4A00E0  	ADDC	W4, #0, W1
; tmp end address is: 6 (W3)
; tmp start address is: 10 (W5)
0x0878	0x780280  	MOV	W0, W5
0x087A	0x780301  	MOV	W1, W6
; tmp end address is: 10 (W5)
0x087C	0x780105  	MOV	W5, W2
0x087E	0x780186  	MOV	W6, W3
0x0880	0x370002  	BRA	L_UART1_Init13
L__UART1_Init112:
;__Lib_UART_1234_p24_p33.c,187 :: 		
0x0882	0x780103  	MOV	W3, W2
0x0884	0x780184  	MOV	W4, W3
;__Lib_UART_1234_p24_p33.c,188 :: 		
L_UART1_Init13:
;__Lib_UART_1234_p24_p33.c,191 :: 		
; tmp start address is: 4 (W2)
0x0886	0x718002  	IOR	W3, W2, W0
0x0888	0x3A0033  	BRA NZ	L__UART1_Init114
L__UART1_Init144:
; tmp end address is: 4 (W2)
;__Lib_UART_1234_p24_p33.c,193 :: 		
0x088A	0x07FF9A  	RCALL	_Get_Fosc_kHz
; tmp start address is: 4 (W2)
0x088C	0xBE0100  	MOV.D	W0, W2
;__Lib_UART_1234_p24_p33.c,195 :: 		
0x088E	0x203E80  	MOV	#1000, W0
0x0890	0x200001  	MOV	#0, W1
0x0892	0x07FF99  	RCALL	__Multiply_32x32
0x0894	0xBE0100  	MOV.D	W0, W2
;__Lib_UART_1234_p24_p33.c,197 :: 		
0x0896	0x07FF92  	RCALL	_Get_Fosc_Per_Cyc
0x0898	0xDE0041  	LSR	W0, #1, W0
0x089A	0xECA000  	INC2	W0
0x089C	0x780080  	MOV	W0, W1
0x089E	0x470060  	ADD	W14, #0, W0
0x08A0	0xBE880A  	MOV.D	W10, [W0]
L__UART1_Init145:
0x08A2	0xE90081  	DEC	W1, W1
0x08A4	0x350003  	BRA LT	L__UART1_Init146
0x08A6	0xD01810  	SL	[W0], [W0++]
0x08A8	0xD29010  	RLC	[W0], [W0--]
0x08AA	0x37FFFB  	BRA	L__UART1_Init145
L__UART1_Init146:
;__Lib_UART_1234_p24_p33.c,199 :: 		
0x08AC	0xBE9F82  	PUSH.D	W2
0x08AE	0xBE0002  	MOV.D	W2, W0
0x08B0	0x90010E  	MOV	[W14+0], W2
0x08B2	0x90019E  	MOV	[W14+2], W3
0x08B4	0xEB0200  	CLR	W4
0x08B6	0x07FF4F  	RCALL	__Modulus_32x32
0x08B8	0xBE014F  	POP.D	W2
0x08BA	0x980720  	MOV	W0, [W14+4]
0x08BC	0x980731  	MOV	W1, [W14+6]
;__Lib_UART_1234_p24_p33.c,200 :: 		
0x08BE	0xBE0002  	MOV.D	W2, W0
0x08C0	0x90010E  	MOV	[W14+0], W2
0x08C2	0x90019E  	MOV	[W14+2], W3
0x08C4	0xEB0200  	CLR	W4
0x08C6	0x07FEE7  	RCALL	__Divide_32x32
; tmp end address is: 4 (W2)
; tmp start address is: 6 (W3)
0x08C8	0x780180  	MOV	W0, W3
0x08CA	0x780201  	MOV	W1, W4
;__Lib_UART_1234_p24_p33.c,202 :: 		
0x08CC	0x470060  	ADD	W14, #0, W0
0x08CE	0xD10150  	LSR	[++W0], W2
0x08D0	0xD380C0  	RRC	[--W0], W1
0x08D2	0x470064  	ADD	W14, #4, W0
0x08D4	0xE10830  	CP	W1, [W0++]
0x08D6	0xE19020  	CPB	W2, [W0--]
0x08D8	0x310007  	BRA GEU	L__UART1_Init113
L__UART1_Init147:
;__Lib_UART_1234_p24_p33.c,203 :: 		
0x08DA	0x418061  	ADD	W3, #1, W0
0x08DC	0x4A00E0  	ADDC	W4, #0, W1
; tmp end address is: 6 (W3)
; tmp start address is: 10 (W5)
0x08DE	0x780280  	MOV	W0, W5
0x08E0	0x780301  	MOV	W1, W6
; tmp end address is: 10 (W5)
0x08E2	0x780105  	MOV	W5, W2
0x08E4	0x780186  	MOV	W6, W3
0x08E6	0x370002  	BRA	L_UART1_Init15
L__UART1_Init113:
;__Lib_UART_1234_p24_p33.c,202 :: 		
0x08E8	0x780103  	MOV	W3, W2
0x08EA	0x780184  	MOV	W4, W3
;__Lib_UART_1234_p24_p33.c,203 :: 		
L_UART1_Init15:
;__Lib_UART_1234_p24_p33.c,205 :: 		
; tmp start address is: 4 (W2)
0x08EC	0xA86220  	BSET.B	U1MODE, #3
; tmp end address is: 4 (W2)
;__Lib_UART_1234_p24_p33.c,206 :: 		
0x08EE	0x370000  	BRA	L_UART1_Init14
L__UART1_Init114:
;__Lib_UART_1234_p24_p33.c,191 :: 		
;__Lib_UART_1234_p24_p33.c,206 :: 		
L_UART1_Init14:
;__Lib_UART_1234_p24_p33.c,208 :: 		
; tmp start address is: 4 (W2)
0x08F0	0x510061  	SUB	W2, #1, W0
0x08F2	0x5980E0  	SUBB	W3, #0, W1
; tmp end address is: 4 (W2)
; tmp start address is: 0 (W0)
0x08F4	0x881140  	MOV	W0, U1BRG
; tmp end address is: 0 (W0)
;__Lib_UART_1234_p24_p33.c,211 :: 		
0x08F6	0xA92222  	BCLR.B	U1STA, #1
;__Lib_UART_1234_p24_p33.c,213 :: 		
0x08F8	0xA8E221  	BSET	U1MODE, #15
;__Lib_UART_1234_p24_p33.c,214 :: 		
0x08FA	0xA84223  	BSET	U1STA, #10
;__Lib_UART_1234_p24_p33.c,216 :: 		
0x08FC	0x07FF58  	RCALL	_Delay_100ms
0x08FE	0x07FF57  	RCALL	_Delay_100ms
;__Lib_UART_1234_p24_p33.c,218 :: 		
L_end_UART1_Init:
0x0900	0xFA8000  	ULNK
0x0902	0x060000  	RETURN
; end of _UART1_Init
_Get_Fosc_kHz:
;__Lib_Delays.c,38 :: 		unsigned long Get_Fosc_kHz() {
;__Lib_Delays.c,39 :: 		return Clock_kHz();
0x07C0	0x23E800  	MOV	#16000, W0
0x07C2	0x200001  	MOV	#0, W1
;__Lib_Delays.c,40 :: 		}
L_end_Get_Fosc_kHz:
0x07C4	0x060000  	RETURN
; end of _Get_Fosc_kHz
_Get_Fosc_Per_Cyc:
;__Lib_Delays.c,63 :: 		unsigned int Get_Fosc_Per_Cyc() {
;__Lib_Delays.c,64 :: 		return __FOSC_PER_CYC;
0x07BC	0x200020  	MOV	#2, W0
;__Lib_Delays.c,65 :: 		}
L_end_Get_Fosc_Per_Cyc:
0x07BE	0x060000  	RETURN
; end of _Get_Fosc_Per_Cyc
_Delay_100ms:
;__Lib_Delays.c,666 :: 		void Delay_100ms()
;__Lib_Delays.c,668 :: 		Delay_ms(100);
0x07AE	0x200058  	MOV	#5, W8
0x07B0	0x211AB7  	MOV	#4523, W7
L_Delay_100ms33:
0x07B2	0xED200E  	DEC	W7
0x07B4	0x3AFFFE  	BRA NZ	L_Delay_100ms33
0x07B6	0xED2010  	DEC	W8
0x07B8	0x3AFFFC  	BRA NZ	L_Delay_100ms33
;__Lib_Delays.c,669 :: 		}
L_end_Delay_100ms:
0x07BA	0x060000  	RETURN
; end of _Delay_100ms
__Multiply_32x32:
0x07C6	0xFA0000  	LNK	#0
;__Lib_Math.c,43 :: 		
;__Lib_Math.c,46 :: 		
0x07C8	0xB80A02  	MUL.UU	W1, W2, W4
;__Lib_Math.c,47 :: 		
0x07CA	0x880050  	MOV	W0, W5
;__Lib_Math.c,48 :: 		
0x07CC	0xB80002  	MUL.UU	W0, W2, W0
;__Lib_Math.c,49 :: 		
0x07CE	0x420081  	ADD	W4, W1, W1
;__Lib_Math.c,50 :: 		
0x07D0	0xB82A03  	MUL.UU	W5, W3, W4
;__Lib_Math.c,51 :: 		
0x07D2	0x420081  	ADD	W4, W1, W1
;__Lib_Math.c,54 :: 		
L_end__Multiply_32x32:
0x07D4	0xFA8000  	ULNK
0x07D6	0x060000  	RETURN
; end of __Multiply_32x32
__Modulus_32x32:
0x0756	0xFA0000  	LNK	#0
;__Lib_Math.c,162 :: 		
;__Lib_Math.c,164 :: 		
0x0758	0x070002  	RCALL	Modulus_32x32___testsus
;__Lib_Math.c,166 :: 		
0x075A	0x0000000407AA  	GOTO	the_end_Modulus_32x32
;__Lib_Math.c,171 :: 		
Modulus_32x32___testsus:
;__Lib_Math.c,172 :: 		
0x075E	0xE20008  	CP0	W4
;__Lib_Math.c,173 :: 		
0x0760	0x3A0002  	BRA NZ	Modulus_32x32___modsi3
;__Lib_Math.c,175 :: 		
0x0762	0x070010  	RCALL	Modulus_32x32___umodsi3
;__Lib_Math.c,176 :: 		
0x0764	0x060000  	RETURN
;__Lib_Math.c,178 :: 		
Modulus_32x32___modsi3:
;__Lib_Math.c,179 :: 		
0x0766	0x781F81  	MOV	W1, [W15++]
;__Lib_Math.c,180 :: 		
0x0768	0xE20002  	CP0	W1
;__Lib_Math.c,181 :: 		
0x076A	0x3D0002  	BRA GE	Modulus_32x32_modtestb
;__Lib_Math.c,182 :: 		
0x076C	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,183 :: 		
0x076E	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,184 :: 		
Modulus_32x32_modtestb:
;__Lib_Math.c,185 :: 		
0x0770	0xE20006  	CP0	W3
;__Lib_Math.c,186 :: 		
0x0772	0x3D0002  	BRA GE	Modulus_32x32_calcrem
;__Lib_Math.c,187 :: 		
0x0774	0x110160  	SUBR	W2, #0, W2
;__Lib_Math.c,188 :: 		
0x0776	0x1981E0  	SUBBR	W3, #0, W3
;__Lib_Math.c,189 :: 		
Modulus_32x32_calcrem:
;__Lib_Math.c,190 :: 		
0x0778	0x070005  	RCALL	Modulus_32x32___umodsi3
;__Lib_Math.c,191 :: 		
0x077A	0xE0004F  	CP0	[--W15]
;__Lib_Math.c,192 :: 		
0x077C	0x3B0002  	BRA NN	Modulus_32x32_exitr
;__Lib_Math.c,193 :: 		
0x077E	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,194 :: 		
0x0780	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,195 :: 		
Modulus_32x32_exitr:
;__Lib_Math.c,196 :: 		
0x0782	0x060000  	RETURN
;__Lib_Math.c,197 :: 		
Modulus_32x32___umodsi3:
;__Lib_Math.c,198 :: 		
0x0784	0x070002  	RCALL	Modulus_32x32___udivsi3
;__Lib_Math.c,199 :: 		
0x0786	0xBE8004  	MOV.D	W4, W0
;__Lib_Math.c,200 :: 		
0x0788	0x060000  	RETURN
;__Lib_Math.c,201 :: 		
Modulus_32x32___udivsi3:
;__Lib_Math.c,202 :: 		
0x078A	0xB82260  	MUL.UU	W4, #0, W4
;__Lib_Math.c,203 :: 		
0x078C	0x200206  	MOV	#32, W6
;__Lib_Math.c,204 :: 		
Modulus_32x32_nextbit:
;__Lib_Math.c,205 :: 		
0x078E	0xD00000  	SL	W0, W0
;__Lib_Math.c,206 :: 		
0x0790	0xD28081  	RLC	W1, W1
;__Lib_Math.c,207 :: 		
0x0792	0xD28204  	RLC	W4, W4
;__Lib_Math.c,208 :: 		
0x0794	0xD28285  	RLC	W5, W5
;__Lib_Math.c,209 :: 		
0x0796	0xA80000  	BSET	W0, #0
;__Lib_Math.c,210 :: 		
0x0798	0x520202  	SUB	W4, W2, W4
;__Lib_Math.c,211 :: 		
0x079A	0x5A8283  	SUBB	W5, W3, W5
;__Lib_Math.c,212 :: 		
0x079C	0x3B0003  	BRA NN	Modulus_32x32_iterate
;__Lib_Math.c,213 :: 		
0x079E	0x420202  	ADD	W4, W2, W4
;__Lib_Math.c,214 :: 		
0x07A0	0x4A8283  	ADDC	W5, W3, W5
;__Lib_Math.c,215 :: 		
0x07A2	0xA10000  	BCLR	W0, #0
;__Lib_Math.c,216 :: 		
Modulus_32x32_iterate:
;__Lib_Math.c,217 :: 		
0x07A4	0xE90306  	DEC	W6, W6
;__Lib_Math.c,218 :: 		
0x07A6	0x3AFFF3  	BRA NZ	Modulus_32x32_nextbit
;__Lib_Math.c,219 :: 		
0x07A8	0x060000  	RETURN
;__Lib_Math.c,222 :: 		
the_end_Modulus_32x32:
;__Lib_Math.c,225 :: 		
L_end__Modulus_32x32:
0x07AA	0xFA8000  	ULNK
0x07AC	0x060000  	RETURN
; end of __Modulus_32x32
__Divide_32x32:
0x0696	0xFA0000  	LNK	#0
;__Lib_Math.c,78 :: 		
;__Lib_Math.c,81 :: 		
0x0698	0x070002  	RCALL	Divide_32x32___testsus
;__Lib_Math.c,83 :: 		
0x069A	0x0000000406E4  	GOTO	the_end_Divide_32x32
;__Lib_Math.c,88 :: 		
Divide_32x32___testsus:
;__Lib_Math.c,89 :: 		
0x069E	0xE20008  	CP0	W4
;__Lib_Math.c,90 :: 		
0x06A0	0x3A0002  	BRA NZ	Divide_32x32___divsi3
;__Lib_Math.c,92 :: 		
0x06A2	0x070010  	RCALL	Divide_32x32___udivsi3
;__Lib_Math.c,93 :: 		
0x06A4	0x060000  	RETURN
;__Lib_Math.c,95 :: 		
Divide_32x32___divsi3:
;__Lib_Math.c,96 :: 		
0x06A6	0x689F83  	XOR	W1, W3, [W15++]
;__Lib_Math.c,97 :: 		
0x06A8	0xE20002  	CP0	W1
;__Lib_Math.c,98 :: 		
0x06AA	0x3D0002  	BRA GE	Divide_32x32_divtestb
;__Lib_Math.c,99 :: 		
0x06AC	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,100 :: 		
0x06AE	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,101 :: 		
Divide_32x32_divtestb:
;__Lib_Math.c,102 :: 		
0x06B0	0xE20006  	CP0	W3
;__Lib_Math.c,103 :: 		
0x06B2	0x3D0002  	BRA GE	Divide_32x32_calcquot
;__Lib_Math.c,104 :: 		
0x06B4	0x110160  	SUBR	W2, #0, W2
;__Lib_Math.c,105 :: 		
0x06B6	0x1981E0  	SUBBR	W3, #0, W3
;__Lib_Math.c,106 :: 		
Divide_32x32_calcquot:
;__Lib_Math.c,107 :: 		
0x06B8	0x070005  	RCALL	Divide_32x32___udivsi3
;__Lib_Math.c,108 :: 		
0x06BA	0xE0004F  	CP0	[--W15]
;__Lib_Math.c,109 :: 		
0x06BC	0x3B0002  	BRA NN	Divide_32x32_returnq
;__Lib_Math.c,110 :: 		
0x06BE	0x100060  	SUBR	W0, #0, W0
;__Lib_Math.c,111 :: 		
0x06C0	0x1880E0  	SUBBR	W1, #0, W1
;__Lib_Math.c,112 :: 		
Divide_32x32_returnq:
;__Lib_Math.c,113 :: 		
0x06C2	0x060000  	RETURN
;__Lib_Math.c,114 :: 		
Divide_32x32___udivsi3:
;__Lib_Math.c,115 :: 		
0x06C4	0xB82260  	MUL.UU	W4, #0, W4
;__Lib_Math.c,116 :: 		
0x06C6	0x200206  	MOV	#32, W6
;__Lib_Math.c,117 :: 		
Divide_32x32_nextbit:
;__Lib_Math.c,118 :: 		
0x06C8	0xD00000  	SL	W0, W0
;__Lib_Math.c,119 :: 		
0x06CA	0xD28081  	RLC	W1, W1
;__Lib_Math.c,120 :: 		
0x06CC	0xD28204  	RLC	W4, W4
;__Lib_Math.c,121 :: 		
0x06CE	0xD28285  	RLC	W5, W5
;__Lib_Math.c,122 :: 		
0x06D0	0xA80000  	BSET	W0, #0
;__Lib_Math.c,123 :: 		
0x06D2	0x520202  	SUB	W4, W2, W4
;__Lib_Math.c,124 :: 		
0x06D4	0x5A8283  	SUBB	W5, W3, W5
;__Lib_Math.c,125 :: 		
0x06D6	0x3B0003  	BRA NN	Divide_32x32_iterate
;__Lib_Math.c,126 :: 		
0x06D8	0x420202  	ADD	W4, W2, W4
;__Lib_Math.c,127 :: 		
0x06DA	0x4A8283  	ADDC	W5, W3, W5
;__Lib_Math.c,128 :: 		
0x06DC	0xA10000  	BCLR	W0, #0
;__Lib_Math.c,129 :: 		
Divide_32x32_iterate:
;__Lib_Math.c,130 :: 		
0x06DE	0xE90306  	DEC	W6, W6
;__Lib_Math.c,131 :: 		
0x06E0	0x3AFFF3  	BRA NZ	Divide_32x32_nextbit
;__Lib_Math.c,132 :: 		
0x06E2	0x060000  	RETURN
;__Lib_Math.c,135 :: 		
the_end_Divide_32x32:
;__Lib_Math.c,138 :: 		
L_end__Divide_32x32:
0x06E4	0xFA8000  	ULNK
0x06E6	0x060000  	RETURN
; end of __Divide_32x32
_Unlock_IOLOCK:
0x0962	0xFA0000  	LNK	#0
;__Lib_PPS_24FJ128GA306.c,89 :: 		
;__Lib_PPS_24FJ128GA306.c,90 :: 		
0x0964	0x207421  	MOV	#lo_addr(OSCCON), W1
;__Lib_PPS_24FJ128GA306.c,91 :: 		
0x0966	0x200462  	MOV	#70, W2
;__Lib_PPS_24FJ128GA306.c,92 :: 		
0x0968	0x200573  	MOV	#87, W3
;__Lib_PPS_24FJ128GA306.c,94 :: 		
0x096A	0x784882  	MOV.B	W2, [W1]
;__Lib_PPS_24FJ128GA306.c,95 :: 		
0x096C	0x784883  	MOV.B	W3, [W1]
;__Lib_PPS_24FJ128GA306.c,97 :: 		
0x096E	0xA9C742  	BCLR	IOLOCK_bit, BitPos(IOLOCK_bit+0)
;__Lib_PPS_24FJ128GA306.c,98 :: 		
L_end_Unlock_IOLOCK:
0x0970	0xFA8000  	ULNK
0x0972	0x060000  	RETURN
; end of _Unlock_IOLOCK
_PPS_Mapping_NoLock:
0x0954	0xFA0000  	LNK	#0
;__Lib_PPS_24FJ128GA306.c,286 :: 		
;__Lib_PPS_24FJ128GA306.c,287 :: 		
0x0956	0x781F8D  	PUSH	W13
0x0958	0xEF201A  	CLR	W13
0x095A	0x07FC5B  	RCALL	__Lib_PPS_24FJ128GA306__PPS_Mapping
;__Lib_PPS_24FJ128GA306.c,288 :: 		
;__Lib_PPS_24FJ128GA306.c,287 :: 		
;__Lib_PPS_24FJ128GA306.c,288 :: 		
L_end_PPS_Mapping_NoLock:
0x095C	0x7806CF  	POP	W13
0x095E	0xFA8000  	ULNK
0x0960	0x060000  	RETURN
; end of _PPS_Mapping_NoLock
__Lib_PPS_24FJ128GA306__PPS_Mapping:
0x0212	0xFA0002  	LNK	#2
;__Lib_PPS_24FJ128GA306.c,142 :: 		
;__Lib_PPS_24FJ128GA306.c,144 :: 		
0x0214	0x200FF0  	MOV	#255, W0
0x0216	0x980700  	MOV	W0, [W14+0]
;__Lib_PPS_24FJ128GA306.c,146 :: 		
0x0218	0xE15C60  	CP.B	W11, #0
0x021A	0x3A00AB  	BRA NZ	L___Lib_PPS_24FJ128GA306__PPS_Mapping0
L___Lib_PPS_24FJ128GA306__PPS_Mapping114:
;__Lib_PPS_24FJ128GA306.c,147 :: 		
0x021C	0xE2001A  	CP0	W13
0x021E	0x320001  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping1
L___Lib_PPS_24FJ128GA306__PPS_Mapping115:
;__Lib_PPS_24FJ128GA306.c,148 :: 		
0x0220	0x0703A0  	RCALL	_Unlock_IOLOCK
L___Lib_PPS_24FJ128GA306__PPS_Mapping1:
;__Lib_PPS_24FJ128GA306.c,150 :: 		
0x0222	0x370063  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping2
;__Lib_PPS_24FJ128GA306.c,151 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping4:
0x0224	0x206C00  	MOV	#lo_addr(RPOR0), W0
0x0226	0x78480C  	MOV.B	W12, [W0]
0x0228	0x3700A1  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping3
;__Lib_PPS_24FJ128GA306.c,152 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping5:
0x022A	0x206C10  	MOV	#lo_addr(RPOR0+1), W0
0x022C	0x78480C  	MOV.B	W12, [W0]
0x022E	0x37009E  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping3
;__Lib_PPS_24FJ128GA306.c,153 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping6:
0x0230	0x206C20  	MOV	#lo_addr(RPOR1), W0
0x0232	0x78480C  	MOV.B	W12, [W0]
0x0234	0x37009B  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping3
;__Lib_PPS_24FJ128GA306.c,154 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping7:
0x0236	0x206C30  	MOV	#lo_addr(RPOR1+1), W0
0x0238	0x78480C  	MOV.B	W12, [W0]
0x023A	0x370098  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping3
;__Lib_PPS_24FJ128GA306.c,155 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping8:
0x023C	0x206C40  	MOV	#lo_addr(RPOR2), W0
0x023E	0x78480C  	MOV.B	W12, [W0]
0x0240	0x370095  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping3
;__Lib_PPS_24FJ128GA306.c,156 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping9:
0x0242	0x206C50  	MOV	#lo_addr(RPOR2+1), W0
0x0244	0x78480C  	MOV.B	W12, [W0]
0x0246	0x370092  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping3
;__Lib_PPS_24FJ128GA306.c,157 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping10:
0x0248	0x206C60  	MOV	#lo_addr(RPOR3), W0
0x024A	0x78480C  	MOV.B	W12, [W0]
0x024C	0x37008F  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping3
;__Lib_PPS_24FJ128GA306.c,158 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping11:
0x024E	0x206C70  	MOV	#lo_addr(RPOR3+1), W0
0x0250	0x78480C  	MOV.B	W12, [W0]
0x0252	0x37008C  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping3
;__Lib_PPS_24FJ128GA306.c,159 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping12:
0x0254	0x206C80  	MOV	#lo_addr(RPOR4), W0
0x0256	0x78480C  	MOV.B	W12, [W0]
0x0258	0x370089  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping3
;__Lib_PPS_24FJ128GA306.c,160 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping13:
0x025A	0x206C90  	MOV	#lo_addr(RPOR4+1), W0
0x025C	0x78480C  	MOV.B	W12, [W0]
0x025E	0x370086  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping3
;__Lib_PPS_24FJ128GA306.c,161 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping14:
0x0260	0x206CA0  	MOV	#lo_addr(RPOR5), W0
0x0262	0x78480C  	MOV.B	W12, [W0]
0x0264	0x370083  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping3
;__Lib_PPS_24FJ128GA306.c,162 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping15:
0x0266	0x206CB0  	MOV	#lo_addr(RPOR5+1), W0
0x0268	0x78480C  	MOV.B	W12, [W0]
0x026A	0x370080  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping3
;__Lib_PPS_24FJ128GA306.c,163 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping16:
0x026C	0x206CC0  	MOV	#lo_addr(RPOR6), W0
0x026E	0x78480C  	MOV.B	W12, [W0]
0x0270	0x37007D  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping3
;__Lib_PPS_24FJ128GA306.c,164 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping17:
0x0272	0x206CD0  	MOV	#lo_addr(RPOR6+1), W0
0x0274	0x78480C  	MOV.B	W12, [W0]
0x0276	0x37007A  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping3
;__Lib_PPS_24FJ128GA306.c,165 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping18:
0x0278	0x206CE0  	MOV	#lo_addr(RPOR7), W0
0x027A	0x78480C  	MOV.B	W12, [W0]
0x027C	0x370077  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping3
;__Lib_PPS_24FJ128GA306.c,166 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping19:
0x027E	0x206CF0  	MOV	#lo_addr(RPOR7+1), W0
0x0280	0x78480C  	MOV.B	W12, [W0]
0x0282	0x370074  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping3
;__Lib_PPS_24FJ128GA306.c,167 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping20:
0x0284	0x206D00  	MOV	#lo_addr(RPOR8), W0
0x0286	0x78480C  	MOV.B	W12, [W0]
0x0288	0x370071  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping3
;__Lib_PPS_24FJ128GA306.c,168 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping21:
0x028A	0x206D10  	MOV	#lo_addr(RPOR8+1), W0
0x028C	0x78480C  	MOV.B	W12, [W0]
0x028E	0x37006E  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping3
;__Lib_PPS_24FJ128GA306.c,169 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping22:
0x0290	0x206D20  	MOV	#lo_addr(RPOR9), W0
0x0292	0x78480C  	MOV.B	W12, [W0]
0x0294	0x37006B  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping3
;__Lib_PPS_24FJ128GA306.c,170 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping23:
0x0296	0x206D30  	MOV	#lo_addr(RPOR9+1), W0
0x0298	0x78480C  	MOV.B	W12, [W0]
0x029A	0x370068  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping3
;__Lib_PPS_24FJ128GA306.c,171 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping24:
0x029C	0x206D40  	MOV	#lo_addr(RPOR10), W0
0x029E	0x78480C  	MOV.B	W12, [W0]
0x02A0	0x370065  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping3
;__Lib_PPS_24FJ128GA306.c,172 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping25:
0x02A2	0x206D50  	MOV	#lo_addr(RPOR10+1), W0
0x02A4	0x78480C  	MOV.B	W12, [W0]
0x02A6	0x370062  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping3
;__Lib_PPS_24FJ128GA306.c,173 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping26:
0x02A8	0x206D60  	MOV	#lo_addr(RPOR11), W0
0x02AA	0x78480C  	MOV.B	W12, [W0]
0x02AC	0x37005F  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping3
;__Lib_PPS_24FJ128GA306.c,174 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping27:
0x02AE	0x206D70  	MOV	#lo_addr(RPOR11+1), W0
0x02B0	0x78480C  	MOV.B	W12, [W0]
0x02B2	0x37005C  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping3
;__Lib_PPS_24FJ128GA306.c,175 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping28:
0x02B4	0x206D80  	MOV	#lo_addr(RPOR12), W0
0x02B6	0x78480C  	MOV.B	W12, [W0]
0x02B8	0x370059  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping3
;__Lib_PPS_24FJ128GA306.c,176 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping29:
0x02BA	0x206D90  	MOV	#lo_addr(RPOR12+1), W0
0x02BC	0x78480C  	MOV.B	W12, [W0]
0x02BE	0x370056  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping3
;__Lib_PPS_24FJ128GA306.c,177 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping30:
0x02C0	0x206DA0  	MOV	#lo_addr(RPOR13), W0
0x02C2	0x78480C  	MOV.B	W12, [W0]
0x02C4	0x370053  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping3
;__Lib_PPS_24FJ128GA306.c,178 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping31:
0x02C6	0x206DB0  	MOV	#lo_addr(RPOR13+1), W0
0x02C8	0x78480C  	MOV.B	W12, [W0]
0x02CA	0x370050  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping3
;__Lib_PPS_24FJ128GA306.c,179 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping32:
0x02CC	0x206DC0  	MOV	#lo_addr(RPOR14), W0
0x02CE	0x78480C  	MOV.B	W12, [W0]
0x02D0	0x37004D  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping3
;__Lib_PPS_24FJ128GA306.c,180 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping33:
0x02D2	0x206DD0  	MOV	#lo_addr(RPOR14+1), W0
0x02D4	0x78480C  	MOV.B	W12, [W0]
0x02D6	0x37004A  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping3
;__Lib_PPS_24FJ128GA306.c,181 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping34:
0x02D8	0x206DE0  	MOV	#lo_addr(RPOR15), W0
0x02DA	0x78480C  	MOV.B	W12, [W0]
0x02DC	0x370047  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping3
;__Lib_PPS_24FJ128GA306.c,182 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping35:
0x02DE	0x206DF0  	MOV	#lo_addr(RPOR15+1), W0
0x02E0	0x78480C  	MOV.B	W12, [W0]
0x02E2	0x370044  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping3
;__Lib_PPS_24FJ128GA306.c,185 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping36:
0x02E4	0xEF2000  	CLR	W0
0x02E6	0x980700  	MOV	W0, [W14+0]
;__Lib_PPS_24FJ128GA306.c,186 :: 		
0x02E8	0x370041  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping3
L___Lib_PPS_24FJ128GA306__PPS_Mapping2:
0x02EA	0xE15460  	CP.B	W10, #0
0x02EC	0x32FF9B  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping4
L___Lib_PPS_24FJ128GA306__PPS_Mapping116:
0x02EE	0xE15461  	CP.B	W10, #1
0x02F0	0x32FF9C  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping5
L___Lib_PPS_24FJ128GA306__PPS_Mapping117:
0x02F2	0xE15462  	CP.B	W10, #2
0x02F4	0x32FF9D  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping6
L___Lib_PPS_24FJ128GA306__PPS_Mapping118:
0x02F6	0xE15463  	CP.B	W10, #3
0x02F8	0x32FF9E  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping7
L___Lib_PPS_24FJ128GA306__PPS_Mapping119:
0x02FA	0xE15464  	CP.B	W10, #4
0x02FC	0x32FF9F  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping8
L___Lib_PPS_24FJ128GA306__PPS_Mapping120:
0x02FE	0xE15465  	CP.B	W10, #5
0x0300	0x32FFA0  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping9
L___Lib_PPS_24FJ128GA306__PPS_Mapping121:
0x0302	0xE15466  	CP.B	W10, #6
0x0304	0x32FFA1  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping10
L___Lib_PPS_24FJ128GA306__PPS_Mapping122:
0x0306	0xE15467  	CP.B	W10, #7
0x0308	0x32FFA2  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping11
L___Lib_PPS_24FJ128GA306__PPS_Mapping123:
0x030A	0xE15468  	CP.B	W10, #8
0x030C	0x32FFA3  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping12
L___Lib_PPS_24FJ128GA306__PPS_Mapping124:
0x030E	0xE15469  	CP.B	W10, #9
0x0310	0x32FFA4  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping13
L___Lib_PPS_24FJ128GA306__PPS_Mapping125:
0x0312	0xE1546A  	CP.B	W10, #10
0x0314	0x32FFA5  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping14
L___Lib_PPS_24FJ128GA306__PPS_Mapping126:
0x0316	0xE1546B  	CP.B	W10, #11
0x0318	0x32FFA6  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping15
L___Lib_PPS_24FJ128GA306__PPS_Mapping127:
0x031A	0xE1546C  	CP.B	W10, #12
0x031C	0x32FFA7  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping16
L___Lib_PPS_24FJ128GA306__PPS_Mapping128:
0x031E	0xE1546D  	CP.B	W10, #13
0x0320	0x32FFA8  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping17
L___Lib_PPS_24FJ128GA306__PPS_Mapping129:
0x0322	0xE1546E  	CP.B	W10, #14
0x0324	0x32FFA9  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping18
L___Lib_PPS_24FJ128GA306__PPS_Mapping130:
0x0326	0xE1546F  	CP.B	W10, #15
0x0328	0x32FFAA  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping19
L___Lib_PPS_24FJ128GA306__PPS_Mapping131:
0x032A	0xE15470  	CP.B	W10, #16
0x032C	0x32FFAB  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping20
L___Lib_PPS_24FJ128GA306__PPS_Mapping132:
0x032E	0xE15471  	CP.B	W10, #17
0x0330	0x32FFAC  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping21
L___Lib_PPS_24FJ128GA306__PPS_Mapping133:
0x0332	0xE15472  	CP.B	W10, #18
0x0334	0x32FFAD  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping22
L___Lib_PPS_24FJ128GA306__PPS_Mapping134:
0x0336	0xE15473  	CP.B	W10, #19
0x0338	0x32FFAE  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping23
L___Lib_PPS_24FJ128GA306__PPS_Mapping135:
0x033A	0xE15474  	CP.B	W10, #20
0x033C	0x32FFAF  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping24
L___Lib_PPS_24FJ128GA306__PPS_Mapping136:
0x033E	0xE15475  	CP.B	W10, #21
0x0340	0x32FFB0  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping25
L___Lib_PPS_24FJ128GA306__PPS_Mapping137:
0x0342	0xE15476  	CP.B	W10, #22
0x0344	0x32FFB1  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping26
L___Lib_PPS_24FJ128GA306__PPS_Mapping138:
0x0346	0xE15477  	CP.B	W10, #23
0x0348	0x32FFB2  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping27
L___Lib_PPS_24FJ128GA306__PPS_Mapping139:
0x034A	0xE15478  	CP.B	W10, #24
0x034C	0x32FFB3  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping28
L___Lib_PPS_24FJ128GA306__PPS_Mapping140:
0x034E	0xE15479  	CP.B	W10, #25
0x0350	0x32FFB4  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping29
L___Lib_PPS_24FJ128GA306__PPS_Mapping141:
0x0352	0xE1547A  	CP.B	W10, #26
0x0354	0x32FFB5  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping30
L___Lib_PPS_24FJ128GA306__PPS_Mapping142:
0x0356	0xE1547B  	CP.B	W10, #27
0x0358	0x32FFB6  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping31
L___Lib_PPS_24FJ128GA306__PPS_Mapping143:
0x035A	0xE1547C  	CP.B	W10, #28
0x035C	0x32FFB7  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping32
L___Lib_PPS_24FJ128GA306__PPS_Mapping144:
0x035E	0xE1547D  	CP.B	W10, #29
0x0360	0x32FFB8  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping33
L___Lib_PPS_24FJ128GA306__PPS_Mapping145:
0x0362	0xE1547E  	CP.B	W10, #30
0x0364	0x32FFB9  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping34
L___Lib_PPS_24FJ128GA306__PPS_Mapping146:
0x0366	0xE1547F  	CP.B	W10, #31
0x0368	0x32FFBA  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping35
L___Lib_PPS_24FJ128GA306__PPS_Mapping147:
0x036A	0x37FFBC  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping36
L___Lib_PPS_24FJ128GA306__PPS_Mapping3:
;__Lib_PPS_24FJ128GA306.c,187 :: 		
0x036C	0xE2001A  	CP0	W13
0x036E	0x320001  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping37
L___Lib_PPS_24FJ128GA306__PPS_Mapping148:
;__Lib_PPS_24FJ128GA306.c,188 :: 		
0x0370	0x07FF47  	RCALL	_Lock_IOLOCK
L___Lib_PPS_24FJ128GA306__PPS_Mapping37:
;__Lib_PPS_24FJ128GA306.c,189 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping0:
;__Lib_PPS_24FJ128GA306.c,191 :: 		
0x0372	0xE15C61  	CP.B	W11, #1
0x0374	0x3A00BD  	BRA NZ	L___Lib_PPS_24FJ128GA306__PPS_Mapping38
L___Lib_PPS_24FJ128GA306__PPS_Mapping149:
;__Lib_PPS_24FJ128GA306.c,192 :: 		
0x0376	0xE2001A  	CP0	W13
0x0378	0x320001  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping39
L___Lib_PPS_24FJ128GA306__PPS_Mapping150:
;__Lib_PPS_24FJ128GA306.c,193 :: 		
0x037A	0x0702F3  	RCALL	_Unlock_IOLOCK
L___Lib_PPS_24FJ128GA306__PPS_Mapping39:
;__Lib_PPS_24FJ128GA306.c,194 :: 		
0x037C	0x37006C  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping40
;__Lib_PPS_24FJ128GA306.c,196 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping42:
0x037E	0x206BC0  	MOV	#lo_addr(RPINR30), W0
0x0380	0x78480A  	MOV.B	W10, [W0]
0x0382	0x3700B3  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,197 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping43:
0x0384	0x206BE0  	MOV	#lo_addr(RPINR31), W0
0x0386	0x78480A  	MOV.B	W10, [W0]
0x0388	0x3700B0  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,198 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping44:
0x038A	0x206BD0  	MOV	#lo_addr(RPINR30+1), W0
0x038C	0x78480A  	MOV.B	W10, [W0]
0x038E	0x3700AD  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,199 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping45:
0x0390	0x206810  	MOV	#lo_addr(RPINR0+1), W0
0x0392	0x78480A  	MOV.B	W10, [W0]
0x0394	0x3700AA  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,200 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping46:
0x0396	0x206820  	MOV	#lo_addr(RPINR1), W0
0x0398	0x78480A  	MOV.B	W10, [W0]
0x039A	0x3700A7  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,201 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping47:
0x039C	0x206830  	MOV	#lo_addr(RPINR1+1), W0
0x039E	0x78480A  	MOV.B	W10, [W0]
0x03A0	0x3700A4  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,202 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping48:
0x03A2	0x206840  	MOV	#lo_addr(RPINR2), W0
0x03A4	0x78480A  	MOV.B	W10, [W0]
0x03A6	0x3700A1  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,204 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping49:
0x03A8	0x2068E0  	MOV	#lo_addr(RPINR7), W0
0x03AA	0x78480A  	MOV.B	W10, [W0]
0x03AC	0x37009E  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,205 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping50:
0x03AE	0x2068F0  	MOV	#lo_addr(RPINR7+1), W0
0x03B0	0x78480A  	MOV.B	W10, [W0]
0x03B2	0x37009B  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,206 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping51:
0x03B4	0x206900  	MOV	#lo_addr(RPINR8), W0
0x03B6	0x78480A  	MOV.B	W10, [W0]
0x03B8	0x370098  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,207 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping52:
0x03BA	0x206910  	MOV	#lo_addr(RPINR8+1), W0
0x03BC	0x78480A  	MOV.B	W10, [W0]
0x03BE	0x370095  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,208 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping53:
0x03C0	0x206920  	MOV	#lo_addr(RPINR9), W0
0x03C2	0x78480A  	MOV.B	W10, [W0]
0x03C4	0x370092  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,209 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping54:
0x03C6	0x206930  	MOV	#lo_addr(RPINR9+1), W0
0x03C8	0x78480A  	MOV.B	W10, [W0]
0x03CA	0x37008F  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,210 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping55:
0x03CC	0x206940  	MOV	#lo_addr(RPINR10), W0
0x03CE	0x78480A  	MOV.B	W10, [W0]
0x03D0	0x37008C  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,211 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping56:
0x03D2	0x206960  	MOV	#lo_addr(RPINR11), W0
0x03D4	0x78480A  	MOV.B	W10, [W0]
0x03D6	0x370089  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,212 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping57:
0x03D8	0x206970  	MOV	#lo_addr(RPINR11+1), W0
0x03DA	0x78480A  	MOV.B	W10, [W0]
0x03DC	0x370086  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,213 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping58:
0x03DE	0x206A90  	MOV	#lo_addr(RPINR20+1), W0
0x03E0	0x78480A  	MOV.B	W10, [W0]
0x03E2	0x370083  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,214 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping59:
0x03E4	0x206A80  	MOV	#lo_addr(RPINR20), W0
0x03E6	0x78480A  	MOV.B	W10, [W0]
0x03E8	0x370080  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,215 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping60:
0x03EA	0x206AA0  	MOV	#lo_addr(RPINR21), W0
0x03EC	0x78480A  	MOV.B	W10, [W0]
0x03EE	0x37007D  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,216 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping61:
0x03F0	0x206AD0  	MOV	#lo_addr(RPINR22+1), W0
0x03F2	0x78480A  	MOV.B	W10, [W0]
0x03F4	0x37007A  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,217 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping62:
0x03F6	0x206AC0  	MOV	#lo_addr(RPINR22), W0
0x03F8	0x78480A  	MOV.B	W10, [W0]
0x03FA	0x370077  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,218 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping63:
0x03FC	0x206AE0  	MOV	#lo_addr(RPINR23), W0
0x03FE	0x78480A  	MOV.B	W10, [W0]
0x0400	0x370074  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,219 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping64:
0x0402	0x206AF0  	MOV	#lo_addr(RPINR23+1), W0
0x0404	0x78480A  	MOV.B	W10, [W0]
0x0406	0x370071  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,220 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping65:
0x0408	0x206860  	MOV	#lo_addr(RPINR3), W0
0x040A	0x78480A  	MOV.B	W10, [W0]
0x040C	0x37006E  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,221 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping66:
0x040E	0x206870  	MOV	#lo_addr(RPINR3+1), W0
0x0410	0x78480A  	MOV.B	W10, [W0]
0x0412	0x37006B  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,222 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping67:
0x0414	0x206880  	MOV	#lo_addr(RPINR4), W0
0x0416	0x78480A  	MOV.B	W10, [W0]
0x0418	0x370068  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,223 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping68:
0x041A	0x206890  	MOV	#lo_addr(RPINR4+1), W0
0x041C	0x78480A  	MOV.B	W10, [W0]
0x041E	0x370065  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,224 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping69:
0x0420	0x206A50  	MOV	#lo_addr(RPINR18+1), W0
0x0422	0x78480A  	MOV.B	W10, [W0]
0x0424	0x370062  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,225 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping70:
0x0426	0x206A40  	MOV	#lo_addr(RPINR18), W0
0x0428	0x78480A  	MOV.B	W10, [W0]
0x042A	0x37005F  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,226 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping71:
0x042C	0x206A70  	MOV	#lo_addr(RPINR19+1), W0
0x042E	0x78480A  	MOV.B	W10, [W0]
0x0430	0x37005C  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,227 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping72:
0x0432	0x206A60  	MOV	#lo_addr(RPINR19), W0
0x0434	0x78480A  	MOV.B	W10, [W0]
0x0436	0x370059  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,228 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping73:
0x0438	0x206AB0  	MOV	#lo_addr(RPINR21+1), W0
0x043A	0x78480A  	MOV.B	W10, [W0]
0x043C	0x370056  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,229 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping74:
0x043E	0x206A30  	MOV	#lo_addr(RPINR17+1), W0
0x0440	0x78480A  	MOV.B	W10, [W0]
0x0442	0x370053  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,230 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping75:
0x0444	0x206B70  	MOV	#lo_addr(RPINR27+1), W0
0x0446	0x78480A  	MOV.B	W10, [W0]
0x0448	0x370050  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,231 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping76:
0x044A	0x206B60  	MOV	#lo_addr(RPINR27), W0
0x044C	0x78480A  	MOV.B	W10, [W0]
0x044E	0x37004D  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
;__Lib_PPS_24FJ128GA306.c,233 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping77:
0x0450	0xEF2000  	CLR	W0
0x0452	0x980700  	MOV	W0, [W14+0]
;__Lib_PPS_24FJ128GA306.c,234 :: 		
0x0454	0x37004A  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping41
L___Lib_PPS_24FJ128GA306__PPS_Mapping40:
0x0456	0xE16460  	CP.B	W12, #0
0x0458	0x32FF92  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping42
L___Lib_PPS_24FJ128GA306__PPS_Mapping151:
0x045A	0xE16461  	CP.B	W12, #1
0x045C	0x32FF93  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping43
L___Lib_PPS_24FJ128GA306__PPS_Mapping152:
0x045E	0xE16462  	CP.B	W12, #2
0x0460	0x32FF94  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping44
L___Lib_PPS_24FJ128GA306__PPS_Mapping153:
0x0462	0xE16463  	CP.B	W12, #3
0x0464	0x32FF95  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping45
L___Lib_PPS_24FJ128GA306__PPS_Mapping154:
0x0466	0xE16464  	CP.B	W12, #4
0x0468	0x32FF96  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping46
L___Lib_PPS_24FJ128GA306__PPS_Mapping155:
0x046A	0xE16465  	CP.B	W12, #5
0x046C	0x32FF97  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping47
L___Lib_PPS_24FJ128GA306__PPS_Mapping156:
0x046E	0xE16466  	CP.B	W12, #6
0x0470	0x32FF98  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping48
L___Lib_PPS_24FJ128GA306__PPS_Mapping157:
0x0472	0xE16467  	CP.B	W12, #7
0x0474	0x32FF99  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping49
L___Lib_PPS_24FJ128GA306__PPS_Mapping158:
0x0476	0xE16468  	CP.B	W12, #8
0x0478	0x32FF9A  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping50
L___Lib_PPS_24FJ128GA306__PPS_Mapping159:
0x047A	0xE16469  	CP.B	W12, #9
0x047C	0x32FF9B  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping51
L___Lib_PPS_24FJ128GA306__PPS_Mapping160:
0x047E	0xE1646A  	CP.B	W12, #10
0x0480	0x32FF9C  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping52
L___Lib_PPS_24FJ128GA306__PPS_Mapping161:
0x0482	0xE1646B  	CP.B	W12, #11
0x0484	0x32FF9D  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping53
L___Lib_PPS_24FJ128GA306__PPS_Mapping162:
0x0486	0xE1646C  	CP.B	W12, #12
0x0488	0x32FF9E  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping54
L___Lib_PPS_24FJ128GA306__PPS_Mapping163:
0x048A	0xE1646D  	CP.B	W12, #13
0x048C	0x32FF9F  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping55
L___Lib_PPS_24FJ128GA306__PPS_Mapping164:
0x048E	0xE1646E  	CP.B	W12, #14
0x0490	0x32FFA0  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping56
L___Lib_PPS_24FJ128GA306__PPS_Mapping165:
0x0492	0xE1646F  	CP.B	W12, #15
0x0494	0x32FFA1  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping57
L___Lib_PPS_24FJ128GA306__PPS_Mapping166:
0x0496	0xE16470  	CP.B	W12, #16
0x0498	0x32FFA2  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping58
L___Lib_PPS_24FJ128GA306__PPS_Mapping167:
0x049A	0xE16471  	CP.B	W12, #17
0x049C	0x32FFA3  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping59
L___Lib_PPS_24FJ128GA306__PPS_Mapping168:
0x049E	0xE16472  	CP.B	W12, #18
0x04A0	0x32FFA4  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping60
L___Lib_PPS_24FJ128GA306__PPS_Mapping169:
0x04A2	0xE16473  	CP.B	W12, #19
0x04A4	0x32FFA5  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping61
L___Lib_PPS_24FJ128GA306__PPS_Mapping170:
0x04A6	0xE16474  	CP.B	W12, #20
0x04A8	0x32FFA6  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping62
L___Lib_PPS_24FJ128GA306__PPS_Mapping171:
0x04AA	0xE16475  	CP.B	W12, #21
0x04AC	0x32FFA7  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping63
L___Lib_PPS_24FJ128GA306__PPS_Mapping172:
0x04AE	0xE16476  	CP.B	W12, #22
0x04B0	0x32FFA8  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping64
L___Lib_PPS_24FJ128GA306__PPS_Mapping173:
0x04B2	0xE16477  	CP.B	W12, #23
0x04B4	0x32FFA9  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping65
L___Lib_PPS_24FJ128GA306__PPS_Mapping174:
0x04B6	0xE16478  	CP.B	W12, #24
0x04B8	0x32FFAA  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping66
L___Lib_PPS_24FJ128GA306__PPS_Mapping175:
0x04BA	0xE16479  	CP.B	W12, #25
0x04BC	0x32FFAB  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping67
L___Lib_PPS_24FJ128GA306__PPS_Mapping176:
0x04BE	0xE1647A  	CP.B	W12, #26
0x04C0	0x32FFAC  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping68
L___Lib_PPS_24FJ128GA306__PPS_Mapping177:
0x04C2	0xE1647B  	CP.B	W12, #27
0x04C4	0x32FFAD  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping69
L___Lib_PPS_24FJ128GA306__PPS_Mapping178:
0x04C6	0xE1647C  	CP.B	W12, #28
0x04C8	0x32FFAE  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping70
L___Lib_PPS_24FJ128GA306__PPS_Mapping179:
0x04CA	0xE1647D  	CP.B	W12, #29
0x04CC	0x32FFAF  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping71
L___Lib_PPS_24FJ128GA306__PPS_Mapping180:
0x04CE	0xE1647E  	CP.B	W12, #30
0x04D0	0x32FFB0  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping72
L___Lib_PPS_24FJ128GA306__PPS_Mapping181:
0x04D2	0xE1647F  	CP.B	W12, #31
0x04D4	0x32FFB1  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping73
L___Lib_PPS_24FJ128GA306__PPS_Mapping182:
0x04D6	0xB3C200  	MOV.B	#32, W0
0x04D8	0xE16400  	CP.B	W12, W0
0x04DA	0x32FFB1  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping74
L___Lib_PPS_24FJ128GA306__PPS_Mapping183:
0x04DC	0xB3C210  	MOV.B	#33, W0
0x04DE	0xE16400  	CP.B	W12, W0
0x04E0	0x32FFB1  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping75
L___Lib_PPS_24FJ128GA306__PPS_Mapping184:
0x04E2	0xB3C220  	MOV.B	#34, W0
0x04E4	0xE16400  	CP.B	W12, W0
0x04E6	0x32FFB1  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping76
L___Lib_PPS_24FJ128GA306__PPS_Mapping185:
0x04E8	0x37FFB3  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping77
L___Lib_PPS_24FJ128GA306__PPS_Mapping41:
;__Lib_PPS_24FJ128GA306.c,235 :: 		
0x04EA	0xE2001A  	CP0	W13
0x04EC	0x320001  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping78
L___Lib_PPS_24FJ128GA306__PPS_Mapping186:
;__Lib_PPS_24FJ128GA306.c,236 :: 		
0x04EE	0x07FE88  	RCALL	_Lock_IOLOCK
L___Lib_PPS_24FJ128GA306__PPS_Mapping78:
;__Lib_PPS_24FJ128GA306.c,237 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping38:
;__Lib_PPS_24FJ128GA306.c,240 :: 		
0x04F0	0x370094  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping79
;__Lib_PPS_24FJ128GA306.c,241 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping81:
0x04F2	0xAE0016  	BTSS	W11, #0
0x04F4	0xA902C8  	BCLR	TRISB0_bit, BitPos(TRISB0_bit+0)
0x04F6	0xAF0016  	BTSC	W11, #0
0x04F8	0xA802C8  	BSET	TRISB0_bit, BitPos(TRISB0_bit+0)
0x04FA	0x3700CA  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping80
;__Lib_PPS_24FJ128GA306.c,242 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping82:
0x04FC	0xAE0016  	BTSS	W11, #0
0x04FE	0xA922C8  	BCLR	TRISB1_bit, BitPos(TRISB1_bit+0)
0x0500	0xAF0016  	BTSC	W11, #0
0x0502	0xA822C8  	BSET	TRISB1_bit, BitPos(TRISB1_bit+0)
0x0504	0x3700C5  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping80
;__Lib_PPS_24FJ128GA306.c,243 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping83:
0x0506	0xAE0016  	BTSS	W11, #0
0x0508	0xA902D9  	BCLR	TRISD8_bit, BitPos(TRISD8_bit+0)
0x050A	0xAF0016  	BTSC	W11, #0
0x050C	0xA802D9  	BSET	TRISD8_bit, BitPos(TRISD8_bit+0)
0x050E	0x3700C0  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping80
;__Lib_PPS_24FJ128GA306.c,244 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping84:
0x0510	0xAE0016  	BTSS	W11, #0
0x0512	0xA942D9  	BCLR	TRISD10_bit, BitPos(TRISD10_bit+0)
0x0514	0xAF0016  	BTSC	W11, #0
0x0516	0xA842D9  	BSET	TRISD10_bit, BitPos(TRISD10_bit+0)
0x0518	0x3700BB  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping80
;__Lib_PPS_24FJ128GA306.c,245 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping85:
0x051A	0xAE0016  	BTSS	W11, #0
0x051C	0xA922D9  	BCLR	TRISD9_bit, BitPos(TRISD9_bit+0)
0x051E	0xAF0016  	BTSC	W11, #0
0x0520	0xA822D9  	BSET	TRISD9_bit, BitPos(TRISD9_bit+0)
0x0522	0x3700B6  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping80
;__Lib_PPS_24FJ128GA306.c,247 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping86:
0x0524	0xAE0016  	BTSS	W11, #0
0x0526	0xA9C2C8  	BCLR	TRISB6_bit, BitPos(TRISB6_bit+0)
0x0528	0xAF0016  	BTSC	W11, #0
0x052A	0xA8C2C8  	BSET	TRISB6_bit, BitPos(TRISB6_bit+0)
0x052C	0x3700B1  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping80
;__Lib_PPS_24FJ128GA306.c,248 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping87:
0x052E	0xAE0016  	BTSS	W11, #0
0x0530	0xA9E2C8  	BCLR	TRISB7_bit, BitPos(TRISB7_bit+0)
0x0532	0xAF0016  	BTSC	W11, #0
0x0534	0xA8E2C8  	BSET	TRISB7_bit, BitPos(TRISB7_bit+0)
0x0536	0x3700AC  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping80
;__Lib_PPS_24FJ128GA306.c,249 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping88:
0x0538	0xAE0016  	BTSS	W11, #0
0x053A	0xA902C9  	BCLR	TRISB8_bit, BitPos(TRISB8_bit+0)
0x053C	0xAF0016  	BTSC	W11, #0
0x053E	0xA802C9  	BSET	TRISB8_bit, BitPos(TRISB8_bit+0)
0x0540	0x3700A7  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping80
;__Lib_PPS_24FJ128GA306.c,250 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping89:
0x0542	0xAE0016  	BTSS	W11, #0
0x0544	0xA922C9  	BCLR	TRISB9_bit, BitPos(TRISB9_bit+0)
0x0546	0xAF0016  	BTSC	W11, #0
0x0548	0xA822C9  	BSET	TRISB9_bit, BitPos(TRISB9_bit+0)
0x054A	0x3700A2  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping80
;__Lib_PPS_24FJ128GA306.c,251 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping90:
0x054C	0xAE0016  	BTSS	W11, #0
0x054E	0xA982E8  	BCLR	TRISF4_bit, BitPos(TRISF4_bit+0)
0x0550	0xAF0016  	BTSC	W11, #0
0x0552	0xA882E8  	BSET	TRISF4_bit, BitPos(TRISF4_bit+0)
0x0554	0x37009D  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping80
;__Lib_PPS_24FJ128GA306.c,252 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping91:
0x0556	0xAE0016  	BTSS	W11, #0
0x0558	0xA902D8  	BCLR	TRISD0_bit, BitPos(TRISD0_bit+0)
0x055A	0xAF0016  	BTSC	W11, #0
0x055C	0xA802D8  	BSET	TRISD0_bit, BitPos(TRISD0_bit+0)
0x055E	0x370098  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping80
;__Lib_PPS_24FJ128GA306.c,253 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping92:
0x0560	0xAE0016  	BTSS	W11, #0
0x0562	0xA962D9  	BCLR	TRISD11_bit, BitPos(TRISD11_bit+0)
0x0564	0xAF0016  	BTSC	W11, #0
0x0566	0xA862D9  	BSET	TRISD11_bit, BitPos(TRISD11_bit+0)
0x0568	0x370093  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping80
;__Lib_PPS_24FJ128GA306.c,254 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping93:
0x056A	0xAE0016  	BTSS	W11, #0
0x056C	0xA942C8  	BCLR	TRISB2_bit, BitPos(TRISB2_bit+0)
0x056E	0xAF0016  	BTSC	W11, #0
0x0570	0xA842C8  	BSET	TRISB2_bit, BitPos(TRISB2_bit+0)
0x0572	0x37008E  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping80
;__Lib_PPS_24FJ128GA306.c,255 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping94:
0x0574	0xAE0016  	BTSS	W11, #0
0x0576	0xA9C2C9  	BCLR	TRISB14_bit, BitPos(TRISB14_bit+0)
0x0578	0xAF0016  	BTSC	W11, #0
0x057A	0xA8C2C9  	BSET	TRISB14_bit, BitPos(TRISB14_bit+0)
0x057C	0x370089  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping80
;__Lib_PPS_24FJ128GA306.c,257 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping95:
0x057E	0xAE0016  	BTSS	W11, #0
0x0580	0xA962E8  	BCLR	TRISF3_bit, BitPos(TRISF3_bit+0)
0x0582	0xAF0016  	BTSC	W11, #0
0x0584	0xA862E8  	BSET	TRISF3_bit, BitPos(TRISF3_bit+0)
0x0586	0x370084  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping80
;__Lib_PPS_24FJ128GA306.c,258 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping96:
0x0588	0xAE0016  	BTSS	W11, #0
0x058A	0xA9A2E8  	BCLR	TRISF5_bit, BitPos(TRISF5_bit+0)
0x058C	0xAF0016  	BTSC	W11, #0
0x058E	0xA8A2E8  	BSET	TRISF5_bit, BitPos(TRISF5_bit+0)
0x0590	0x37007F  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping80
;__Lib_PPS_24FJ128GA306.c,259 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping97:
0x0592	0xAE0016  	BTSS	W11, #0
0x0594	0xA9A2C8  	BCLR	TRISB5_bit, BitPos(TRISB5_bit+0)
0x0596	0xAF0016  	BTSC	W11, #0
0x0598	0xA8A2C8  	BSET	TRISB5_bit, BitPos(TRISB5_bit+0)
0x059A	0x37007A  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping80
;__Lib_PPS_24FJ128GA306.c,260 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping98:
0x059C	0xAE0016  	BTSS	W11, #0
0x059E	0xA902F1  	BCLR	TRISG8_bit, BitPos(TRISG8_bit+0)
0x05A0	0xAF0016  	BTSC	W11, #0
0x05A2	0xA802F1  	BSET	TRISG8_bit, BitPos(TRISG8_bit+0)
0x05A4	0x370075  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping80
;__Lib_PPS_24FJ128GA306.c,261 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping99:
0x05A6	0xAE0016  	BTSS	W11, #0
0x05A8	0xA9A2D8  	BCLR	TRISD5_bit, BitPos(TRISD5_bit+0)
0x05AA	0xAF0016  	BTSC	W11, #0
0x05AC	0xA8A2D8  	BSET	TRISD5_bit, BitPos(TRISD5_bit+0)
0x05AE	0x370070  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping80
;__Lib_PPS_24FJ128GA306.c,262 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping100:
0x05B0	0xAE0016  	BTSS	W11, #0
0x05B2	0xA9C2F0  	BCLR	TRISG6_bit, BitPos(TRISG6_bit+0)
0x05B4	0xAF0016  	BTSC	W11, #0
0x05B6	0xA8C2F0  	BSET	TRISG6_bit, BitPos(TRISG6_bit+0)
0x05B8	0x37006B  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping80
;__Lib_PPS_24FJ128GA306.c,263 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping101:
0x05BA	0xAE0016  	BTSS	W11, #0
0x05BC	0xA962D8  	BCLR	TRISD3_bit, BitPos(TRISD3_bit+0)
0x05BE	0xAF0016  	BTSC	W11, #0
0x05C0	0xA862D8  	BSET	TRISD3_bit, BitPos(TRISD3_bit+0)
0x05C2	0x370066  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping80
;__Lib_PPS_24FJ128GA306.c,264 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping102:
0x05C4	0xAE0016  	BTSS	W11, #0
0x05C6	0xA942D8  	BCLR	TRISD2_bit, BitPos(TRISD2_bit+0)
0x05C8	0xAF0016  	BTSC	W11, #0
0x05CA	0xA842D8  	BSET	TRISD2_bit, BitPos(TRISD2_bit+0)
0x05CC	0x370061  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping80
;__Lib_PPS_24FJ128GA306.c,265 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping103:
0x05CE	0xAE0016  	BTSS	W11, #0
0x05D0	0xA922D8  	BCLR	TRISD1_bit, BitPos(TRISD1_bit+0)
0x05D2	0xAF0016  	BTSC	W11, #0
0x05D4	0xA822D8  	BSET	TRISD1_bit, BitPos(TRISD1_bit+0)
0x05D6	0x37005C  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping80
;__Lib_PPS_24FJ128GA306.c,266 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping104:
0x05D8	0xAE0016  	BTSS	W11, #0
0x05DA	0xA982D8  	BCLR	TRISD4_bit, BitPos(TRISD4_bit+0)
0x05DC	0xAF0016  	BTSC	W11, #0
0x05DE	0xA882D8  	BSET	TRISD4_bit, BitPos(TRISD4_bit+0)
0x05E0	0x370057  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping80
;__Lib_PPS_24FJ128GA306.c,267 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping105:
0x05E2	0xAE0016  	BTSS	W11, #0
0x05E4	0xA9C2F0  	BCLR	TRISG6_bit, BitPos(TRISG6_bit+0)
0x05E6	0xAF0016  	BTSC	W11, #0
0x05E8	0xA8C2F0  	BSET	TRISG6_bit, BitPos(TRISG6_bit+0)
0x05EA	0x370052  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping80
;__Lib_PPS_24FJ128GA306.c,268 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping106:
0x05EC	0xAE0016  	BTSS	W11, #0
0x05EE	0xA922F1  	BCLR	TRISG9_bit, BitPos(TRISG9_bit+0)
0x05F0	0xAF0016  	BTSC	W11, #0
0x05F2	0xA822F1  	BSET	TRISG9_bit, BitPos(TRISG9_bit+0)
0x05F4	0x37004D  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping80
;__Lib_PPS_24FJ128GA306.c,269 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping107:
0x05F6	0xAE0016  	BTSS	W11, #0
0x05F8	0xA982C8  	BCLR	TRISB4_bit, BitPos(TRISB4_bit+0)
0x05FA	0xAF0016  	BTSC	W11, #0
0x05FC	0xA882C8  	BSET	TRISB4_bit, BitPos(TRISB4_bit+0)
0x05FE	0x370048  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping80
;__Lib_PPS_24FJ128GA306.c,270 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping108:
0x0600	0xAE0016  	BTSS	W11, #0
0x0602	0xA9E2C9  	BCLR	TRISB15_bit, BitPos(TRISB15_bit+0)
0x0604	0xAF0016  	BTSC	W11, #0
0x0606	0xA8E2C9  	BSET	TRISB15_bit, BitPos(TRISB15_bit+0)
0x0608	0x370043  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping80
;__Lib_PPS_24FJ128GA306.c,271 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping109:
0x060A	0xAE0016  	BTSS	W11, #0
0x060C	0xA942E8  	BCLR	TRISF2_bit, BitPos(TRISF2_bit+0)
0x060E	0xAF0016  	BTSC	W11, #0
0x0610	0xA842E8  	BSET	TRISF2_bit, BitPos(TRISF2_bit+0)
0x0612	0x37003E  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping80
;__Lib_PPS_24FJ128GA306.c,275 :: 		
L___Lib_PPS_24FJ128GA306__PPS_Mapping110:
0x0614	0xEF2000  	CLR	W0
0x0616	0x980700  	MOV	W0, [W14+0]
;__Lib_PPS_24FJ128GA306.c,277 :: 		
0x0618	0x37003B  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping80
L___Lib_PPS_24FJ128GA306__PPS_Mapping79:
0x061A	0xE15460  	CP.B	W10, #0
0x061C	0x32FF6A  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping81
L___Lib_PPS_24FJ128GA306__PPS_Mapping187:
0x061E	0xE15461  	CP.B	W10, #1
0x0620	0x32FF6D  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping82
L___Lib_PPS_24FJ128GA306__PPS_Mapping188:
0x0622	0xE15462  	CP.B	W10, #2
0x0624	0x32FF70  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping83
L___Lib_PPS_24FJ128GA306__PPS_Mapping189:
0x0626	0xE15463  	CP.B	W10, #3
0x0628	0x32FF73  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping84
L___Lib_PPS_24FJ128GA306__PPS_Mapping190:
0x062A	0xE15464  	CP.B	W10, #4
0x062C	0x32FF76  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping85
L___Lib_PPS_24FJ128GA306__PPS_Mapping191:
0x062E	0xE15466  	CP.B	W10, #6
0x0630	0x32FF79  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping86
L___Lib_PPS_24FJ128GA306__PPS_Mapping192:
0x0632	0xE15467  	CP.B	W10, #7
0x0634	0x32FF7C  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping87
L___Lib_PPS_24FJ128GA306__PPS_Mapping193:
0x0636	0xE15468  	CP.B	W10, #8
0x0638	0x32FF7F  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping88
L___Lib_PPS_24FJ128GA306__PPS_Mapping194:
0x063A	0xE15469  	CP.B	W10, #9
0x063C	0x32FF82  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping89
L___Lib_PPS_24FJ128GA306__PPS_Mapping195:
0x063E	0xE1546A  	CP.B	W10, #10
0x0640	0x32FF85  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping90
L___Lib_PPS_24FJ128GA306__PPS_Mapping196:
0x0642	0xE1546B  	CP.B	W10, #11
0x0644	0x32FF88  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping91
L___Lib_PPS_24FJ128GA306__PPS_Mapping197:
0x0646	0xE1546C  	CP.B	W10, #12
0x0648	0x32FF8B  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping92
L___Lib_PPS_24FJ128GA306__PPS_Mapping198:
0x064A	0xE1546D  	CP.B	W10, #13
0x064C	0x32FF8E  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping93
L___Lib_PPS_24FJ128GA306__PPS_Mapping199:
0x064E	0xE1546E  	CP.B	W10, #14
0x0650	0x32FF91  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping94
L___Lib_PPS_24FJ128GA306__PPS_Mapping200:
0x0652	0xE15470  	CP.B	W10, #16
0x0654	0x32FF94  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping95
L___Lib_PPS_24FJ128GA306__PPS_Mapping201:
0x0656	0xE15471  	CP.B	W10, #17
0x0658	0x32FF97  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping96
L___Lib_PPS_24FJ128GA306__PPS_Mapping202:
0x065A	0xE15472  	CP.B	W10, #18
0x065C	0x32FF9A  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping97
L___Lib_PPS_24FJ128GA306__PPS_Mapping203:
0x065E	0xE15473  	CP.B	W10, #19
0x0660	0x32FF9D  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping98
L___Lib_PPS_24FJ128GA306__PPS_Mapping204:
0x0662	0xE15474  	CP.B	W10, #20
0x0664	0x32FFA0  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping99
L___Lib_PPS_24FJ128GA306__PPS_Mapping205:
0x0666	0xE15475  	CP.B	W10, #21
0x0668	0x32FFA3  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping100
L___Lib_PPS_24FJ128GA306__PPS_Mapping206:
0x066A	0xE15476  	CP.B	W10, #22
0x066C	0x32FFA6  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping101
L___Lib_PPS_24FJ128GA306__PPS_Mapping207:
0x066E	0xE15477  	CP.B	W10, #23
0x0670	0x32FFA9  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping102
L___Lib_PPS_24FJ128GA306__PPS_Mapping208:
0x0672	0xE15478  	CP.B	W10, #24
0x0674	0x32FFAC  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping103
L___Lib_PPS_24FJ128GA306__PPS_Mapping209:
0x0676	0xE15479  	CP.B	W10, #25
0x0678	0x32FFAF  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping104
L___Lib_PPS_24FJ128GA306__PPS_Mapping210:
0x067A	0xE1547A  	CP.B	W10, #26
0x067C	0x32FFB2  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping105
L___Lib_PPS_24FJ128GA306__PPS_Mapping211:
0x067E	0xE1547B  	CP.B	W10, #27
0x0680	0x32FFB5  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping106
L___Lib_PPS_24FJ128GA306__PPS_Mapping212:
0x0682	0xE1547C  	CP.B	W10, #28
0x0684	0x32FFB8  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping107
L___Lib_PPS_24FJ128GA306__PPS_Mapping213:
0x0686	0xE1547D  	CP.B	W10, #29
0x0688	0x32FFBB  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping108
L___Lib_PPS_24FJ128GA306__PPS_Mapping214:
0x068A	0xE1547E  	CP.B	W10, #30
0x068C	0x32FFBE  	BRA Z	L___Lib_PPS_24FJ128GA306__PPS_Mapping109
L___Lib_PPS_24FJ128GA306__PPS_Mapping215:
0x068E	0x37FFC2  	BRA	L___Lib_PPS_24FJ128GA306__PPS_Mapping110
L___Lib_PPS_24FJ128GA306__PPS_Mapping80:
;__Lib_PPS_24FJ128GA306.c,279 :: 		
0x0690	0x90000E  	MOV	[W14+0], W0
;__Lib_PPS_24FJ128GA306.c,280 :: 		
L_end__PPS_Mapping:
0x0692	0xFA8000  	ULNK
0x0694	0x060000  	RETURN
; end of __Lib_PPS_24FJ128GA306__PPS_Mapping
_Lock_IOLOCK:
0x0200	0xFA0000  	LNK	#0
;__Lib_PPS_24FJ128GA306.c,100 :: 		
;__Lib_PPS_24FJ128GA306.c,101 :: 		
0x0202	0x207421  	MOV	#lo_addr(OSCCON), W1
;__Lib_PPS_24FJ128GA306.c,102 :: 		
0x0204	0x200462  	MOV	#70, W2
;__Lib_PPS_24FJ128GA306.c,103 :: 		
0x0206	0x200573  	MOV	#87, W3
;__Lib_PPS_24FJ128GA306.c,105 :: 		
0x0208	0x784882  	MOV.B	W2, [W1]
;__Lib_PPS_24FJ128GA306.c,106 :: 		
0x020A	0x784883  	MOV.B	W3, [W1]
;__Lib_PPS_24FJ128GA306.c,108 :: 		
0x020C	0xA8C742  	BSET	IOLOCK_bit, BitPos(IOLOCK_bit+0)
;__Lib_PPS_24FJ128GA306.c,109 :: 		
L_end_Lock_IOLOCK:
0x020E	0xFA8000  	ULNK
0x0210	0x060000  	RETURN
; end of _Lock_IOLOCK
_SPI1_Init_Advanced:
0x0974	0xFA0000  	LNK	#0
;__Lib_SPI_12.c,123 :: 		
; slave_select start address is: 2 (W1)
0x0976	0x97B8CE  	MOV	[W14-8], W1
; data_sample start address is: 8 (W4)
0x0978	0x97BA3E  	MOV	[W14-10], W4
; clock_idle start address is: 4 (W2)
0x097A	0x97B92E  	MOV	[W14-12], W2
; edge start address is: 6 (W3)
0x097C	0x97B99E  	MOV	[W14-14], W3
;__Lib_SPI_12.c,126 :: 		
0x097E	0xEF2240  	CLR	SPI1STAT
;__Lib_SPI_12.c,127 :: 		
0x0980	0xEF2242  	CLR	SPI1CON
;__Lib_SPI_12.c,129 :: 		
0x0982	0x207300  	MOV	#lo_addr(_SPI1_Read), W0
0x0984	0x884A20  	MOV	W0, _SPI_Rd_Ptr
;__Lib_SPI_12.c,130 :: 		
0x0986	0x207FA0  	MOV	#lo_addr(_SPI1_Write), W0
0x0988	0x884A10  	MOV	W0, _SPI_Wr_Ptr
;__Lib_SPI_12.c,132 :: 		
0x098A	0x75000B  	IOR	W10, W11, W0
0x098C	0x70000C  	IOR	W0, W12, W0
0x098E	0x70000D  	IOR	W0, W13, W0
0x0990	0x700001  	IOR	W0, W1, W0
; slave_select end address is: 2 (W1)
0x0992	0x700004  	IOR	W0, W4, W0
; data_sample end address is: 8 (W4)
;__Lib_SPI_12.c,133 :: 		
0x0994	0x700082  	IOR	W0, W2, W1
; clock_idle end address is: 4 (W2)
0x0996	0x202420  	MOV	#lo_addr(SPI1CON), W0
0x0998	0x708803  	IOR	W1, W3, [W0]
; edge end address is: 6 (W3)
;__Lib_SPI_12.c,135 :: 		
0x099A	0xA9C240  	BCLR.B	SPI1STAT, #6
;__Lib_SPI_12.c,136 :: 		
0x099C	0xA8E241  	BSET	SPI1STAT, #15
;__Lib_SPI_12.c,138 :: 		
L_end_SPI1_Init_Advanced:
0x099E	0xFA8000  	ULNK
0x09A0	0x060000  	RETURN
; end of _SPI1_Init_Advanced
_UART1_Data_Ready:
0x09AE	0xFA0000  	LNK	#0
;__Lib_UART_1234_p24_p33.c,103 :: 		
;__Lib_UART_1234_p24_p33.c,104 :: 		
0x09B0	0xBF8222  	MOV	U1STA, WREG
0x09B2	0x600061  	AND	W0, #1, W0
;__Lib_UART_1234_p24_p33.c,106 :: 		
L_end_UART1_Data_Ready:
0x09B4	0xFA8000  	ULNK
0x09B6	0x060000  	RETURN
; end of _UART1_Data_Ready
_UART1_Read:
0x09A2	0xFA0000  	LNK	#0
;__Lib_UART_1234_p24_p33.c,108 :: 		
;__Lib_UART_1234_p24_p33.c,109 :: 		
0x09A4	0x000000  	NOP
;__Lib_UART_1234_p24_p33.c,110 :: 		
0x09A6	0x000000  	NOP
;__Lib_UART_1234_p24_p33.c,111 :: 		
0x09A8	0xBF8226  	MOV	U1RXREG, WREG
;__Lib_UART_1234_p24_p33.c,112 :: 		
L_end_UART1_Read:
0x09AA	0xFA8000  	ULNK
0x09AC	0x060000  	RETURN
; end of _UART1_Read
_UART1_Write_Text:
0x07D8	0xFA0000  	LNK	#0
;__Lib_UART_1234_p24_p33.c,92 :: 		
;__Lib_UART_1234_p24_p33.c,93 :: 		
; counter start address is: 2 (W1)
0x07DA	0xEF2002  	CLR	W1
;__Lib_UART_1234_p24_p33.c,95 :: 		
; data_ start address is: 0 (W0)
0x07DC	0x78401A  	MOV.B	[W10], W0
; counter end address is: 2 (W1)
; data_ end address is: 0 (W0)
;__Lib_UART_1234_p24_p33.c,96 :: 		
L_UART1_Write_Text2:
; data_ start address is: 0 (W0)
; counter start address is: 2 (W1)
0x07DE	0xE10460  	CP.B	W0, #0
0x07E0	0x32000A  	BRA Z	L_UART1_Write_Text3
L__UART1_Write_Text129:
;__Lib_UART_1234_p24_p33.c,97 :: 		
0x07E2	0x781F8A  	PUSH	W10
; data_ end address is: 0 (W0)
0x07E4	0xFB8500  	ZE	W0, W10
0x07E6	0x07FFB0  	RCALL	_UART1_Write
0x07E8	0x78054F  	POP	W10
;__Lib_UART_1234_p24_p33.c,98 :: 		
0x07EA	0x40C061  	ADD.B	W1, #1, W0
0x07EC	0x784080  	MOV.B	W0, W1
;__Lib_UART_1234_p24_p33.c,99 :: 		
0x07EE	0xFB8000  	ZE	W0, W0
0x07F0	0x450000  	ADD	W10, W0, W0
; data_ start address is: 0 (W0)
0x07F2	0x784010  	MOV.B	[W0], W0
;__Lib_UART_1234_p24_p33.c,100 :: 		
; counter end address is: 2 (W1)
; data_ end address is: 0 (W0)
0x07F4	0x37FFF4  	BRA	L_UART1_Write_Text2
L_UART1_Write_Text3:
;__Lib_UART_1234_p24_p33.c,101 :: 		
L_end_UART1_Write_Text:
0x07F6	0xFA8000  	ULNK
0x07F8	0x060000  	RETURN
; end of _UART1_Write_Text
_UART1_Write:
0x0748	0xFA0000  	LNK	#0
;__Lib_UART_1234_p24_p33.c,86 :: 		
;__Lib_UART_1234_p24_p33.c,87 :: 		
L_UART1_Write0:
0x074A	0xAF0223  	BTSC	U1STA, #8
0x074C	0x370001  	BRA	L_UART1_Write1
0x074E	0x37FFFD  	BRA	L_UART1_Write0
L_UART1_Write1:
;__Lib_UART_1234_p24_p33.c,88 :: 		
0x0750	0x88112A  	MOV	W10, U1TXREG
;__Lib_UART_1234_p24_p33.c,89 :: 		
L_end_UART1_Write:
0x0752	0xFA8000  	ULNK
0x0754	0x060000  	RETURN
; end of _UART1_Write
_SPI1_Write:
0x07FA	0xFA0000  	LNK	#0
;__Lib_SPI_12.c,111 :: 		
;__Lib_SPI_12.c,112 :: 		
0x07FC	0x07FF99  	RCALL	_SPI1_Read
;__Lib_SPI_12.c,119 :: 		
L_end_SPI1_Write:
0x07FE	0xFA8000  	ULNK
0x0800	0x060000  	RETURN
; end of _SPI1_Write
_SPI1_Read:
0x0730	0xFA0000  	LNK	#0
;__Lib_SPI_12.c,99 :: 		
;__Lib_SPI_12.c,101 :: 		
0x0732	0xA9C240  	BCLR.B	SPI1STAT, #6
;__Lib_SPI_12.c,103 :: 		
L_SPI1_Read0:
0x0734	0xAE2240  	BTSS	SPI1STAT, #1
0x0736	0x370001  	BRA	L_SPI1_Read1
0x0738	0x37FFFD  	BRA	L_SPI1_Read0
L_SPI1_Read1:
;__Lib_SPI_12.c,104 :: 		
0x073A	0x88124A  	MOV	W10, SPI1BUF
;__Lib_SPI_12.c,105 :: 		
L_SPI1_Read2:
0x073C	0xAF0240  	BTSC	SPI1STAT, #0
0x073E	0x370001  	BRA	L_SPI1_Read3
0x0740	0x37FFFD  	BRA	L_SPI1_Read2
L_SPI1_Read3:
;__Lib_SPI_12.c,107 :: 		
0x0742	0xBF8248  	MOV	SPI1BUF, WREG
;__Lib_SPI_12.c,109 :: 		
L_end_SPI1_Read:
0x0744	0xFA8000  	ULNK
0x0746	0x060000  	RETURN
; end of _SPI1_Read
_IntToStr:
0x0904	0xFA0000  	LNK	#0
;__Lib_Conversions.c,195 :: 		
;__Lib_Conversions.c,201 :: 		
0x0906	0x781F8A  	PUSH	W10
; negative start address is: 8 (W4)
0x0908	0xEF2008  	CLR	W4
;__Lib_Conversions.c,202 :: 		
; inword start address is: 0 (W0)
0x090A	0x78000A  	MOV	W10, W0
;__Lib_Conversions.c,203 :: 		
0x090C	0xE15060  	CP	W10, #0
0x090E	0x3D0003  	BRA GE	L__IntToStr113
L__IntToStr156:
; inword end address is: 0 (W0)
;__Lib_Conversions.c,204 :: 		
0x0910	0x200014  	MOV	#1, W4
;__Lib_Conversions.c,205 :: 		
; inword start address is: 0 (W0)
0x0912	0x150060  	SUBR	W10, #0, W0
; inword end address is: 0 (W0)
; negative end address is: 8 (W4)
;__Lib_Conversions.c,206 :: 		
0x0914	0x370000  	BRA	L_IntToStr37
L__IntToStr113:
;__Lib_Conversions.c,203 :: 		
;__Lib_Conversions.c,206 :: 		
L_IntToStr37:
;__Lib_Conversions.c,207 :: 		
; inword start address is: 0 (W0)
; negative start address is: 8 (W4)
0x0916	0x780500  	MOV	W0, W10
; inword end address is: 0 (W0)
0x0918	0x07FEE7  	RCALL	_WordToStr
;__Lib_Conversions.c,209 :: 		
; i start address is: 6 (W3)
0x091A	0x200063  	MOV	#6, W3
; negative end address is: 8 (W4)
; i end address is: 6 (W3)
0x091C	0x780104  	MOV	W4, W2
;__Lib_Conversions.c,210 :: 		
L_IntToStr38:
; i start address is: 6 (W3)
; negative start address is: 4 (W2)
0x091E	0xE11860  	CP	W3, #0
0x0920	0x360006  	BRA LEU	L_IntToStr39
L__IntToStr157:
;__Lib_Conversions.c,211 :: 		
0x0922	0x458083  	ADD	W11, W3, W1
0x0924	0x518061  	SUB	W3, #1, W0
0x0926	0x458000  	ADD	W11, W0, W0
0x0928	0x784890  	MOV.B	[W0], [W1]
;__Lib_Conversions.c,212 :: 		
0x092A	0xED2006  	DEC	W3
;__Lib_Conversions.c,213 :: 		
; i end address is: 6 (W3)
0x092C	0x37FFF8  	BRA	L_IntToStr38
L_IntToStr39:
;__Lib_Conversions.c,214 :: 		
0x092E	0xB3C200  	MOV.B	#32, W0
0x0930	0x784D80  	MOV.B	W0, [W11]
;__Lib_Conversions.c,215 :: 		
0x0932	0xE20004  	CP0	W2
0x0934	0x32000C  	BRA Z	L_IntToStr40
L__IntToStr158:
; negative end address is: 4 (W2)
;__Lib_Conversions.c,216 :: 		
; i start address is: 4 (W2)
0x0936	0xEF2004  	CLR	W2
; i end address is: 4 (W2)
;__Lib_Conversions.c,217 :: 		
L_IntToStr41:
; i start address is: 4 (W2)
0x0938	0x458002  	ADD	W11, W2, W0
0x093A	0x784090  	MOV.B	[W0], W1
0x093C	0xB3C200  	MOV.B	#32, W0
0x093E	0xE10C00  	CP.B	W1, W0
0x0940	0x3A0002  	BRA NZ	L_IntToStr42
L__IntToStr159:
; i start address is: 4 (W2)
0x0942	0xEC2004  	INC	W2
; i end address is: 4 (W2)
0x0944	0x37FFF9  	BRA	L_IntToStr41
L_IntToStr42:
;__Lib_Conversions.c,218 :: 		
0x0946	0x510061  	SUB	W2, #1, W0
; i end address is: 4 (W2)
;__Lib_Conversions.c,219 :: 		
0x0948	0x458080  	ADD	W11, W0, W1
0x094A	0xB3C2D0  	MOV.B	#45, W0
0x094C	0x784880  	MOV.B	W0, [W1]
L_IntToStr40:
;__Lib_Conversions.c,220 :: 		
L_end_IntToStr:
0x094E	0x78054F  	POP	W10
0x0950	0xFA8000  	ULNK
0x0952	0x060000  	RETURN
; end of _IntToStr
_WordToStr:
0x06E8	0xFA0002  	LNK	#2
;__Lib_Conversions.c,98 :: 		
;__Lib_Conversions.c,103 :: 		
; len start address is: 4 (W2)
0x06EA	0xEF2004  	CLR	W2
; len end address is: 4 (W2)
L_WordToStr11:
; len start address is: 4 (W2)
0x06EC	0xE11465  	CP.B	W2, #5
0x06EE	0x310006  	BRA GEU	L_WordToStr12
L__WordToStr139:
;__Lib_Conversions.c,104 :: 		
0x06F0	0xFB8002  	ZE	W2, W0
0x06F2	0x458080  	ADD	W11, W0, W1
0x06F4	0xB3C200  	MOV.B	#32, W0
0x06F6	0x784880  	MOV.B	W0, [W1]
;__Lib_Conversions.c,103 :: 		
0x06F8	0xEC6004  	INC.B	W2
;__Lib_Conversions.c,104 :: 		
0x06FA	0x37FFF8  	BRA	L_WordToStr11
L_WordToStr12:
;__Lib_Conversions.c,105 :: 		
0x06FC	0xFB8002  	ZE	W2, W0
0x06FE	0x458080  	ADD	W11, W0, W1
0x0700	0xEF2000  	CLR	W0
0x0702	0x784880  	MOV.B	W0, [W1]
; len start address is: 6 (W3)
0x0704	0x5141E1  	SUB.B	W2, #1, W3
; len end address is: 4 (W2)
; len end address is: 6 (W3)
;__Lib_Conversions.c,107 :: 		
L_WordToStr14:
;__Lib_Conversions.c,108 :: 		
; len start address is: 6 (W3)
0x0706	0xFB8003  	ZE	W3, W0
0x0708	0x458000  	ADD	W11, W0, W0
0x070A	0x980700  	MOV	W0, [W14+0]
0x070C	0x2000A2  	MOV	#10, W2
0x070E	0x090011  	REPEAT	#17
0x0710	0xD88502  	DIV.U	W10, W2
0x0712	0x200300  	MOV	#48, W0
0x0714	0x408080  	ADD	W1, W0, W1
0x0716	0x90000E  	MOV	[W14+0], W0
0x0718	0x784801  	MOV.B	W1, [W0]
;__Lib_Conversions.c,109 :: 		
0x071A	0x2000A2  	MOV	#10, W2
0x071C	0x090011  	REPEAT	#17
0x071E	0xD88502  	DIV.U	W10, W2
0x0720	0x780500  	MOV	W0, W10
;__Lib_Conversions.c,110 :: 		
0x0722	0xE10060  	CP	W0, #0
0x0724	0x3A0001  	BRA NZ	L_WordToStr16
L__WordToStr140:
; len end address is: 6 (W3)
;__Lib_Conversions.c,111 :: 		
0x0726	0x370002  	BRA	L_WordToStr15
L_WordToStr16:
;__Lib_Conversions.c,112 :: 		
; len start address is: 6 (W3)
0x0728	0xED6006  	DEC.B	W3
;__Lib_Conversions.c,113 :: 		
; len end address is: 6 (W3)
0x072A	0x37FFED  	BRA	L_WordToStr14
L_WordToStr15:
;__Lib_Conversions.c,114 :: 		
L_end_WordToStr:
0x072C	0xFA8000  	ULNK
0x072E	0x060000  	RETURN
; end of _WordToStr
0x1452	0x20800A  	MOV	#2048, W10
0x1454	0x20000B  	MOV	#0, W11
0x1456	0x0900A5  	REPEAT	#165
0x1458	0x781D0B  	MOV	W11, [W10++]
0x145A	0x060000  	RETURN
0x145C	0x208001  	MOV	#lo_addr(?lstr74_MEETKAART_V1_0_joysticks), W1
0x145E	0x280000  	MOV	#32768, W0
0x1460	0x09009F  	REPEAT	#159
0x1462	0x7818B0  	MOV	[W0++], [W1++]
0x1464	0x060000  	RETURN
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr74_MEETKAART_V1_0_joysticks [4]
0x8000	0x6B6F ;?ICS?lstr74_MEETKAART_V1_0_joysticks+0
0x8002	0x000D ;?ICS?lstr74_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr74_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr70_MEETKAART_V1_0_joysticks [4]
0x8004	0x6B6F ;?ICS?lstr70_MEETKAART_V1_0_joysticks+0
0x8006	0x000D ;?ICS?lstr70_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr70_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr75_MEETKAART_V1_0_joysticks [4]
0x8008	0x6B6F ;?ICS?lstr75_MEETKAART_V1_0_joysticks+0
0x800A	0x000D ;?ICS?lstr75_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr75_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr71_MEETKAART_V1_0_joysticks [4]
0x800C	0x6B6F ;?ICS?lstr71_MEETKAART_V1_0_joysticks+0
0x800E	0x000D ;?ICS?lstr71_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr71_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr73_MEETKAART_V1_0_joysticks [4]
0x8010	0x6B6F ;?ICS?lstr73_MEETKAART_V1_0_joysticks+0
0x8012	0x000D ;?ICS?lstr73_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr73_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr68_MEETKAART_V1_0_joysticks [4]
0x8014	0x6B6F ;?ICS?lstr68_MEETKAART_V1_0_joysticks+0
0x8016	0x000D ;?ICS?lstr68_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr68_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr41_MEETKAART_V1_0_joysticks [4]
0x8018	0x6B6F ;?ICS?lstr41_MEETKAART_V1_0_joysticks+0
0x801A	0x000D ;?ICS?lstr41_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr41_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr69_MEETKAART_V1_0_joysticks [4]
0x801C	0x6B6F ;?ICS?lstr69_MEETKAART_V1_0_joysticks+0
0x801E	0x000D ;?ICS?lstr69_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr69_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr66_MEETKAART_V1_0_joysticks [4]
0x8020	0x6B6F ;?ICS?lstr66_MEETKAART_V1_0_joysticks+0
0x8022	0x000D ;?ICS?lstr66_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr66_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr67_MEETKAART_V1_0_joysticks [4]
0x8024	0x6B6F ;?ICS?lstr67_MEETKAART_V1_0_joysticks+0
0x8026	0x000D ;?ICS?lstr67_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr67_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr72_MEETKAART_V1_0_joysticks [4]
0x8028	0x6B6F ;?ICS?lstr72_MEETKAART_V1_0_joysticks+0
0x802A	0x000D ;?ICS?lstr72_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr72_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr65_MEETKAART_V1_0_joysticks [4]
0x802C	0x6B6F ;?ICS?lstr65_MEETKAART_V1_0_joysticks+0
0x802E	0x000D ;?ICS?lstr65_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr65_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr61_MEETKAART_V1_0_joysticks [2]
0x8030	0x000D ;?ICS?lstr61_MEETKAART_V1_0_joysticks+0
; end of ?ICS?lstr61_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr64_MEETKAART_V1_0_joysticks [4]
0x8032	0x6B6F ;?ICS?lstr64_MEETKAART_V1_0_joysticks+0
0x8034	0x000D ;?ICS?lstr64_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr64_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr63_MEETKAART_V1_0_joysticks [2]
0x8036	0x000D ;?ICS?lstr63_MEETKAART_V1_0_joysticks+0
; end of ?ICS?lstr63_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr62_MEETKAART_V1_0_joysticks [4]
0x8038	0x6B6F ;?ICS?lstr62_MEETKAART_V1_0_joysticks+0
0x803A	0x000D ;?ICS?lstr62_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr62_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr60_MEETKAART_V1_0_joysticks [4]
0x803C	0x6B6F ;?ICS?lstr60_MEETKAART_V1_0_joysticks+0
0x803E	0x000D ;?ICS?lstr60_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr60_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr59_MEETKAART_V1_0_joysticks [2]
0x8040	0x000D ;?ICS?lstr59_MEETKAART_V1_0_joysticks+0
; end of ?ICS?lstr59_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr58_MEETKAART_V1_0_joysticks [4]
0x8042	0x6B6F ;?ICS?lstr58_MEETKAART_V1_0_joysticks+0
0x8044	0x000D ;?ICS?lstr58_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr58_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr57_MEETKAART_V1_0_joysticks [2]
0x8046	0x000D ;?ICS?lstr57_MEETKAART_V1_0_joysticks+0
; end of ?ICS?lstr57_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr56_MEETKAART_V1_0_joysticks [4]
0x8048	0x6B6F ;?ICS?lstr56_MEETKAART_V1_0_joysticks+0
0x804A	0x000D ;?ICS?lstr56_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr56_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr54_MEETKAART_V1_0_joysticks [4]
0x804C	0x6B6F ;?ICS?lstr54_MEETKAART_V1_0_joysticks+0
0x804E	0x000D ;?ICS?lstr54_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr54_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr50_MEETKAART_V1_0_joysticks [4]
0x8050	0x6B6F ;?ICS?lstr50_MEETKAART_V1_0_joysticks+0
0x8052	0x000D ;?ICS?lstr50_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr50_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr55_MEETKAART_V1_0_joysticks [2]
0x8054	0x000D ;?ICS?lstr55_MEETKAART_V1_0_joysticks+0
; end of ?ICS?lstr55_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr51_MEETKAART_V1_0_joysticks [2]
0x8056	0x000D ;?ICS?lstr51_MEETKAART_V1_0_joysticks+0
; end of ?ICS?lstr51_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr53_MEETKAART_V1_0_joysticks [2]
0x8058	0x000D ;?ICS?lstr53_MEETKAART_V1_0_joysticks+0
; end of ?ICS?lstr53_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr49_MEETKAART_V1_0_joysticks [2]
0x805A	0x000D ;?ICS?lstr49_MEETKAART_V1_0_joysticks+0
; end of ?ICS?lstr49_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr48_MEETKAART_V1_0_joysticks [4]
0x805C	0x6B6F ;?ICS?lstr48_MEETKAART_V1_0_joysticks+0
0x805E	0x000D ;?ICS?lstr48_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr48_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr47_MEETKAART_V1_0_joysticks [4]
0x8060	0x6B6F ;?ICS?lstr47_MEETKAART_V1_0_joysticks+0
0x8062	0x000D ;?ICS?lstr47_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr47_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr46_MEETKAART_V1_0_joysticks [4]
0x8064	0x6B6F ;?ICS?lstr46_MEETKAART_V1_0_joysticks+0
0x8066	0x000D ;?ICS?lstr46_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr46_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr45_MEETKAART_V1_0_joysticks [4]
0x8068	0x6B6F ;?ICS?lstr45_MEETKAART_V1_0_joysticks+0
0x806A	0x000D ;?ICS?lstr45_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr45_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr52_MEETKAART_V1_0_joysticks [4]
0x806C	0x6B6F ;?ICS?lstr52_MEETKAART_V1_0_joysticks+0
0x806E	0x000D ;?ICS?lstr52_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr52_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr43_MEETKAART_V1_0_joysticks [4]
0x8070	0x6B6F ;?ICS?lstr43_MEETKAART_V1_0_joysticks+0
0x8072	0x000D ;?ICS?lstr43_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr43_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr39_MEETKAART_V1_0_joysticks [4]
0x8074	0x6B6F ;?ICS?lstr39_MEETKAART_V1_0_joysticks+0
0x8076	0x000D ;?ICS?lstr39_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr39_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr44_MEETKAART_V1_0_joysticks [4]
0x8078	0x6B6F ;?ICS?lstr44_MEETKAART_V1_0_joysticks+0
0x807A	0x000D ;?ICS?lstr44_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr44_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr40_MEETKAART_V1_0_joysticks [4]
0x807C	0x6B6F ;?ICS?lstr40_MEETKAART_V1_0_joysticks+0
0x807E	0x000D ;?ICS?lstr40_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr40_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr42_MEETKAART_V1_0_joysticks [4]
0x8080	0x6B6F ;?ICS?lstr42_MEETKAART_V1_0_joysticks+0
0x8082	0x000D ;?ICS?lstr42_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr42_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr38_MEETKAART_V1_0_joysticks [4]
0x8084	0x6B6F ;?ICS?lstr38_MEETKAART_V1_0_joysticks+0
0x8086	0x000D ;?ICS?lstr38_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr38_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr37_MEETKAART_V1_0_joysticks [4]
0x8088	0x6B6F ;?ICS?lstr37_MEETKAART_V1_0_joysticks+0
0x808A	0x000D ;?ICS?lstr37_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr37_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr36_MEETKAART_V1_0_joysticks [4]
0x808C	0x6B6F ;?ICS?lstr36_MEETKAART_V1_0_joysticks+0
0x808E	0x000D ;?ICS?lstr36_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr36_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr35_MEETKAART_V1_0_joysticks [4]
0x8090	0x6B6F ;?ICS?lstr35_MEETKAART_V1_0_joysticks+0
0x8092	0x000D ;?ICS?lstr35_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr35_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr34_MEETKAART_V1_0_joysticks [4]
0x8094	0x6B6F ;?ICS?lstr34_MEETKAART_V1_0_joysticks+0
0x8096	0x000D ;?ICS?lstr34_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr34_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr16_MEETKAART_V1_0_joysticks [4]
0x8098	0x6B6F ;?ICS?lstr16_MEETKAART_V1_0_joysticks+0
0x809A	0x000D ;?ICS?lstr16_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr16_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr12_MEETKAART_V1_0_joysticks [4]
0x809C	0x6B6F ;?ICS?lstr12_MEETKAART_V1_0_joysticks+0
0x809E	0x000D ;?ICS?lstr12_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr12_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr20_MEETKAART_V1_0_joysticks [4]
0x80A0	0x6B6F ;?ICS?lstr20_MEETKAART_V1_0_joysticks+0
0x80A2	0x000D ;?ICS?lstr20_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr20_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr19_MEETKAART_V1_0_joysticks [4]
0x80A4	0x6B6F ;?ICS?lstr19_MEETKAART_V1_0_joysticks+0
0x80A6	0x000D ;?ICS?lstr19_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr19_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr21_MEETKAART_V1_0_joysticks [4]
0x80A8	0x6B6F ;?ICS?lstr21_MEETKAART_V1_0_joysticks+0
0x80AA	0x000D ;?ICS?lstr21_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr21_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr14_MEETKAART_V1_0_joysticks [4]
0x80AC	0x6B6F ;?ICS?lstr14_MEETKAART_V1_0_joysticks+0
0x80AE	0x000D ;?ICS?lstr14_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr14_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr29_MEETKAART_V1_0_joysticks [4]
0x80B0	0x6B6F ;?ICS?lstr29_MEETKAART_V1_0_joysticks+0
0x80B2	0x000D ;?ICS?lstr29_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr29_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr15_MEETKAART_V1_0_joysticks [4]
0x80B4	0x6B6F ;?ICS?lstr15_MEETKAART_V1_0_joysticks+0
0x80B6	0x000D ;?ICS?lstr15_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr15_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr11_MEETKAART_V1_0_joysticks [4]
0x80B8	0x6B6F ;?ICS?lstr11_MEETKAART_V1_0_joysticks+0
0x80BA	0x000D ;?ICS?lstr11_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr11_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr13_MEETKAART_V1_0_joysticks [4]
0x80BC	0x6B6F ;?ICS?lstr13_MEETKAART_V1_0_joysticks+0
0x80BE	0x000D ;?ICS?lstr13_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr13_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr17_MEETKAART_V1_0_joysticks [4]
0x80C0	0x6B6F ;?ICS?lstr17_MEETKAART_V1_0_joysticks+0
0x80C2	0x000D ;?ICS?lstr17_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr17_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr81_MEETKAART_V1_0_joysticks [4]
0x80C4	0x6B6F ;?ICS?lstr81_MEETKAART_V1_0_joysticks+0
0x80C6	0x000D ;?ICS?lstr81_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr81_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr77_MEETKAART_V1_0_joysticks [4]
0x80C8	0x6B6F ;?ICS?lstr77_MEETKAART_V1_0_joysticks+0
0x80CA	0x000D ;?ICS?lstr77_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr77_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr84_MEETKAART_V1_0_joysticks [4]
0x80CC	0x6B6F ;?ICS?lstr84_MEETKAART_V1_0_joysticks+0
0x80CE	0x000D ;?ICS?lstr84_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr84_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr83_MEETKAART_V1_0_joysticks [4]
0x80D0	0x6B6F ;?ICS?lstr83_MEETKAART_V1_0_joysticks+0
0x80D2	0x000D ;?ICS?lstr83_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr83_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr82_MEETKAART_V1_0_joysticks [4]
0x80D4	0x6B6F ;?ICS?lstr82_MEETKAART_V1_0_joysticks+0
0x80D6	0x000D ;?ICS?lstr82_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr82_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr79_MEETKAART_V1_0_joysticks [4]
0x80D8	0x6B6F ;?ICS?lstr79_MEETKAART_V1_0_joysticks+0
0x80DA	0x000D ;?ICS?lstr79_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr79_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr18_MEETKAART_V1_0_joysticks [4]
0x80DC	0x6B6F ;?ICS?lstr18_MEETKAART_V1_0_joysticks+0
0x80DE	0x000D ;?ICS?lstr18_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr18_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr80_MEETKAART_V1_0_joysticks [4]
0x80E0	0x6B6F ;?ICS?lstr80_MEETKAART_V1_0_joysticks+0
0x80E2	0x000D ;?ICS?lstr80_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr80_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr76_MEETKAART_V1_0_joysticks [4]
0x80E4	0x6B6F ;?ICS?lstr76_MEETKAART_V1_0_joysticks+0
0x80E6	0x000D ;?ICS?lstr76_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr76_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr78_MEETKAART_V1_0_joysticks [4]
0x80E8	0x6B6F ;?ICS?lstr78_MEETKAART_V1_0_joysticks+0
0x80EA	0x000D ;?ICS?lstr78_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr78_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr9_MEETKAART_V1_0_joysticks [4]
0x80EC	0x6B6F ;?ICS?lstr9_MEETKAART_V1_0_joysticks+0
0x80EE	0x000D ;?ICS?lstr9_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr9_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr5_MEETKAART_V1_0_joysticks [4]
0x80F0	0x6B6F ;?ICS?lstr5_MEETKAART_V1_0_joysticks+0
0x80F2	0x000D ;?ICS?lstr5_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr5_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr10_MEETKAART_V1_0_joysticks [4]
0x80F4	0x6B6F ;?ICS?lstr10_MEETKAART_V1_0_joysticks+0
0x80F6	0x000D ;?ICS?lstr10_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr10_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr6_MEETKAART_V1_0_joysticks [4]
0x80F8	0x6B6F ;?ICS?lstr6_MEETKAART_V1_0_joysticks+0
0x80FA	0x000D ;?ICS?lstr6_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr6_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr8_MEETKAART_V1_0_joysticks [4]
0x80FC	0x6B6F ;?ICS?lstr8_MEETKAART_V1_0_joysticks+0
0x80FE	0x000D ;?ICS?lstr8_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr8_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr3_MEETKAART_V1_0_joysticks [4]
0x8100	0x6B6F ;?ICS?lstr3_MEETKAART_V1_0_joysticks+0
0x8102	0x000D ;?ICS?lstr3_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr3_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr33_MEETKAART_V1_0_joysticks [4]
0x8104	0x6B6F ;?ICS?lstr33_MEETKAART_V1_0_joysticks+0
0x8106	0x000D ;?ICS?lstr33_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr33_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr4_MEETKAART_V1_0_joysticks [4]
0x8108	0x6B6F ;?ICS?lstr4_MEETKAART_V1_0_joysticks+0
0x810A	0x000D ;?ICS?lstr4_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr4_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr1_MEETKAART_V1_0_joysticks [4]
0x810C	0x6B6F ;?ICS?lstr1_MEETKAART_V1_0_joysticks+0
0x810E	0x000D ;?ICS?lstr1_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr1_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr2_MEETKAART_V1_0_joysticks [4]
0x8110	0x6B6F ;?ICS?lstr2_MEETKAART_V1_0_joysticks+0
0x8112	0x000D ;?ICS?lstr2_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr2_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr7_MEETKAART_V1_0_joysticks [4]
0x8114	0x6B6F ;?ICS?lstr7_MEETKAART_V1_0_joysticks+0
0x8116	0x000D ;?ICS?lstr7_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr7_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr31_MEETKAART_V1_0_joysticks [4]
0x8118	0x6B6F ;?ICS?lstr31_MEETKAART_V1_0_joysticks+0
0x811A	0x000D ;?ICS?lstr31_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr31_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr27_MEETKAART_V1_0_joysticks [4]
0x811C	0x6B6F ;?ICS?lstr27_MEETKAART_V1_0_joysticks+0
0x811E	0x000D ;?ICS?lstr27_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr27_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr32_MEETKAART_V1_0_joysticks [4]
0x8120	0x6B6F ;?ICS?lstr32_MEETKAART_V1_0_joysticks+0
0x8122	0x000D ;?ICS?lstr32_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr32_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr28_MEETKAART_V1_0_joysticks [4]
0x8124	0x6B6F ;?ICS?lstr28_MEETKAART_V1_0_joysticks+0
0x8126	0x000D ;?ICS?lstr28_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr28_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr30_MEETKAART_V1_0_joysticks [4]
0x8128	0x6B6F ;?ICS?lstr30_MEETKAART_V1_0_joysticks+0
0x812A	0x000D ;?ICS?lstr30_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr30_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr26_MEETKAART_V1_0_joysticks [4]
0x812C	0x6B6F ;?ICS?lstr26_MEETKAART_V1_0_joysticks+0
0x812E	0x000D ;?ICS?lstr26_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr26_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr25_MEETKAART_V1_0_joysticks [4]
0x8130	0x6B6F ;?ICS?lstr25_MEETKAART_V1_0_joysticks+0
0x8132	0x000D ;?ICS?lstr25_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr25_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr24_MEETKAART_V1_0_joysticks [4]
0x8134	0x6B6F ;?ICS?lstr24_MEETKAART_V1_0_joysticks+0
0x8136	0x000D ;?ICS?lstr24_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr24_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr23_MEETKAART_V1_0_joysticks [4]
0x8138	0x6B6F ;?ICS?lstr23_MEETKAART_V1_0_joysticks+0
0x813A	0x000D ;?ICS?lstr23_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr23_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICS?lstr22_MEETKAART_V1_0_joysticks [4]
0x813C	0x6B6F ;?ICS?lstr22_MEETKAART_V1_0_joysticks+0
0x813E	0x000D ;?ICS?lstr22_MEETKAART_V1_0_joysticks+2
; end of ?ICS?lstr22_MEETKAART_V1_0_joysticks
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anin1_L0 [2]
0x8140	0x0000 ;?ICSmain_Cal_anin1_L0+0
; end of ?ICSmain_Cal_anin1_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anin2_L0 [2]
0x8142	0x002C ;?ICSmain_Cal_anin2_L0+0
; end of ?ICSmain_Cal_anin2_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anin3_L0 [2]
0x8144	0x0038 ;?ICSmain_Cal_anin3_L0+0
; end of ?ICSmain_Cal_anin3_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anin4_L0 [2]
0x8146	0x003E ;?ICSmain_Cal_anin4_L0+0
; end of ?ICSmain_Cal_anin4_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anin5_L0 [2]
0x8148	0x002C ;?ICSmain_Cal_anin5_L0+0
; end of ?ICSmain_Cal_anin5_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anin6_L0 [2]
0x814A	0x003E ;?ICSmain_Cal_anin6_L0+0
; end of ?ICSmain_Cal_anin6_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anin7_L0 [2]
0x814C	0x002C ;?ICSmain_Cal_anin7_L0+0
; end of ?ICSmain_Cal_anin7_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anin8_L0 [2]
0x814E	0x0038 ;?ICSmain_Cal_anin8_L0+0
; end of ?ICSmain_Cal_anin8_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout1_1_L0 [2]
0x8150	0xFFFD ;?ICSmain_Cal_anout1_1_L0+0
; end of ?ICSmain_Cal_anout1_1_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout1_2_L0 [2]
0x8152	0x0000 ;?ICSmain_Cal_anout1_2_L0+0
; end of ?ICSmain_Cal_anout1_2_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout1_3_L0 [2]
0x8154	0x0000 ;?ICSmain_Cal_anout1_3_L0+0
; end of ?ICSmain_Cal_anout1_3_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout2_1_L0 [2]
0x8156	0x0000 ;?ICSmain_Cal_anout2_1_L0+0
; end of ?ICSmain_Cal_anout2_1_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout2_2_L0 [2]
0x8158	0x0000 ;?ICSmain_Cal_anout2_2_L0+0
; end of ?ICSmain_Cal_anout2_2_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout2_3_L0 [2]
0x815A	0x0000 ;?ICSmain_Cal_anout2_3_L0+0
; end of ?ICSmain_Cal_anout2_3_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout3_1_L0 [2]
0x815C	0x0000 ;?ICSmain_Cal_anout3_1_L0+0
; end of ?ICSmain_Cal_anout3_1_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout3_2_L0 [2]
0x815E	0x0000 ;?ICSmain_Cal_anout3_2_L0+0
; end of ?ICSmain_Cal_anout3_2_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout3_3_L0 [2]
0x8160	0x0000 ;?ICSmain_Cal_anout3_3_L0+0
; end of ?ICSmain_Cal_anout3_3_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout4_1_L0 [2]
0x8162	0x0000 ;?ICSmain_Cal_anout4_1_L0+0
; end of ?ICSmain_Cal_anout4_1_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout4_2_L0 [2]
0x8164	0x0000 ;?ICSmain_Cal_anout4_2_L0+0
; end of ?ICSmain_Cal_anout4_2_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout4_3_L0 [2]
0x8166	0x0000 ;?ICSmain_Cal_anout4_3_L0+0
; end of ?ICSmain_Cal_anout4_3_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout5_1_L0 [2]
0x8168	0x0000 ;?ICSmain_Cal_anout5_1_L0+0
; end of ?ICSmain_Cal_anout5_1_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout5_2_L0 [2]
0x816A	0x0000 ;?ICSmain_Cal_anout5_2_L0+0
; end of ?ICSmain_Cal_anout5_2_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout5_3_L0 [2]
0x816C	0x0000 ;?ICSmain_Cal_anout5_3_L0+0
; end of ?ICSmain_Cal_anout5_3_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout6_1_L0 [2]
0x816E	0x0000 ;?ICSmain_Cal_anout6_1_L0+0
; end of ?ICSmain_Cal_anout6_1_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout6_2_L0 [2]
0x8170	0x0000 ;?ICSmain_Cal_anout6_2_L0+0
; end of ?ICSmain_Cal_anout6_2_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout6_3_L0 [2]
0x8172	0x0000 ;?ICSmain_Cal_anout6_3_L0+0
; end of ?ICSmain_Cal_anout6_3_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout7_1_L0 [2]
0x8174	0x0000 ;?ICSmain_Cal_anout7_1_L0+0
; end of ?ICSmain_Cal_anout7_1_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout7_2_L0 [2]
0x8176	0x0000 ;?ICSmain_Cal_anout7_2_L0+0
; end of ?ICSmain_Cal_anout7_2_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout8_1_L0 [2]
0x8178	0x0000 ;?ICSmain_Cal_anout8_1_L0+0
; end of ?ICSmain_Cal_anout8_1_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout8_2_L0 [2]
0x817A	0x0000 ;?ICSmain_Cal_anout8_2_L0+0
; end of ?ICSmain_Cal_anout8_2_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout8_3_L0 [2]
0x817C	0x0000 ;?ICSmain_Cal_anout8_3_L0+0
; end of ?ICSmain_Cal_anout8_3_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout9_1_L0 [2]
0x817E	0x0000 ;?ICSmain_Cal_anout9_1_L0+0
; end of ?ICSmain_Cal_anout9_1_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout9_2_L0 [2]
0x8180	0x0000 ;?ICSmain_Cal_anout9_2_L0+0
; end of ?ICSmain_Cal_anout9_2_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout9_3_L0 [2]
0x8182	0x0000 ;?ICSmain_Cal_anout9_3_L0+0
; end of ?ICSmain_Cal_anout9_3_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout10_1_L0 [2]
0x8184	0x0000 ;?ICSmain_Cal_anout10_1_L0+0
; end of ?ICSmain_Cal_anout10_1_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout10_2_L0 [2]
0x8186	0x0000 ;?ICSmain_Cal_anout10_2_L0+0
; end of ?ICSmain_Cal_anout10_2_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout10_3_L0 [2]
0x8188	0x0000 ;?ICSmain_Cal_anout10_3_L0+0
; end of ?ICSmain_Cal_anout10_3_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout11_1_L0 [2]
0x818A	0x0000 ;?ICSmain_Cal_anout11_1_L0+0
; end of ?ICSmain_Cal_anout11_1_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout11_2_L0 [2]
0x818C	0x0000 ;?ICSmain_Cal_anout11_2_L0+0
; end of ?ICSmain_Cal_anout11_2_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout11_3_L0 [2]
0x818E	0x0000 ;?ICSmain_Cal_anout11_3_L0+0
; end of ?ICSmain_Cal_anout11_3_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout12_1_L0 [2]
0x8190	0x0000 ;?ICSmain_Cal_anout12_1_L0+0
; end of ?ICSmain_Cal_anout12_1_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout12_2_L0 [2]
0x8192	0x0000 ;?ICSmain_Cal_anout12_2_L0+0
; end of ?ICSmain_Cal_anout12_2_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout12_3_L0 [2]
0x8194	0x0000 ;?ICSmain_Cal_anout12_3_L0+0
; end of ?ICSmain_Cal_anout12_3_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout13_1_L0 [2]
0x8196	0x0000 ;?ICSmain_Cal_anout13_1_L0+0
; end of ?ICSmain_Cal_anout13_1_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout13_2_L0 [2]
0x8198	0x0000 ;?ICSmain_Cal_anout13_2_L0+0
; end of ?ICSmain_Cal_anout13_2_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout13_3_L0 [2]
0x819A	0x0000 ;?ICSmain_Cal_anout13_3_L0+0
; end of ?ICSmain_Cal_anout13_3_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout14_1_L0 [2]
0x819C	0x0000 ;?ICSmain_Cal_anout14_1_L0+0
; end of ?ICSmain_Cal_anout14_1_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout14_2_L0 [2]
0x819E	0x0000 ;?ICSmain_Cal_anout14_2_L0+0
; end of ?ICSmain_Cal_anout14_2_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout14_3_L0 [2]
0x81A0	0x0000 ;?ICSmain_Cal_anout14_3_L0+0
; end of ?ICSmain_Cal_anout14_3_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout15_1_L0 [2]
0x81A2	0x0000 ;?ICSmain_Cal_anout15_1_L0+0
; end of ?ICSmain_Cal_anout15_1_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout15_2_L0 [2]
0x81A4	0x0000 ;?ICSmain_Cal_anout15_2_L0+0
; end of ?ICSmain_Cal_anout15_2_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout15_3_L0 [2]
0x81A6	0x0000 ;?ICSmain_Cal_anout15_3_L0+0
; end of ?ICSmain_Cal_anout15_3_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout16_1_L0 [2]
0x81A8	0x0000 ;?ICSmain_Cal_anout16_1_L0+0
; end of ?ICSmain_Cal_anout16_1_L0
;MEETKAART_V1_0_joysticks.c,0 :: ?ICSmain_Cal_anout16_3_L0 [2]
0x81AA	0x0000 ;?ICSmain_Cal_anout16_3_L0+0
; end of ?ICSmain_Cal_anout16_3_L0
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0200      [18]    _Lock_IOLOCK
0x0212    [1156]    __Lib_PPS_24FJ128GA306__PPS_Mapping
0x0696      [82]    __Divide_32x32
0x06E8      [72]    _WordToStr
0x0730      [24]    _SPI1_Read
0x0748      [14]    _UART1_Write
0x0756      [88]    __Modulus_32x32
0x07AE      [14]    _Delay_100ms
0x07BC       [4]    _Get_Fosc_Per_Cyc
0x07C0       [6]    _Get_Fosc_kHz
0x07C6      [18]    __Multiply_32x32
0x07D8      [34]    _UART1_Write_Text
0x07FA       [8]    _SPI1_Write
0x0802     [258]    _UART1_Init
0x0904      [80]    _IntToStr
0x0954      [14]    _PPS_Mapping_NoLock
0x0962      [18]    _Unlock_IOLOCK
0x0974      [46]    _SPI1_Init_Advanced
0x09A2      [12]    _UART1_Read
0x09AE      [10]    _UART1_Data_Ready
0x09B8    [2714]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0680       [2]    RPINR0
0x06BE       [2]    RPINR31
0x0682       [2]    RPINR1
0x068E       [2]    RPINR7
0x0684       [2]    RPINR2
0x06BC       [2]    RPINR30
0x06D8       [2]    RPOR12
0x06D6       [2]    RPOR11
0x06DA       [2]    RPOR13
0x06DE       [2]    RPOR15
0x06DC       [2]    RPOR14
0x06AE       [2]    RPINR23
0x06AC       [2]    RPINR22
0x0686       [2]    RPINR3
0x06A4       [2]    RPINR18
0x0688       [2]    RPINR4
0x06AA       [2]    RPINR21
0x0692       [2]    RPINR9
0x0690       [2]    RPINR8
0x0694       [2]    RPINR10
0x06A8       [2]    RPINR20
0x0696       [2]    RPINR11
0x0742       [0]    IOLOCK_bit
0x0742       [2]    OSCCON
0x06CE       [2]    RPOR7
0x06CC       [2]    RPOR6
0x06D0       [2]    RPOR8
0x06D4       [2]    RPOR10
0x06D2       [2]    RPOR9
0x06CA       [2]    RPOR5
0x06C2       [2]    RPOR1
0x06C0       [2]    RPOR0
0x06C4       [2]    RPOR2
0x06C8       [2]    RPOR4
0x06C6       [2]    RPOR3
0x06A6       [2]    RPINR19
0x02E8       [0]    TRISF2_bit
0x02C8       [0]    TRISB15_bit
0x0240       [2]    SPI1STAT
0x0242       [2]    SPI1CON
0x0248       [2]    SPI1BUF
0x02C8       [0]    TRISB4_bit
0x02D8       [0]    TRISD2_bit
0x02D8       [0]    TRISD3_bit
0x02D8       [0]    TRISD1_bit
0x02F0       [0]    TRISG9_bit
0x02D8       [0]    TRISD4_bit
0x0222       [2]    U1STA
0x0220       [2]    U1MODE
0x0228       [2]    U1BRG
0x0224       [2]    U1TXREG
0x0226       [2]    U1RXREG
0x0940       [2]    _UART_Tx_Idle_Ptr
0x0942       [2]    _SPI_Wr_Ptr
0x0944       [2]    _SPI_Rd_Ptr
0x0946       [2]    _UART_Wr_Ptr
0x0948       [2]    _UART_Rdy_Ptr
0x094A       [2]    _UART_Rd_Ptr
0x02C8       [0]    TRISB6_bit
0x02D8       [0]    TRISD9_bit
0x02C8       [0]    TRISB7_bit
0x02C8       [0]    TRISB9_bit
0x02C8       [0]    TRISB8_bit
0x02D8       [0]    TRISD10_bit
0x06B6       [2]    RPINR27
0x06A2       [2]    RPINR17
0x02C8       [0]    TRISB0_bit
0x02D8       [0]    TRISD8_bit
0x02C8       [0]    TRISB1_bit
0x02C8       [0]    TRISB5_bit
0x02E8       [0]    TRISF5_bit
0x02F0       [0]    TRISG8_bit
0x02F0       [0]    TRISG6_bit
0x02D8       [0]    TRISD5_bit
0x02E8       [0]    TRISF3_bit
0x02D8       [0]    TRISD0_bit
0x02E8       [0]    TRISF4_bit
0x02D8       [0]    TRISD11_bit
0x02C8       [0]    TRISB14_bit
0x02C8       [0]    TRISB2_bit
0x04E2       [2]    ANSB
0x04E8       [2]    ANSE
0x04E6       [2]    ANSD
0x02EC       [2]    LATF
0x02E6       [2]    ODCE
0x02F0       [2]    TRISG
0x02D0       [2]    TRISC
0x02C8       [2]    TRISB
0x02D8       [2]    TRISD
0x02E8       [2]    TRISF
0x02E0       [2]    TRISE
0x02DC       [2]    LATD
0x02F4       [2]    LATG
0x02E4       [2]    LATE
0x0800       [4]    ?lstr74_MEETKAART_V1_0_joysticks
0x0804       [4]    ?lstr70_MEETKAART_V1_0_joysticks
0x0808       [4]    ?lstr75_MEETKAART_V1_0_joysticks
0x080C       [4]    ?lstr71_MEETKAART_V1_0_joysticks
0x0810       [4]    ?lstr73_MEETKAART_V1_0_joysticks
0x0814       [4]    ?lstr68_MEETKAART_V1_0_joysticks
0x0818       [4]    ?lstr41_MEETKAART_V1_0_joysticks
0x081C       [4]    ?lstr69_MEETKAART_V1_0_joysticks
0x0820       [4]    ?lstr66_MEETKAART_V1_0_joysticks
0x0824       [4]    ?lstr67_MEETKAART_V1_0_joysticks
0x0828       [4]    ?lstr72_MEETKAART_V1_0_joysticks
0x082C       [4]    ?lstr65_MEETKAART_V1_0_joysticks
0x0830       [2]    ?lstr61_MEETKAART_V1_0_joysticks
0x0832       [4]    ?lstr64_MEETKAART_V1_0_joysticks
0x0836       [2]    ?lstr63_MEETKAART_V1_0_joysticks
0x0838       [4]    ?lstr62_MEETKAART_V1_0_joysticks
0x083C       [4]    ?lstr60_MEETKAART_V1_0_joysticks
0x0840       [2]    ?lstr59_MEETKAART_V1_0_joysticks
0x0842       [4]    ?lstr58_MEETKAART_V1_0_joysticks
0x0846       [2]    ?lstr57_MEETKAART_V1_0_joysticks
0x0848       [4]    ?lstr56_MEETKAART_V1_0_joysticks
0x084C       [4]    ?lstr54_MEETKAART_V1_0_joysticks
0x0850       [4]    ?lstr50_MEETKAART_V1_0_joysticks
0x0854       [2]    ?lstr55_MEETKAART_V1_0_joysticks
0x0856       [2]    ?lstr51_MEETKAART_V1_0_joysticks
0x0858       [2]    ?lstr53_MEETKAART_V1_0_joysticks
0x085A       [2]    ?lstr49_MEETKAART_V1_0_joysticks
0x085C       [4]    ?lstr48_MEETKAART_V1_0_joysticks
0x0860       [4]    ?lstr47_MEETKAART_V1_0_joysticks
0x0864       [4]    ?lstr46_MEETKAART_V1_0_joysticks
0x0868       [4]    ?lstr45_MEETKAART_V1_0_joysticks
0x086C       [4]    ?lstr52_MEETKAART_V1_0_joysticks
0x0870       [4]    ?lstr43_MEETKAART_V1_0_joysticks
0x0874       [4]    ?lstr39_MEETKAART_V1_0_joysticks
0x0878       [4]    ?lstr44_MEETKAART_V1_0_joysticks
0x087C       [4]    ?lstr40_MEETKAART_V1_0_joysticks
0x0880       [4]    ?lstr42_MEETKAART_V1_0_joysticks
0x0884       [4]    ?lstr38_MEETKAART_V1_0_joysticks
0x0888       [4]    ?lstr37_MEETKAART_V1_0_joysticks
0x088C       [4]    ?lstr36_MEETKAART_V1_0_joysticks
0x0890       [4]    ?lstr35_MEETKAART_V1_0_joysticks
0x0894       [4]    ?lstr34_MEETKAART_V1_0_joysticks
0x0898       [4]    ?lstr16_MEETKAART_V1_0_joysticks
0x089C       [4]    ?lstr12_MEETKAART_V1_0_joysticks
0x08A0       [4]    ?lstr20_MEETKAART_V1_0_joysticks
0x08A4       [4]    ?lstr19_MEETKAART_V1_0_joysticks
0x08A8       [4]    ?lstr21_MEETKAART_V1_0_joysticks
0x08AC       [4]    ?lstr14_MEETKAART_V1_0_joysticks
0x08B0       [4]    ?lstr29_MEETKAART_V1_0_joysticks
0x08B4       [4]    ?lstr15_MEETKAART_V1_0_joysticks
0x08B8       [4]    ?lstr11_MEETKAART_V1_0_joysticks
0x08BC       [4]    ?lstr13_MEETKAART_V1_0_joysticks
0x08C0       [4]    ?lstr17_MEETKAART_V1_0_joysticks
0x08C4       [4]    ?lstr81_MEETKAART_V1_0_joysticks
0x08C8       [4]    ?lstr77_MEETKAART_V1_0_joysticks
0x08CC       [4]    ?lstr84_MEETKAART_V1_0_joysticks
0x08D0       [4]    ?lstr83_MEETKAART_V1_0_joysticks
0x08D4       [4]    ?lstr82_MEETKAART_V1_0_joysticks
0x08D8       [4]    ?lstr79_MEETKAART_V1_0_joysticks
0x08DC       [4]    ?lstr18_MEETKAART_V1_0_joysticks
0x08E0       [4]    ?lstr80_MEETKAART_V1_0_joysticks
0x08E4       [4]    ?lstr76_MEETKAART_V1_0_joysticks
0x08E8       [4]    ?lstr78_MEETKAART_V1_0_joysticks
0x08EC       [4]    ?lstr9_MEETKAART_V1_0_joysticks
0x08F0       [4]    ?lstr5_MEETKAART_V1_0_joysticks
0x08F4       [4]    ?lstr10_MEETKAART_V1_0_joysticks
0x08F8       [4]    ?lstr6_MEETKAART_V1_0_joysticks
0x08FC       [4]    ?lstr8_MEETKAART_V1_0_joysticks
0x0900       [4]    ?lstr3_MEETKAART_V1_0_joysticks
0x0904       [4]    ?lstr33_MEETKAART_V1_0_joysticks
0x0908       [4]    ?lstr4_MEETKAART_V1_0_joysticks
0x090C       [4]    ?lstr1_MEETKAART_V1_0_joysticks
0x0910       [4]    ?lstr2_MEETKAART_V1_0_joysticks
0x0914       [4]    ?lstr7_MEETKAART_V1_0_joysticks
0x0918       [4]    ?lstr31_MEETKAART_V1_0_joysticks
0x091C       [4]    ?lstr27_MEETKAART_V1_0_joysticks
0x0920       [4]    ?lstr32_MEETKAART_V1_0_joysticks
0x0924       [4]    ?lstr28_MEETKAART_V1_0_joysticks
0x0928       [4]    ?lstr30_MEETKAART_V1_0_joysticks
0x092C       [4]    ?lstr26_MEETKAART_V1_0_joysticks
0x0930       [4]    ?lstr25_MEETKAART_V1_0_joysticks
0x0934       [4]    ?lstr24_MEETKAART_V1_0_joysticks
0x0938       [4]    ?lstr23_MEETKAART_V1_0_joysticks
0x093C       [4]    ?lstr22_MEETKAART_V1_0_joysticks
0x0014       [1]    FARG___Lib_PPS_24FJ128GA306__PPS_Mapping_rp_num
0x0016       [1]    FARG___Lib_PPS_24FJ128GA306__PPS_Mapping_input_output
0x0018       [1]    FARG___Lib_PPS_24FJ128GA306__PPS_Mapping_funct_name
0x001A       [2]    FARG___Lib_PPS_24FJ128GA306__PPS_Mapping_lock
0x0220       [2]    U1MODE
0x0222       [2]    U1STA
0x0224       [2]    U1TXREG
0x0226       [2]    U1RXREG
0x0228       [2]    U1BRG
0x0240       [2]    SPI1STAT
0x0242       [2]    SPI1CON
0x0248       [2]    SPI1BUF
0x02C8       [2]    TRISB
0x02D0       [2]    TRISC
0x02D8       [2]    TRISD
0x02DC       [2]    LATD
0x02E0       [2]    TRISE
0x02E4       [2]    LATE
0x02E6       [2]    ODCE
0x02E8       [2]    TRISF
0x02EC       [2]    LATF
0x02F0       [2]    TRISG
0x02F4       [2]    LATG
0x04E2       [2]    ANSB
0x04E6       [2]    ANSD
0x04E8       [2]    ANSE
0x0680       [2]    RPINR0
0x0682       [2]    RPINR1
0x0684       [2]    RPINR2
0x0686       [2]    RPINR3
0x0688       [2]    RPINR4
0x068E       [2]    RPINR7
0x0690       [2]    RPINR8
0x0692       [2]    RPINR9
0x0694       [2]    RPINR10
0x0696       [2]    RPINR11
0x06A2       [2]    RPINR17
0x06A4       [2]    RPINR18
0x06A6       [2]    RPINR19
0x06A8       [2]    RPINR20
0x06AA       [2]    RPINR21
0x06AC       [2]    RPINR22
0x06AE       [2]    RPINR23
0x06B6       [2]    RPINR27
0x06BC       [2]    RPINR30
0x06BE       [2]    RPINR31
0x06C0       [2]    RPOR0
0x06C2       [2]    RPOR1
0x06C4       [2]    RPOR2
0x06C6       [2]    RPOR3
0x06C8       [2]    RPOR4
0x06CA       [2]    RPOR5
0x06CC       [2]    RPOR6
0x06CE       [2]    RPOR7
0x06D0       [2]    RPOR8
0x06D2       [2]    RPOR9
0x06D4       [2]    RPOR10
0x06D6       [2]    RPOR11
0x06D8       [2]    RPOR12
0x06DA       [2]    RPOR13
0x06DC       [2]    RPOR14
0x06DE       [2]    RPOR15
0x0014       [2]    FARG_WordToStr_input
0x0016       [2]    FARG_WordToStr_output
0x0014       [2]    FARG_SPI1_Read_buffer
0x0742       [2]    OSCCON
0x0014       [2]    FARG_UART1_Write__data
0x0014       [2]    FARG_UART1_Write_Text_uart_text
0x0014       [2]    FARG_SPI1_Write_data_out
0x0014       [4]    FARG_UART1_Init_baud_rate
0x0014       [2]    FARG_IntToStr_input
0x0016       [2]    FARG_IntToStr_output
0x0014       [1]    FARG_PPS_Mapping_NoLock_rp_num
0x0016       [1]    FARG_PPS_Mapping_NoLock_input_output
0x0018       [1]    FARG_PPS_Mapping_NoLock_funct_name
0x0014       [2]    FARG_SPI1_Init_Advanced_master_mode
0x0016       [2]    FARG_SPI1_Init_Advanced_mode16
0x0018       [2]    FARG_SPI1_Init_Advanced_sec_prescaler
0x001A       [2]    FARG_SPI1_Init_Advanced_pri_prescaler
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x8000       [4]    ?ICS?lstr74_MEETKAART_V1_0_joysticks
0x8004       [4]    ?ICS?lstr70_MEETKAART_V1_0_joysticks
0x8008       [4]    ?ICS?lstr75_MEETKAART_V1_0_joysticks
0x800C       [4]    ?ICS?lstr71_MEETKAART_V1_0_joysticks
0x8010       [4]    ?ICS?lstr73_MEETKAART_V1_0_joysticks
0x8014       [4]    ?ICS?lstr68_MEETKAART_V1_0_joysticks
0x8018       [4]    ?ICS?lstr41_MEETKAART_V1_0_joysticks
0x801C       [4]    ?ICS?lstr69_MEETKAART_V1_0_joysticks
0x8020       [4]    ?ICS?lstr66_MEETKAART_V1_0_joysticks
0x8024       [4]    ?ICS?lstr67_MEETKAART_V1_0_joysticks
0x8028       [4]    ?ICS?lstr72_MEETKAART_V1_0_joysticks
0x802C       [4]    ?ICS?lstr65_MEETKAART_V1_0_joysticks
0x8030       [2]    ?ICS?lstr61_MEETKAART_V1_0_joysticks
0x8032       [4]    ?ICS?lstr64_MEETKAART_V1_0_joysticks
0x8036       [2]    ?ICS?lstr63_MEETKAART_V1_0_joysticks
0x8038       [4]    ?ICS?lstr62_MEETKAART_V1_0_joysticks
0x803C       [4]    ?ICS?lstr60_MEETKAART_V1_0_joysticks
0x8040       [2]    ?ICS?lstr59_MEETKAART_V1_0_joysticks
0x8042       [4]    ?ICS?lstr58_MEETKAART_V1_0_joysticks
0x8046       [2]    ?ICS?lstr57_MEETKAART_V1_0_joysticks
0x8048       [4]    ?ICS?lstr56_MEETKAART_V1_0_joysticks
0x804C       [4]    ?ICS?lstr54_MEETKAART_V1_0_joysticks
0x8050       [4]    ?ICS?lstr50_MEETKAART_V1_0_joysticks
0x8054       [2]    ?ICS?lstr55_MEETKAART_V1_0_joysticks
0x8056       [2]    ?ICS?lstr51_MEETKAART_V1_0_joysticks
0x8058       [2]    ?ICS?lstr53_MEETKAART_V1_0_joysticks
0x805A       [2]    ?ICS?lstr49_MEETKAART_V1_0_joysticks
0x805C       [4]    ?ICS?lstr48_MEETKAART_V1_0_joysticks
0x8060       [4]    ?ICS?lstr47_MEETKAART_V1_0_joysticks
0x8064       [4]    ?ICS?lstr46_MEETKAART_V1_0_joysticks
0x8068       [4]    ?ICS?lstr45_MEETKAART_V1_0_joysticks
0x806C       [4]    ?ICS?lstr52_MEETKAART_V1_0_joysticks
0x8070       [4]    ?ICS?lstr43_MEETKAART_V1_0_joysticks
0x8074       [4]    ?ICS?lstr39_MEETKAART_V1_0_joysticks
0x8078       [4]    ?ICS?lstr44_MEETKAART_V1_0_joysticks
0x807C       [4]    ?ICS?lstr40_MEETKAART_V1_0_joysticks
0x8080       [4]    ?ICS?lstr42_MEETKAART_V1_0_joysticks
0x8084       [4]    ?ICS?lstr38_MEETKAART_V1_0_joysticks
0x8088       [4]    ?ICS?lstr37_MEETKAART_V1_0_joysticks
0x808C       [4]    ?ICS?lstr36_MEETKAART_V1_0_joysticks
0x8090       [4]    ?ICS?lstr35_MEETKAART_V1_0_joysticks
0x8094       [4]    ?ICS?lstr34_MEETKAART_V1_0_joysticks
0x8098       [4]    ?ICS?lstr16_MEETKAART_V1_0_joysticks
0x809C       [4]    ?ICS?lstr12_MEETKAART_V1_0_joysticks
0x80A0       [4]    ?ICS?lstr20_MEETKAART_V1_0_joysticks
0x80A4       [4]    ?ICS?lstr19_MEETKAART_V1_0_joysticks
0x80A8       [4]    ?ICS?lstr21_MEETKAART_V1_0_joysticks
0x80AC       [4]    ?ICS?lstr14_MEETKAART_V1_0_joysticks
0x80B0       [4]    ?ICS?lstr29_MEETKAART_V1_0_joysticks
0x80B4       [4]    ?ICS?lstr15_MEETKAART_V1_0_joysticks
0x80B8       [4]    ?ICS?lstr11_MEETKAART_V1_0_joysticks
0x80BC       [4]    ?ICS?lstr13_MEETKAART_V1_0_joysticks
0x80C0       [4]    ?ICS?lstr17_MEETKAART_V1_0_joysticks
0x80C4       [4]    ?ICS?lstr81_MEETKAART_V1_0_joysticks
0x80C8       [4]    ?ICS?lstr77_MEETKAART_V1_0_joysticks
0x80CC       [4]    ?ICS?lstr84_MEETKAART_V1_0_joysticks
0x80D0       [4]    ?ICS?lstr83_MEETKAART_V1_0_joysticks
0x80D4       [4]    ?ICS?lstr82_MEETKAART_V1_0_joysticks
0x80D8       [4]    ?ICS?lstr79_MEETKAART_V1_0_joysticks
0x80DC       [4]    ?ICS?lstr18_MEETKAART_V1_0_joysticks
0x80E0       [4]    ?ICS?lstr80_MEETKAART_V1_0_joysticks
0x80E4       [4]    ?ICS?lstr76_MEETKAART_V1_0_joysticks
0x80E8       [4]    ?ICS?lstr78_MEETKAART_V1_0_joysticks
0x80EC       [4]    ?ICS?lstr9_MEETKAART_V1_0_joysticks
0x80F0       [4]    ?ICS?lstr5_MEETKAART_V1_0_joysticks
0x80F4       [4]    ?ICS?lstr10_MEETKAART_V1_0_joysticks
0x80F8       [4]    ?ICS?lstr6_MEETKAART_V1_0_joysticks
0x80FC       [4]    ?ICS?lstr8_MEETKAART_V1_0_joysticks
0x8100       [4]    ?ICS?lstr3_MEETKAART_V1_0_joysticks
0x8104       [4]    ?ICS?lstr33_MEETKAART_V1_0_joysticks
0x8108       [4]    ?ICS?lstr4_MEETKAART_V1_0_joysticks
0x810C       [4]    ?ICS?lstr1_MEETKAART_V1_0_joysticks
0x8110       [4]    ?ICS?lstr2_MEETKAART_V1_0_joysticks
0x8114       [4]    ?ICS?lstr7_MEETKAART_V1_0_joysticks
0x8118       [4]    ?ICS?lstr31_MEETKAART_V1_0_joysticks
0x811C       [4]    ?ICS?lstr27_MEETKAART_V1_0_joysticks
0x8120       [4]    ?ICS?lstr32_MEETKAART_V1_0_joysticks
0x8124       [4]    ?ICS?lstr28_MEETKAART_V1_0_joysticks
0x8128       [4]    ?ICS?lstr30_MEETKAART_V1_0_joysticks
0x812C       [4]    ?ICS?lstr26_MEETKAART_V1_0_joysticks
0x8130       [4]    ?ICS?lstr25_MEETKAART_V1_0_joysticks
0x8134       [4]    ?ICS?lstr24_MEETKAART_V1_0_joysticks
0x8138       [4]    ?ICS?lstr23_MEETKAART_V1_0_joysticks
0x813C       [4]    ?ICS?lstr22_MEETKAART_V1_0_joysticks
0x8140       [2]    ?ICSmain_Cal_anin1_L0
0x8142       [2]    ?ICSmain_Cal_anin2_L0
0x8144       [2]    ?ICSmain_Cal_anin3_L0
0x8146       [2]    ?ICSmain_Cal_anin4_L0
0x8148       [2]    ?ICSmain_Cal_anin5_L0
0x814A       [2]    ?ICSmain_Cal_anin6_L0
0x814C       [2]    ?ICSmain_Cal_anin7_L0
0x814E       [2]    ?ICSmain_Cal_anin8_L0
0x8150       [2]    ?ICSmain_Cal_anout1_1_L0
0x8152       [2]    ?ICSmain_Cal_anout1_2_L0
0x8154       [2]    ?ICSmain_Cal_anout1_3_L0
0x8156       [2]    ?ICSmain_Cal_anout2_1_L0
0x8158       [2]    ?ICSmain_Cal_anout2_2_L0
0x815A       [2]    ?ICSmain_Cal_anout2_3_L0
0x815C       [2]    ?ICSmain_Cal_anout3_1_L0
0x815E       [2]    ?ICSmain_Cal_anout3_2_L0
0x8160       [2]    ?ICSmain_Cal_anout3_3_L0
0x8162       [2]    ?ICSmain_Cal_anout4_1_L0
0x8164       [2]    ?ICSmain_Cal_anout4_2_L0
0x8166       [2]    ?ICSmain_Cal_anout4_3_L0
0x8168       [2]    ?ICSmain_Cal_anout5_1_L0
0x816A       [2]    ?ICSmain_Cal_anout5_2_L0
0x816C       [2]    ?ICSmain_Cal_anout5_3_L0
0x816E       [2]    ?ICSmain_Cal_anout6_1_L0
0x8170       [2]    ?ICSmain_Cal_anout6_2_L0
0x8172       [2]    ?ICSmain_Cal_anout6_3_L0
0x8174       [2]    ?ICSmain_Cal_anout7_1_L0
0x8176       [2]    ?ICSmain_Cal_anout7_2_L0
0x8178       [2]    ?ICSmain_Cal_anout8_1_L0
0x817A       [2]    ?ICSmain_Cal_anout8_2_L0
0x817C       [2]    ?ICSmain_Cal_anout8_3_L0
0x817E       [2]    ?ICSmain_Cal_anout9_1_L0
0x8180       [2]    ?ICSmain_Cal_anout9_2_L0
0x8182       [2]    ?ICSmain_Cal_anout9_3_L0
0x8184       [2]    ?ICSmain_Cal_anout10_1_L0
0x8186       [2]    ?ICSmain_Cal_anout10_2_L0
0x8188       [2]    ?ICSmain_Cal_anout10_3_L0
0x818A       [2]    ?ICSmain_Cal_anout11_1_L0
0x818C       [2]    ?ICSmain_Cal_anout11_2_L0
0x818E       [2]    ?ICSmain_Cal_anout11_3_L0
0x8190       [2]    ?ICSmain_Cal_anout12_1_L0
0x8192       [2]    ?ICSmain_Cal_anout12_2_L0
0x8194       [2]    ?ICSmain_Cal_anout12_3_L0
0x8196       [2]    ?ICSmain_Cal_anout13_1_L0
0x8198       [2]    ?ICSmain_Cal_anout13_2_L0
0x819A       [2]    ?ICSmain_Cal_anout13_3_L0
0x819C       [2]    ?ICSmain_Cal_anout14_1_L0
0x819E       [2]    ?ICSmain_Cal_anout14_2_L0
0x81A0       [2]    ?ICSmain_Cal_anout14_3_L0
0x81A2       [2]    ?ICSmain_Cal_anout15_1_L0
0x81A4       [2]    ?ICSmain_Cal_anout15_2_L0
0x81A6       [2]    ?ICSmain_Cal_anout15_3_L0
0x81A8       [2]    ?ICSmain_Cal_anout16_1_L0
0x81AA       [2]    ?ICSmain_Cal_anout16_3_L0
